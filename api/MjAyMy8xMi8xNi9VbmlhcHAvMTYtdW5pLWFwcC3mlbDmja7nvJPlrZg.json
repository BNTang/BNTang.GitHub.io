{"title":"uni-app-数据缓存","date":"2023-12-16T03:03:44.000Z","date_formatted":{"ll":"Dec 16, 2023","L":"12/16/2023","MM-DD":"12-16"},"link":"2023/12/16/Uniapp/16-uni-app-数据缓存","tags":["Uniapp"],"updated":"2023-12-17T03:28:25.014Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231203181913926-1645304642.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<ul>\n<li>好，经过上个章节的介绍完毕之后，给大家补充了一下 uni-app-数据传递的内容</li>\n<li>那么补充了 uni-app-数据传递的内容之后，这篇文章来给大家介绍一下 uni-app-数据缓存</li>\n</ul>\n<h1 id=\"搭建项目\">搭建项目<a title=\"#搭建项目\" href=\"#搭建项目\"></a></h1>\n<ul>\n<li>首先我们还是要先搭建一个项目，这里我就不多说了，大家可以参考上一篇文章</li>\n<li>搭建好项目之后，我们就可以开始我们的正文了</li>\n</ul>\n<h1 id=\"步入正题\">步入正题<a title=\"#步入正题\" href=\"#步入正题\"></a></h1>\n<ul>\n<li>首先我们先来看一下 uni-app-数据缓存的 API</li>\n<li>官方文档：<a href=\"https://uniapp.dcloud.net.cn/api/storage/storage.html\" target=\"_blank\">https://uniapp.dcloud.net.cn/api/storage/storage.html</a></li>\n<li>介绍方向大致就是新增，获取，删除，清空，清空所有（分为异步与同步操作）</li>\n</ul>\n<h2 id=\"新增\">新增<a title=\"#新增\" href=\"#新增\"></a></h2>\n<ul>\n<li>新增的话，我们可以通过 <code>uni.setStorage(OBJECT)</code> 来进行新增</li>\n<li>新增的话，我们可以通过 <code>uni.setStorageSync(KEY,DATA)</code> 来进行新增</li>\n<li>两者的区别就是一个是异步，一个是同步，带有 <code>Sync</code> 的就是同步的，不带有 <code>Sync</code> 的就是异步的</li>\n<li>两者的参数不一样，一个是传递一个对象，一个是传递两个参数</li>\n</ul>\n<p>好了，下面我们来看一下具体的使用, 首先看同步，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">&lt;template&gt;<br>\t&lt;view&gt;<br>\t\t&lt;text&gt;&#123;&#123; name &#125;&#125;&lt;/text&gt;<br>\t\t&lt;button type=&quot;primary&quot; @click=&quot;add&quot;&gt;新增&lt;/button&gt;<br>\t&lt;/view&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>\texport default &#123;<br>\t\tdata() &#123;<br>\t\t\treturn &#123;<br>\t\t\t\tname: &quot;BNTang&quot;<br>\t\t\t&#125;<br>\t\t&#125;,<br>\t\tonLoad() &#123;&#125;,<br>\t\tmethods: &#123;<br>\t\t\tadd() &#123;<br>\t\t\t\ttry &#123;<br>\t\t\t\t\tuni.setStorageSync(&#x27;name&#x27;, &#x27;king&#x27;);<br>\t\t\t\t&#125; catch (e) &#123;<br>\t\t\t\t\t// error<br>\t\t\t\t&#125;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p>运行测试效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231217110540929-778854770.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>好了，下面我们来看一下异步，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">add() &#123;<br>    uni.setStorage(&#123;<br>        key: &#x27;name&#x27;,<br>        data: &#x27;hello BNTang&#x27;,<br>        success: function() &#123;<br>            console.log(&#x27;success&#x27;);<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行测试效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231217110707462-44653216.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"获取\">获取<a title=\"#获取\" href=\"#获取\"></a></h2>\n<ul>\n<li>获取的话，我们可以通过 <code>uni.getStorage(OBJECT)</code> 来进行获取</li>\n<li>获取的话，我们可以通过 <code>uni.getStorageSync(KEY)</code> 来进行获取</li>\n</ul>\n<p>看一下具体的使用, 首先看同步，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">&lt;button type=&quot;primary&quot; @click=&quot;get&quot;&gt;获取&lt;/button&gt;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">get() &#123;<br>    try &#123;<br>        this.name = uni.getStorageSync(&#x27;name&#x27;);<br>    &#125; catch (e) &#123;<br>        // error<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行测试效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231217111105955-1940036919.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>来看一下异步，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">get() &#123;<br>    const that = this<br>    uni.getStorage(&#123;<br>        key: &#x27;name&#x27;,<br>        success: function(res) &#123;<br>            that.name = res.data<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行测试效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231217111105955-1940036919.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"删除\">删除<a title=\"#删除\" href=\"#删除\"></a></h2>\n<ul>\n<li>删除的话，我们可以通过 <code>uni.removeStorage(OBJECT)</code> 来进行删除</li>\n<li>删除的话，我们可以通过 <code>uni.removeStorageSync(KEY)</code> 来进行删除</li>\n</ul>\n<p>看一下具体的使用, 首先看同步，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">&lt;button type=&quot;primary&quot; @click=&quot;del&quot;&gt;删除&lt;/button&gt;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">del() &#123;<br>    try &#123;<br>        uni.removeStorageSync(&#x27;name&#x27;);<br>    &#125; catch (e) &#123;<br>        // error<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行测试效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231217111632187-1005677547.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>点击删除按钮之后：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231217111701886-1303511816.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>异步略过，大家可以自己去试一下。</p>\n<h2 id=\"清空\">清空<a title=\"#清空\" href=\"#清空\"></a></h2>\n<ul>\n<li>清空的话，我们可以通过 <code>uni.clearStorage()</code> 来进行清空</li>\n<li>清空的话，我们可以通过 <code>uni.clearStorageSync()</code> 来进行清空</li>\n</ul>\n<p>看一下具体的使用, 首先看同步，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">&lt;button type=&quot;primary&quot; @click=&quot;clear&quot;&gt;清空&lt;/button&gt;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">clear() &#123;<br>    try &#123;<br>        uni.clearStorageSync();<br>    &#125; catch (e) &#123;<br>        // error<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>运行测试效果，记得存储点进去之后，再点击清空按钮，这个就不上图片了，大家自己去试一下</li>\n<li>异步略过，大家可以自己去试一下</li>\n</ul>\n<h1 id=\"getstorageinfo\">getStorageInfo<a title=\"#getstorageinfo\" href=\"#getstorageinfo\"></a></h1>\n<p>再给大家补充一个，getStorageInfo，这个 API 可以获取当前 storage 的相关信息，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">&lt;button type=&quot;primary&quot; @click=&quot;getStorageInfoFn&quot;&gt;getStorageInfo&lt;/button&gt;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">getStorageInfoFn() &#123;<br>    try &#123;<br>        const res = uni.getStorageInfoSync();<br>        <br>        console.log(res);<br>        console.log(res.keys);<br>        console.log(res.currentSize);<br>        console.log(res.limitSize);<br>    &#125; catch (e) &#123;<br>        // error<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行输出结果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231217112357913-180535410.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>keys：当前 storage 中所有的 key</li>\n<li>currentSize：当前占用的空间大小, 单位 kb</li>\n<li>limitSize：限制的空间大小, 单位 kb</li>\n<li>异步略过，大家可以自己去试一下</li>\n</ul>\n<blockquote>\n<p>和 HTML5 的数据缓存是一样的都是放到 Storage 里面的</p>\n</blockquote>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<ul>\n<li>如果你有任何问题或建议，欢迎在下方留言，我会尽快回复</li>\n<li>如果你觉得本文对你有帮助，欢迎点赞、收藏，你的支持是我写作的最大动力</li>\n</ul>\n<blockquote>\n<p><a href=\"https://cloud.tencent.com/developer/article/2366050?from_column=20421&amp;from=20421\" target=\"_blank\">我正在参与2023腾讯技术创作特训营第四期有奖征文，快来和我瓜分大奖！</a></p>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231129232539490-1458223711.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"uni-app-pinia存储数据","link":"2023/12/17/Uniapp/17-uni-app-pinia存储数据"},"next":{"title":"uni-app-数据传递补充","link":"2023/12/10/Uniapp/15-uni-app-数据传递补充"},"plink":"http://example.com/2023/12/16/Uniapp/16-uni-app-数据缓存/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"搭建项目","title":"搭建项目","index":"2"},{"id":"步入正题","title":"步入正题","index":"3","children":[{"id":"新增","title":"新增","index":"3.1"},{"id":"获取","title":"获取","index":"3.2"},{"id":"删除","title":"删除","index":"3.3"},{"id":"清空","title":"清空","index":"3.4"}]},{"id":"getstorageinfo","title":"getStorageInfo","index":"4"},{"id":"end","title":"End","index":"5"}],"reading_time":"1114 words in 7 min"}