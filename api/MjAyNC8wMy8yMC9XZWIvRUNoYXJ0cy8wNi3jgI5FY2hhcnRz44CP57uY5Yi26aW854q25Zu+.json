{"title":"『Echarts』绘制饼状图","date":"2024-03-19T16:08:48.000Z","date_formatted":{"ll":"Mar 20, 2024","L":"03/20/2024","MM-DD":"03-20"},"link":"2024/03/20/Web/ECharts/06-『Echarts』绘制饼状图","tags":["Echarts"],"updated":"2024-03-24T15:52:59.750Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240320000841061-183744631.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<blockquote>\n<ul>\n<li>本篇文章是『Echarts』文章的第 6 篇，主要介绍『Echarts』绘制饼状图</li>\n</ul>\n</blockquote>\n<p>经过上一篇文章的介绍，给大家详细的介绍了一下『Echarts』当中的弹窗组件与数据标记，那么了解完了弹窗组件与数据标记之后，这篇文章再继续来给大家介绍一下『Echarts』当中的饼状图。</p>\n<p>那么饼状图该怎么看呢？我说过通过『Echarts』绘制图形，步骤都是一样的，我们主要就是关注一下『Echarts』的配置文件内容就可以了，所以说我们就在来看一下这个配置文件当中的内容即可。</p>\n<h1 id=\"正文\">正文<a title=\"#正文\" href=\"#正文\"></a></h1>\n<p>如果在『Echarts』中绘制饼状图的话 X轴 与 Y轴，是不需要了：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    ...<br>    <br><span class=\"hljs-deletion\">-   xAxis: &#123;</span><br><span class=\"hljs-deletion\">-       data: [&#x27;衬衫&#x27;, &#x27;羊毛衫&#x27;, &#x27;雪纺衫&#x27;, &#x27;裤子&#x27;, &#x27;高跟鞋&#x27;, &#x27;袜子&#x27;]</span><br><span class=\"hljs-deletion\">-   &#125;,</span><br><span class=\"hljs-deletion\">-   yAxis: &#123;&#125;,</span><br>    <br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>如果是绘制饼状图，需要告诉『Echarts』饼状图中有那些数据，所以说数据里面的内容，就需要进行修改和调整。</p>\n<h2 id=\"配置饼状图\">配置饼状图<a title=\"#配置饼状图\" href=\"#配置饼状图\"></a></h2>\n<p>首先将对象当中的 name 属性去掉我不需要了：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    ...<br>    <br>    series: [<br>        &#123;<br><span class=\"hljs-deletion\">-           name: &#x27;销量&#x27;,</span><br>            type: &#x27;bar&#x27;,<br>            data: [5, 20, 36, 10, 10, 20]<br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>然后将类型(type)改为 pie，意思就是改为饼状图：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    ...<br>    <br>    series: [<br>        &#123;<br><span class=\"hljs-deletion\">-           type: &#x27;bar&#x27;,</span><br><span class=\"hljs-addition\">+           type: &#x27;pie&#x27;,</span><br>            data: [5, 20, 36, 10, 10, 20]<br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>type 改完了，data 也需要更改，data 还是接收一个数组，只不过这次数组中的传递的都是对象，对象的属性分别是 value，name：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    ...<br>    <br>    series: [<br>        &#123;<br>            type: &#x27;pie&#x27;,<br><span class=\"hljs-deletion\">-           data: [5, 20, 36, 10, 10, 20]</span><br><span class=\"hljs-addition\">+           data: [</span><br><span class=\"hljs-addition\">+               &#123;value: 335, name: &#x27;销量&#x27;&#125;,</span><br><span class=\"hljs-addition\">+               &#123;value: 310, name: &#x27;产量&#x27;&#125;,</span><br><span class=\"hljs-addition\">+               &#123;value: 234, name: &#x27;容量&#x27;&#125;</span><br><span class=\"hljs-addition\">+           ]</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这个时候『Echarts』就会根据这个 data 数据来绘制饼状图了。</p>\n<p>到这还没完，前面我说过，图例当中的名称必须与数据当中的名称一一对应，通过观察我的代码我的图例中只有销量，产量，少了容量，所以我需要在 legend 中添加一个容量：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    ...<br>    <br>    legend: &#123;<br>        data: [&#x27;销量&#x27;, &#x27;产量&#x27;, &#x27;容量&#x27;]<br>    &#125;,<br>    <br>    series: [<br>        &#123;<br>            type: &#x27;pie&#x27;,<br>            data: [<br>                &#123;value: 335, name: &#x27;销量&#x27;&#125;,<br>                &#123;value: 310, name: &#x27;产量&#x27;&#125;,<br>                &#123;value: 234, name: &#x27;容量&#x27;&#125;<br>            ]<br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>到这里，饼状图的配置就完成了，简单的来验证一下再浏览器中打开看一下效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240320002947689-2041086755.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>从截图中可以看到，饼状图已经绘制出来了，有三条数据，分别是销量、产量、容量，这三条数据是按照我在配置文件中设置来绘制的。</p>\n<p>没问题了之后还没完，我发现这个饼状图在绘制好之后有默认的半径，这个半径呢我们是可以进行修改的。</p>\n<h2 id=\"修改半径\">修改半径<a title=\"#修改半径\" href=\"#修改半径\"></a></h2>\n<p>这个饼状图在绘制的时候是有自带的默认的位置，默认的就是水平垂直居中的，这个位置我们也是可以修改的，说到这就先来修改一下饼状图的半径，更改方式非常的简单，在 series 的数据当中，添加一个新的属性 radius，我给他取值为 <code>20px</code>：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    ...<br>    <br>    series: [<br>        &#123;<br>            type: &#x27;pie&#x27;,<br><span class=\"hljs-addition\">+           radius: &#x27;20px&#x27;,</span><br>            data: [<br>                &#123;value: 335, name: &#x27;销量&#x27;&#125;,<br>                &#123;value: 310, name: &#x27;产量&#x27;&#125;,<br>                &#123;value: 234, name: &#x27;容量&#x27;&#125;<br>            ]<br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这个时候再来看一下效果，打开浏览器看一下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240324233903213-1648728679.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>可以看到已经发生了改变，已经生效了，那么除了可以用 px 以外还可以使用百分比的方式来进行设置，比如说我又更改为 <code>百分之三十</code>：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    ...<br>    <br>    series: [<br>        &#123;<br>            type: &#x27;pie&#x27;,<br><span class=\"hljs-deletion\">-           radius: &#x27;20px&#x27;,</span><br><span class=\"hljs-addition\">+           radius: &#x27;30%&#x27;,</span><br>            data: [<br>                &#123;value: 335, name: &#x27;销量&#x27;&#125;,<br>                &#123;value: 310, name: &#x27;产量&#x27;&#125;,<br>                &#123;value: 234, name: &#x27;容量&#x27;&#125;<br>            ]<br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>再来看一下效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240324234022168-334826210.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>好了到此这个就是修改饼状图的半径，那么除了半径我是不是说过，还可以移位置。</p>\n<h2 id=\"移动位置\">移动位置<a title=\"#移动位置\" href=\"#移动位置\"></a></h2>\n<p>更改位置其实也非常的简单，同样的在 series 的数据当中，有一个 <code>center</code> 属性，这个属性是用来设置饼状图的位置的，这个属性接收一个数组，数组的第一个值是 x轴，第二个值是 y轴，这个值是百分比的形式，比如说我设置为 <code>['30%', '50%']</code>：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    ...<br>    <br>    series: [<br>        &#123;<br>            type: &#x27;pie&#x27;,<br>            radius: &#x27;30%&#x27;,<br><span class=\"hljs-addition\">+           center: [&#x27;30%&#x27;, &#x27;50%&#x27;],</span><br>            data: [<br>                &#123;value: 335, name: &#x27;销量&#x27;&#125;,<br>                &#123;value: 310, name: &#x27;产量&#x27;&#125;,<br>                &#123;value: 234, name: &#x27;容量&#x27;&#125;<br>            ]<br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>看一下效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240324235214004-482834287.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Echarts』完结","link":"2024/03/24/Web/ECharts/07-『Echarts』完结"},"next":{"title":"『Java 语法基础』String、StringBuffer 与 StringBuilder 的区别","link":"2024/03/18/面试题/Java/Java 基础/07-『Java 语法基础』String、StringBuffer 与 StringBuilder 的区别"},"plink":"http://example.com/2024/03/20/Web/ECharts/06-『Echarts』绘制饼状图/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"正文","title":"正文","index":"2","children":[{"id":"配置饼状图","title":"配置饼状图","index":"2.1"},{"id":"修改半径","title":"修改半径","index":"2.2"},{"id":"移动位置","title":"移动位置","index":"2.3"}]}],"reading_time":"1211 words in 8 min"}