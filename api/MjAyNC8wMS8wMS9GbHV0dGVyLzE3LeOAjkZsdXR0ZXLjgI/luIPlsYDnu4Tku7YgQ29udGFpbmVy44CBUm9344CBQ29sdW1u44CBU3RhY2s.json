{"title":"『Flutter』布局组件 Container、Row、Column、Stack","date":"2023-12-31T18:10:49.000Z","date_formatted":{"ll":"Jan 1, 2024","L":"01/01/2024","MM-DD":"01-01"},"link":"2024/01/01/Flutter/17-『Flutter』布局组件 Container、Row、Column、Stack","tags":["Flutter"],"updated":"2024-01-09T05:51:10.857Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240101021010390-2099104304.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>经过上一篇文章，开发出来了第二个 Flutter 程序，接下来是给大家详细的介绍下 Flutter 的布局组件。</p>\n<h1 id=\"2.布局组件\">2.布局组件<a title=\"#2.布局组件\" href=\"#2.布局组件\"></a></h1>\n<p>Flutter 的布局组件非常的多，这里我就给大家介绍几个常用的布局组件，其他的布局组件大家可以去官方文档查看。</p>\n<p>官方文档：<a href=\"https://flutter.dev/docs/development/ui/widgets/layout\" target=\"_blank\">https://flutter.dev/docs/development/ui/widgets/layout</a></p>\n<h2 id=\"2.1.-container\">2.1. Container<a title=\"#2.1.-container\" href=\"#2.1.-container\"></a></h2>\n<p>Flutter中的<code>Container</code>组件是一个非常通用且多功能的布局构件。它可以用来创建矩形的视觉元素，可以装饰以盒子装饰（例如背景色或边框），也可以配置边距、填充和尺寸约束。<code>Container</code>可以包含一个单独的子元素，但不是专门用来做子元素布局的，对于布局，Flutter提供了其他组件如<code>Row</code>、<code>Column</code>或<code>Stack</code>。</p>\n<p><strong>常用属性</strong>：</p>\n<ol>\n<li><strong>child</strong>: 容器内的单个子Widget。</li>\n<li><strong>padding</strong>: 插入子Widget周围的空白空间。</li>\n<li><strong>color</strong>: 容器的背景颜色。</li>\n<li><strong>decoration</strong>: 绘制在容器上的装饰，通常用于添加背景图像、边框、阴影等。</li>\n<li><strong>margin</strong>: 围绕容器外边缘的空白空间。</li>\n<li><strong>width</strong> 和 <strong>height</strong>: 容器的宽度和高度。</li>\n<li><strong>alignment</strong>: 控制子Widget如何在容器内对齐。</li>\n</ol>\n<p><strong>示例代码</strong>：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>      <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>          appBar: AppBar(<br>            backgroundColor: Colors.blue,<br>            title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>            centerTitle: <span class=\"hljs-keyword\">true</span>,<br>          ),<br>          body: Container(<br>            width: <span class=\"hljs-number\">150.0</span>,<br>            height: <span class=\"hljs-number\">150.0</span>,<br>            padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.all(<span class=\"hljs-number\">16.0</span>),<br>            margin: <span class=\"hljs-keyword\">const</span> EdgeInsets.symmetric(horizontal: <span class=\"hljs-number\">20.0</span>),<br>            alignment: Alignment.center,<br>            color: Colors.blue,<br>            child: <span class=\"hljs-keyword\">const</span> Text(<br>              <span class=\"hljs-string\">&#x27;Hello Container!&#x27;</span>,<br>              style: TextStyle(color: Colors.white),<br>            ),<br>          ))));<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>效果图</strong>：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240101023850404-1870226934.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"2.2.-row\">2.2. Row<a title=\"#2.2.-row\" href=\"#2.2.-row\"></a></h2>\n<p>在Flutter中，Row和Column是用于布局的基本组件，它们分别用于在水平和垂直方向上排列子组件。</p>\n<p>Row组件可以在水平方向上排列其子组件。它是一个灵活的布局工具，常用于创建水平布局。</p>\n<p><strong>常用属性</strong>：</p>\n<ul>\n<li><strong>children</strong>: <code>Row</code>中的子组件列表。</li>\n<li><strong>mainAxisAlignment</strong>: 如何沿主轴（在此情况下为水平方向）对齐子组件。</li>\n<li><strong>crossAxisAlignment</strong>: 如何沿交叉轴（在此情况下为垂直方向）对齐子组件。</li>\n<li><strong>mainAxisSize</strong>: 主轴的大小，默认为<code>MainAxisSize.max</code>。</li>\n</ul>\n<p><strong>示例代码</strong>：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>      <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>          appBar: AppBar(<br>            backgroundColor: Colors.blue,<br>            title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>            centerTitle: <span class=\"hljs-keyword\">true</span>,<br>          ),<br>          body: <span class=\"hljs-keyword\">const</span> Row(<br>            mainAxisAlignment: MainAxisAlignment.spaceEvenly,<br>            children: &lt;Widget&gt;[<br>              Icon(Icons.share),<br>              Icon(Icons.thumb_up),<br>              Icon(Icons.thumb_down),<br>            ],<br>          )<br>      )<br>    )<br> );<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>效果图</strong>：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240101024239548-1157630217.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>这个例子创建了一个Row，其中包含三个图标，这些图标在行中均匀分布。</p>\n<h2 id=\"2.3.-column\">2.3. Column<a title=\"#2.3.-column\" href=\"#2.3.-column\"></a></h2>\n<p><code>Column</code>组件用于在垂直方向上排列其子组件。</p>\n<p><strong>常用属性：</strong></p>\n<ul>\n<li><strong>children</strong>: <code>Column</code>中的子组件列表。</li>\n<li><strong>mainAxisAlignment</strong>: 如何沿主轴（在此情况下为垂直方向）对齐子组件。</li>\n<li><strong>crossAxisAlignment</strong>: 如何沿交叉轴（在此情况下为水平方向）对齐子组件。</li>\n<li><strong>mainAxisSize</strong>: 主轴的大小，默认为<code>MainAxisSize.max</code>。</li>\n</ul>\n<p><strong>示例代码：</strong></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>      <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>          appBar: AppBar(<br>            backgroundColor: Colors.blue,<br>            title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>            centerTitle: <span class=\"hljs-keyword\">true</span>,<br>          ),<br>          body: <span class=\"hljs-keyword\">const</span> Column(<br>            mainAxisAlignment: MainAxisAlignment.center,<br>            children: &lt;Widget&gt;[<br>              Text(<span class=\"hljs-string\">&#x27;First Item&#x27;</span>),<br>              Text(<span class=\"hljs-string\">&#x27;Second Item&#x27;</span>),<br>              Text(<span class=\"hljs-string\">&#x27;Third Item&#x27;</span>),<br>            ],<br>          )<br>      )<br>    )<br> );<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>效果图：</strong></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240101024426892-1792518515.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"3.-stack\">3. Stack<a title=\"#3.-stack\" href=\"#3.-stack\"></a></h1>\n<p>在Flutter中，<code>Stack</code>组件用于将多个子组件重叠在一起。<code>Stack</code>允许子组件相对于其边缘或相对于其他子组件的位置进行定位，非常适合用来创建重叠的布局。</p>\n<p><strong>常用属性：</strong></p>\n<ol>\n<li><strong>children</strong>: <code>Stack</code>中的子组件列表。列表中的第一个组件是底部组件，随后的组件会在上面层叠。</li>\n<li><strong>alignment</strong>: 决定非定位子组件的对齐方式。默认值是<code>AlignmentDirectional.topStart</code>。</li>\n<li><strong>fit</strong>: 如何调整非定位子组件的大小。默认值是<code>StackFit.loose</code>，意味着子组件自身决定其大小。</li>\n<li><strong>overflow</strong>: 已弃用，替代属性为<code>clipBehavior</code>，决定如何显示超出Stack边界的子组件。</li>\n</ol>\n<h2 id=\"3.1.基本使用\">3.1.基本使用<a title=\"#3.1.基本使用\" href=\"#3.1.基本使用\"></a></h2>\n<p><strong>示例代码：</strong></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>      <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>          appBar: AppBar(<br>            backgroundColor: Colors.blue,<br>            title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>            centerTitle: <span class=\"hljs-keyword\">true</span>,<br>          ),<br>          body: Stack(<br>            alignment: Alignment.center,<br>            children: &lt;Widget&gt;[<br>              Container(<br>                width: <span class=\"hljs-number\">300</span>,<br>                height: <span class=\"hljs-number\">300</span>,<br>                color: Colors.red,<br>              ),<br>              Container(<br>                width: <span class=\"hljs-number\">200</span>,<br>                height: <span class=\"hljs-number\">200</span>,<br>                color: Colors.green,<br>              ),<br>              Container(<br>                width: <span class=\"hljs-number\">100</span>,<br>                height: <span class=\"hljs-number\">100</span>,<br>                color: Colors.blue,<br>              ),<br>            ],<br>          )<br>      )<br>    )<br> );<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这个示例创建了一个Stack，其中包含三个大小不同、颜色不同的容器。最大的容器（红色）位于底部，其次是绿色和蓝色的容器。</p>\n<p>children 是一个包含三个 Container 组件的列表，这些组件作为 Stack 组件的子元素。每个 Container 都有自己的尺寸和颜色。在 Stack 中，这些容器会按照列表中的顺序层叠显示，最先出现的在底部，最后出现的在顶部。</p>\n<h2 id=\"3.2.实现定位\">3.2.实现定位<a title=\"#3.2.实现定位\" href=\"#3.2.实现定位\"></a></h2>\n<p>在Flutter中，使用Stack和Positioned组件可以实现类似CSS中的绝对定位效果。Positioned组件可以指定子组件在Stack中的确切位置。</p>\n<p><strong>示例代码：</strong></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>      <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>          appBar: AppBar(<br>            backgroundColor: Colors.blue,<br>            title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>            centerTitle: <span class=\"hljs-keyword\">true</span>,<br>          ),<br>          body: Stack(<br>            children: &lt;Widget&gt;[<br>              Positioned(<br>                left: <span class=\"hljs-number\">50</span>,<br>                top: <span class=\"hljs-number\">50</span>,<br>                child: Container(<br>                  width: <span class=\"hljs-number\">100</span>,<br>                  height: <span class=\"hljs-number\">100</span>,<br>                  color: Colors.red,<br>                ),<br>              ),<br>              Positioned(<br>                right: <span class=\"hljs-number\">50</span>,<br>                bottom: <span class=\"hljs-number\">50</span>,<br>                child: Container(<br>                  width: <span class=\"hljs-number\">100</span>,<br>                  height: <span class=\"hljs-number\">100</span>,<br>                  color: Colors.green,<br>                ),<br>              ),<br>              Positioned(<br>                left: <span class=\"hljs-number\">150</span>,<br>                top: <span class=\"hljs-number\">150</span>,<br>                child: Container(<br>                  width: <span class=\"hljs-number\">100</span>,<br>                  height: <span class=\"hljs-number\">100</span>,<br>                  color: Colors.blue,<br>                ),<br>              ),<br>            ],<br>          )<br>      )<br>    )<br> );<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>效果图：</strong></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240101122018411-1360118.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n</ul>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Flutter』常用组件 按钮、图片","link":"2024/01/01/Flutter/18-「Flutter」常用组件 按钮、图片"},"next":{"title":"『Flutter』还原初始程序","link":"2023/12/31/Flutter/16-「Flutter」还原初始程序"},"plink":"http://example.com/2024/01/01/Flutter/17-『Flutter』布局组件 Container、Row、Column、Stack/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.布局组件","title":"2.布局组件","index":"2","children":[{"id":"2.1.-container","title":"2.1. Container","index":"2.1"},{"id":"2.2.-row","title":"2.2. Row","index":"2.2"},{"id":"2.3.-column","title":"2.3. Column","index":"2.3"}]},{"id":"3.-stack","title":"3. Stack","index":"3","children":[{"id":"3.1.基本使用","title":"3.1.基本使用","index":"3.1"},{"id":"3.2.实现定位","title":"3.2.实现定位","index":"3.2"}]},{"id":"end","title":"End","index":"4"}]}