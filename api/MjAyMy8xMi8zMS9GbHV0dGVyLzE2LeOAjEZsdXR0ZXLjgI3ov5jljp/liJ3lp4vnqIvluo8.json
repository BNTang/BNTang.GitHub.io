{"title":"『Flutter』还原初始程序","date":"2023-12-31T09:13:39.000Z","date_formatted":{"ll":"Dec 31, 2023","L":"12/31/2023","MM-DD":"12-31"},"link":"2023/12/31/Flutter/16-「Flutter」还原初始程序","tags":["Flutter"],"updated":"2024-01-09T05:51:10.857Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231171333184-1982908090.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>经过上一篇文章，开发出来了第一个 Flutter 程序，入门程序 <code>Hello World</code>，这一篇文章就是接着上一篇。咱们来还原初始程序（开发第二个 Flutter 程序）。</p>\n<h1 id=\"2.尝试阅读官方示例代码\">2.尝试阅读官方示例代码<a title=\"#2.尝试阅读官方示例代码\" href=\"#2.尝试阅读官方示例代码\"></a></h1>\n<p>先从 <code>runApp(const MyApp());</code> 这个代码开始，传递了一个 <code>MyApp</code> 组件，该组件继承了 StatelessWidget，实现了 build 方法，在 build 方法中返回了一个 MaterialApp 组件，但是这个 MaterialApp 组件我不知道，所以这里我给大家两种方式去学习，第一种就是去看官方文档，我这里就采用第二种直接问 AI：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231200532492-1389436538.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>有几句话非常的重要：</p>\n<h1 id=\"3.materialapp\">3.MaterialApp<a title=\"#3.materialapp\" href=\"#3.materialapp\"></a></h1>\n<ol>\n<li><code>MaterialApp</code> 是一个方便的小部件，它封装了应用程序实现 Material Design 所需的一些小部件。什么是 Material Design？请看：<a href=\"https://material.io/design%E3%80%82%E5%B0%B1%E6%98%AF%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%80%E4%BA%9B%E9%81%B5%E5%BE%AA%E4%BA%86\" target=\"_blank\">https://material.io/design。就是提供了一些遵循了</a> Flutter 的规范的一些组件。</li>\n<li><code>MaterialApp</code> 组件是在 Flutter 应用程序的顶层使用，所以说我们在 runApp 方法中传递的 MyApp 组件，MyApp 就是返回的 MaterialApp 组件，所以说 MaterialApp 组件是在 Flutter 应用程序的顶层使用的。</li>\n</ol>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231231703671-1146392001.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>通过 AI，知道了 MaterialApp 组件是在 Flutter 应用程序的顶层使用的，还有一些 Material Design 的常用属性：</p>\n<ol>\n<li><code>home</code>: 应用的首页，通常是一个 <code>Scaffold</code> 小部件。</li>\n<li><code>theme</code>: 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</li>\n<li><code>title</code>: 应用程序的标题，显示在任务管理窗口中。<br>\n…</li>\n</ol>\n<p>先介绍这两个属性，紧接着我们先来编写代码：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>    <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>    title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>    <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>    theme: ThemeData(primarySwatch: Colors.blue),<br>    <span class=\"hljs-comment\">// 应用的首页</span><br>    home: Text(<br>      <span class=\"hljs-string\">&#x27;Hello World&#x27;</span>,<br>      textDirection: TextDirection.ltr,<br>      textAlign: TextAlign.center,<br>      overflow: TextOverflow.ellipsis,<br>      style: <span class=\"hljs-keyword\">const</span> TextStyle(fontWeight: FontWeight.bold),<br>    ),<br>  ));<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行程序，效果如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231232513725-740432417.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>不过运行起来我发现这个程序显示的结果不是我想要的，文字是颜色居然是红色，还在黄色下划线，这是为什么呢？这个颜色其实就是 MaterialApp 设置的，那么为什么会这样设置呢？这个时候就要打开 MaterialApp 的官方文档来一探究竟了：<a href=\"https://api.flutter-io.cn/flutter/material/MaterialApp-class.html\" target=\"_blank\">https://api.flutter-io.cn/flutter/material/MaterialApp-class.html</a></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231232939917-2053373756.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<blockquote>\n<p><code>MaterialApp configures its WidgetsApp.textStyle with an ugly red/yellow text style that's intended to warn the developer that their app hasn't defined a default text style. Typically the app's Scaffold builds a Material widget whose default Material.textStyle defines the text style for the entire scaffold.</code></p>\n</blockquote>\n<p>大概意思就是说 MaterialApp 组件会配置它的 WidgetsApp.textStyle，这个 textStyle 是一个丑陋的红色/黄色的文本样式，旨在警告开发人员他们的应用程序没有定义默认文本样式。通常，应用程序的 Scaffold 构建一个 Material 小部件，其默认 Material.textStyle 定义整个脚手架的文本样式。</p>\n<h1 id=\"4.scaffold\">4.Scaffold<a title=\"#4.scaffold\" href=\"#4.scaffold\"></a></h1>\n<p>说明什么说明我们的 MeterialApp 组件使用成功了，但是通过我询问 AI, AI 告诉我 home 属性是应用的首页，通常是一个 Scaffold 小部件，我观察官方也是使用的 Scaffold 小部件，那么我们就来使用 Scaffold 小部件, 但是呢我对 Scaffold 小部件不是很了解，所以我还是去询问 AI：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240101003844264-2072186522.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>通过 AI 得知, Scaffold 小部件是一个 Material Design 布局结构的基本实现，常用的属性已经告诉我们了。所以我们可以使用 Scaffold 小部件来实现 Material Design 布局结构，那么我们就来使用 Scaffold 小部件：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>    <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>        appBar: AppBar(<br>          title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>          centerTitle: <span class=\"hljs-keyword\">true</span>,<br>        ),<br>        body: <span class=\"hljs-keyword\">const</span> Center(<br>          child: Text(<br>            <span class=\"hljs-string\">&#x27;Hello Flutter&#x27;</span>,<br>            style: TextStyle(fontSize: <span class=\"hljs-number\">20.0</span>),<br>          ),<br>        )<br>      )<br>  ));<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行程序，效果如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240101020603676-684163710.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"5.总结\">5.总结<a title=\"#5.总结\" href=\"#5.总结\"></a></h1>\n<p>通过这篇文章，我们学习了 MaterialApp 和 Scaffold 组件，以及它们的常用属性，以及如何去查看官方文档，如何去询问 AI，如何去阅读官方示例代码。</p>\n<p>知道了 MaterialApp 组件是在 Flutter 应用程序的顶层使用的，Scaffold 小部件是一个 Material Design 布局结构的基本实现，常用的属性不知道的可以去查看官方文档或者询问 AI。</p>\n<p>到此为止，我们的第二个 Flutter 程序就开发完成了，已经和官方创建项目模板的代码基本大概差不多了。</p>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n</ul>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Flutter』布局组件 Container、Row、Column、Stack","link":"2024/01/01/Flutter/17-『Flutter』布局组件 Container、Row、Column、Stack"},"next":{"title":"『Flutter』第一个程序","link":"2023/12/30/Flutter/15-「Flutter」第一个程序"},"plink":"http://example.com/2023/12/31/Flutter/16-「Flutter」还原初始程序/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.尝试阅读官方示例代码","title":"2.尝试阅读官方示例代码","index":"2"},{"id":"3.materialapp","title":"3.MaterialApp","index":"3"},{"id":"4.scaffold","title":"4.Scaffold","index":"4"},{"id":"5.总结","title":"5.总结","index":"5"},{"id":"end","title":"End","index":"6"}]}