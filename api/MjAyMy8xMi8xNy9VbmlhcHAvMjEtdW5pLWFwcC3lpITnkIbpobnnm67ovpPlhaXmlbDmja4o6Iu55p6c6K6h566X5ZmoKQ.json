{"title":"uni-app-处理项目输入数据(苹果计算器)","date":"2023-12-17T15:48:10.000Z","date_formatted":{"ll":"Dec 17, 2023","L":"12/17/2023","MM-DD":"12-17"},"link":"2023/12/17/Uniapp/21-uni-app-处理项目输入数据(苹果计算器)","tags":["Uniapp"],"updated":"2023-12-19T16:19:26.742Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231203182258161-913274582.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<ul>\n<li>上一篇文章完成了项目的基本布局，这一篇文章我们来处理一下项目的输入数据</li>\n<li>项目的输入数据主要是通过按键来输入的，所以我们需要对按键进行处理</li>\n<li>那么我们就来看一下 uni-app-处理项目输入数据</li>\n</ul>\n<h1 id=\"步入正题\">步入正题<a title=\"#步入正题\" href=\"#步入正题\"></a></h1>\n<ul>\n<li>在上篇文章中，我在 data 中定义了一个 buttons</li>\n<li>每个元素中，有一个 func 属性，这个属性就是告诉程序如果按下的话，需要执行什么操作，这里可以采用 switch 语句来进行处理</li>\n</ul>\n<p>好，那么我们就来看一下具体的代码，在上一篇中，我给每一个元素都绑定了一个点击事件，接下来只需要在这个点击事件中进行处理就可以了，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">&lt;script&gt;<br>\texport default &#123;<br>\t\tmethods: &#123;<br>\t\t\toperate(item) &#123;<br>\t\t\t\tconst func = item.func;<br>\t\t\t\tconst params = item.params;<br><br>\t\t\t\tswitch (func) &#123;<br>\t\t\t\t\tcase &quot;operator&quot;:<br>\t\t\t\t\t\tthis.operator(params);<br>\t\t\t\t\t\tbreak;<br>\t\t\t\t\tcase &quot;inputText&quot;:<br>\t\t\t\t\t\tthis.inputText(params);<br>\t\t\t\t\t\tbreak;<br>\t\t\t\t&#125;<br>\t\t\t&#125;,<br>\t\t\toperator(params) &#123;<br>\t\t\t\tconsole.log(&quot;计算操作&quot;);<br>\t\t\t&#125;,<br>\t\t\tinputText(params) &#123;<br>\t\t\t\tconsole.log(&quot;输入操作&quot;);<br>\t\t\t&#125;<br>\t\t&#125;<br>\t&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p>好，那么我们来看一下效果，点击运算符，控制台输出 <code>计算操作</code>，点击数字，控制台输出 <code>输入操作</code>，效果如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231218231429134-1847865167.gif\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>首先来处理输入操作，也就是处理输入操作，好了，废话不多说直接肝代码，完成 inputText 方法。</p>\n<p>主要处理的逻辑分别为：</p>\n<ol>\n<li>如果输入的是 <code>.</code>，并且如果已经有了 <code>.</code>，那么就什么都不做</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">if</span> (params == <span class=\"hljs-string\">&quot;.&quot;</span> &amp;&amp; <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showValue</span>.<span class=\"hljs-title function_\">indexOf</span>(<span class=\"hljs-string\">&quot;.&quot;</span>) &gt; -<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">return</span>;<br></code></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>判断当前输入内容长度是否超过 11, 如果超过了，就什么都不做</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showValue</span>.<span class=\"hljs-property\">length</span> &gt;= <span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">return</span>;<br></code></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>如果输入的不是 <code>.</code>，并且如果当前输入内容是 <code>0</code>，那么就把当前输入内容替换为输入的内容</li>\n<li>如果是其它内容，那么就追加到当前输入内容的后面</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">if</span> (params != <span class=\"hljs-string\">&quot;.&quot;</span> &amp;&amp; <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showValue</span> == <span class=\"hljs-string\">&quot;0&quot;</span>) &#123;<br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showValue</span> = params + <span class=\"hljs-string\">&quot;&quot;</span>;<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-comment\">// 如果是其它内容, 那么就追加</span><br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showValue</span> += params + <span class=\"hljs-string\">&quot;&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>如果是整数，还需要添加位数符号，比如 <code>1,000,000</code></li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">if</span> (params != <span class=\"hljs-string\">&quot;.&quot;</span> &amp;&amp; <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showValue</span>.<span class=\"hljs-title function_\">indexOf</span>(<span class=\"hljs-string\">&quot;.&quot;</span>) == -<span class=\"hljs-number\">1</span>) &#123;<br>    <span class=\"hljs-keyword\">let</span> num = <span class=\"hljs-built_in\">parseInt</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showValue</span>.<span class=\"hljs-title function_\">replaceAll</span>(<span class=\"hljs-string\">&quot;,&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>));<br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showValue</span> = num.<span class=\"hljs-title function_\">toLocaleString</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>好了理清楚大致的思路之后，接下来就是将思路转变为代码即可，最终代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">inputText(params) &#123;<br>    // console.log(&quot;输入操作&quot;);<br>    // 如果输入的是., 并且已经有., 那么什么都不做<br>    if (params == &quot;.&quot; &amp;&amp; this.showValue.indexOf(&quot;.&quot;) &gt; -1) return;<br>    // 判断当前输入内容长度是否超过11, 超过11也什么都不做<br>    if (this.showValue.length &gt;= 11) return;<br>    // 如果输入的不是., 并且当前没有数据, 那么就直接赋值<br>    if (params != &quot;.&quot; &amp;&amp; this.showValue == &quot;0&quot;) &#123;<br>        this.showValue = params + &quot;&quot;;<br>    &#125; else &#123;<br>        // 如果是其它内容, 那么就追加<br>        this.showValue += params + &quot;&quot;;<br>    &#125;<br><br>    // 如果是整数, 还需要添加位数符号<br>    if (params != &quot;.&quot; &amp;&amp; this.showValue.indexOf(&quot;.&quot;) == -1) &#123;<br>        let num = parseInt(this.showValue.replaceAll(&quot;,&quot;, &quot;&quot;));<br>        this.showValue = num.toLocaleString();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这里最为关键的代码就是添加位数符号, 通过 <code>replaceAll(&quot;,&quot;, &quot;&quot;)</code> 将 <code>,</code> 替换为空字符串, 然后通过 <code>parseInt</code> 将字符串转换为整数, 最后通过 <code>toLocaleString</code> 将整数转换为带有位数符号的字符串, 这样就完成了整数的位数符号添加。</p>\n<p>运行测试效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231219230509502-2111457494.gif\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<ul>\n<li>如果你有任何问题或建议，欢迎在下方留言，我会尽快回复</li>\n<li>如果你觉得本文对你有帮助，欢迎点赞、收藏，你的支持是我写作的最大动力</li>\n</ul>\n<blockquote>\n<p><a href=\"https://cloud.tencent.com/developer/article/2366050?from_column=20421&amp;from=20421\" target=\"_blank\">我正在参与2023腾讯技术创作特训营第四期有奖征文，快来和我瓜分大奖！</a></p>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231129232539490-1458223711.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"uni-app-动态计算字体大小(苹果计算器)","link":"2023/12/19/Uniapp/22-uni-app-动态计算字体大小(苹果计算器)"},"next":{"title":"uni-app-项目实战页面布局(苹果计算器)","link":"2023/12/17/Uniapp/20-uni-app-项目实战页面布局(苹果计算器)"},"plink":"http://example.com/2023/12/17/Uniapp/21-uni-app-处理项目输入数据(苹果计算器)/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"步入正题","title":"步入正题","index":"2"},{"id":"end","title":"End","index":"3"}],"reading_time":"977 words in 7 min"}