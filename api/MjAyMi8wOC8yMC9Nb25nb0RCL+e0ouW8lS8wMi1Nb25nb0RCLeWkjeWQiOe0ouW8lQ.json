{"title":"MongoDB-复合索引","date":"2022-08-20T13:26:41.000Z","date_formatted":{"ll":"Aug 20, 2022","L":"08/20/2022","MM-DD":"08-20"},"link":"2022/08/20/MongoDB/索引/02-MongoDB-复合索引","tags":["MongoDB"],"updated":"2022-08-21T04:05:20.704Z","content":"<h1 id=\"复合索引\">复合索引<a title=\"#复合索引\" href=\"#复合索引\"></a></h1>\n<p>和 MySQL 一样, MongoDB 也支持复合索引, 也就是将多个字段的值作为索引。</p>\n<p>?&gt; 插入测试数据：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">db.person.insert(<span class=\"hljs-punctuation\">[</span><br><span class=\"hljs-punctuation\">&#123;</span>name<span class=\"hljs-punctuation\">:</span>&#x27;cs&#x27;<span class=\"hljs-punctuation\">,</span> age<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">19</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span>name<span class=\"hljs-punctuation\">:</span>&#x27;as&#x27;<span class=\"hljs-punctuation\">,</span> age<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">18</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span>name<span class=\"hljs-punctuation\">:</span>&#x27;bs&#x27;<span class=\"hljs-punctuation\">,</span> age<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">17</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span>name<span class=\"hljs-punctuation\">:</span>&#x27;bs&#x27;<span class=\"hljs-punctuation\">,</span> age<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">20</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">]</span>)<br></code></pre></td></tr></table></figure>\n<ul>\n<li>如果在创建索引的时候只指定了一个字段，那么就是创建的索引为单值索引</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">db.person.createIndex(<span class=\"hljs-punctuation\">&#123;</span>name<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">&#125;</span>)<br></code></pre></td></tr></table></figure>\n<ul>\n<li>如果在创建索引的时候指定了多个字段，那么这个索引就是复合索引</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">db.person.createIndex(<span class=\"hljs-punctuation\">&#123;</span>name<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span> age<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">-1</span><span class=\"hljs-punctuation\">&#125;</span>)<br></code></pre></td></tr></table></figure>\n<p>如上我们已经创建好了复合索引之后，紧接着我们可以进行查询测试测试：</p>\n<ul>\n<li>使用了索引</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">db.person.explain().find(<span class=\"hljs-punctuation\">&#123;</span>name<span class=\"hljs-punctuation\">:</span>&#x27;bs&#x27;<span class=\"hljs-punctuation\">,</span> age<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">17</span><span class=\"hljs-punctuation\">&#125;</span>)<br>db.person.explain().find(<span class=\"hljs-punctuation\">&#123;</span>name<span class=\"hljs-punctuation\">:</span>&#x27;bs&#x27;<span class=\"hljs-punctuation\">&#125;</span>)<br></code></pre></td></tr></table></figure>\n<ul>\n<li>没有使用索引</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">db.person.explain().find(<span class=\"hljs-punctuation\">&#123;</span>age<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">17</span><span class=\"hljs-punctuation\">&#125;</span>)<br></code></pre></td></tr></table></figure>\n<p>如上我们创建的复合索引最终在数据结构方面的体现如下：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">(as, 18) -&gt; &#123;name:&#x27;as&#x27;, age:18&#125;<br>(bs, 20) -&gt; &#123;name:&#x27;bs&#x27;, age:20&#125;<br>(bs, 17) -&gt; &#123;name:&#x27;bs&#x27;, age:17&#125;<br>(cs, 19) -&gt; &#123;name:&#x27;cs&#x27;, age:19&#125;<br></code></pre></td></tr></table></figure>\n<p>!&gt; 复合键索引只支持 <code>前缀</code> 子查询, 也就是 A,B,C 复合索引 A,B,C 会使用索引, A,B会使用索引, A会使用索引，但是 B 不会使用索引, C 也不会使用索引, B,C 也不会使用索引。</p>\n","prev":{"title":"MongoDB-多键索引","link":"2022/08/21/MongoDB/索引/03-MongoDB-多键索引"},"next":{"title":"MongoDB-索引","link":"2022/08/20/MongoDB/索引/01-MongoDB-索引"},"plink":"http://example.com/2022/08/20/MongoDB/索引/02-MongoDB-复合索引/","toc":[{"id":"复合索引","title":"复合索引","index":"1"}],"reading_time":"324 words in 2 min"}