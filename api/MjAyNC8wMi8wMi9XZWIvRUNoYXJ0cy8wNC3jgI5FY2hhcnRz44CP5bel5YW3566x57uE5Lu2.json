{"title":"『Echarts』工具箱组件","date":"2024-02-02T01:30:30.000Z","date_formatted":{"ll":"Feb 2, 2024","L":"02/02/2024","MM-DD":"02-02"},"link":"2024/02/02/Web/ECharts/04-『Echarts』工具箱组件","tags":["Echarts"],"updated":"2024-03-04T15:14:59.432Z","content":"<p>[toc]</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202402/2105804-20240202230700614-148150587.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"一、前言\">一、前言<a title=\"#一、前言\" href=\"#一、前言\"></a></h1>\n<blockquote>\n<ul>\n<li>本篇文章是『Echarts』文章的第 4 篇，主要介绍『Echarts』工具箱组件</li>\n</ul>\n</blockquote>\n<p>回顾我们之前关于「ECharts」标题组件的学习，相信大家已经对它有了初步的认识。现在，我们已经掌握了 ECharts 标题组件的知识，接下来让我们继续深入探究 ECharts 的工具箱组件吧。</p>\n<h1 id=\"二、工具箱组件\">二、工具箱组件<a title=\"#二、工具箱组件\" href=\"#二、工具箱组件\"></a></h1>\n<p>要使用工具箱组件非常简单，你只需在代码中的 <code>options</code> 对象添加一个名为 <code>toolbox</code> 的配置项。该配置项是一个包含具体配置的对象，它主要包含两个属性：<code>feature</code> 和 <code>show</code>。</p>\n<h2 id=\"2.1.saveasimage\">2.1.saveAsImage<a title=\"#2.1.saveasimage\" href=\"#2.1.saveasimage\"></a></h2>\n<p>feature 这一项是工具箱的一个配置选项，它具备哪些具体的功能和特性呢？首先第一个就是 <code>saveAsImage</code>，也就是说，允许我们将图表保存为一张图片。这个功能也是工具箱中最常用的功能之一。话不多说，直接上代码。</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br><span class=\"hljs-addition\">+    toolbox: &#123;</span><br><span class=\"hljs-addition\">+        show: true,</span><br><span class=\"hljs-addition\">+        feature: &#123;</span><br><span class=\"hljs-addition\">+            // 开启保存为图片</span><br><span class=\"hljs-addition\">+            saveAsImage: &#123;</span><br><span class=\"hljs-addition\">+                show: true</span><br><span class=\"hljs-addition\">+            &#125;</span><br><span class=\"hljs-addition\">+        &#125;</span><br><span class=\"hljs-addition\">+    &#125;,</span><br>    title: &#123;<br>        subtext: &#x27;副标题&#x27;,<br>        text: &#x27;ECharts 入门示例&#x27;,<br>        left: &#x27;70&#x27;,<br>        top: &#x27;top&#x27;,<br>        borderWidth: 2,<br>        borderColor: &#x27;red&#x27;<br>    &#125;,<br>    legend: &#123;<br>        data: [&#x27;销量&#x27;, &#x27;产量&#x27;]<br>    &#125;,<br>    xAxis: &#123;<br>        data: [&#x27;衬衫&#x27;, &#x27;羊毛衫&#x27;, &#x27;雪纺衫&#x27;, &#x27;裤子&#x27;, &#x27;高跟鞋&#x27;, &#x27;袜子&#x27;]<br>    &#125;,<br>    yAxis: &#123;&#125;,<br>    series: [<br>        &#123;<br>            name: &#x27;销量&#x27;,<br>            type: &#x27;bar&#x27;,<br>            data: [5, 20, 36, 10, 10, 20]<br>        &#125;,<br>        &#123;<br>            name: &#x27;产量&#x27;,<br>            type: &#x27;bar&#x27;,<br>            data: [50, 120, 130, 60, 40, 80]<br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在代码中，我们在 <code>toolbox</code> 配置中增加了 <code>feature</code> 项，进而在 <code>feature</code> 中设置了 <code>saveAsImage</code>。<code>saveAsImage</code> 拥有一个 <code>show</code> 属性，赋值为 <code>true</code> 来激活保存为图片功能。如此一来，在图表上就会显示出一个用于保存图表为图片的按钮。</p>\n<p>激活该功能后，将代码运行在谷歌浏览器中以查看效果，您会在图表的右上角发现一个用于保存图片的按钮。点击这个按钮即可将图表保存为图片文件。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240304222906410-635301749.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240304223032911-730766226.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240304223058678-85503037.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>这是工具箱的保存图片功能。接下来，请看下面的内容。</p>\n<h2 id=\"2.2.dataview\">2.2.dataView<a title=\"#2.2.dataview\" href=\"#2.2.dataview\"></a></h2>\n<p>除了保存图片的功能之外，工具箱还提供了 “数据视图” 功能。数据视图是什么呢？其实非常简单，它能够将图表的数据以表格形式显示。接下来，让我们看一下如何实现数据视图功能的代码。</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    toolbox: &#123;<br>        show: true,<br>        feature: &#123;<br>            // 开启保存为图片<br>            saveAsImage: &#123;<br>                show: true<br>            &#125;,<br><span class=\"hljs-addition\">+            // 开启数据视图</span><br><span class=\"hljs-addition\">+            dataView: &#123;</span><br><span class=\"hljs-addition\">+                show: true</span><br><span class=\"hljs-addition\">+            &#125;</span><br>        &#125;<br>    &#125;,<br>    <br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在代码配置中，我们在 <code>toolbox</code> 项里添加了 <code>feature</code> 属性。在 <code>feature</code> 内部，我们接着定义了 <code>dataView</code> 选项。给 <code>dataView</code> 设置了 <code>show</code> 属性，并将其值设定为 <code>true</code>，以此开启数据视图功能。由此，图表界面上便会出现一个按钮，用户点击后可以查看数据视图。</p>\n<p>激活数据视图功能后，在谷歌浏览器中运行代码来审视效果。您将在图表右上角看到一个用来查看数据视图的按钮。点击它，图表数据就会以表格的方式呈现出来。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240304223719707-1572962798.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240304224221636-1427369778.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>请注意，切换到数据视图界面后，我们可以直接编辑数据。在浏览器的右下角，您会看到 <code>close</code> 和 <code>refresh</code> 两个按钮。点击 <code>close</code> 按钮可以退出数据视图界面，而点击 <code>refresh</code> 按钮则能刷新数据，使编辑后的内容生效。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240304224757987-2010962375.gif\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>如果您需要撤销所做的改动，有一个简单的办法。您可以回到数据视图，找到您之前修改的数据，将其改回原来的状态，然后点击 <code>refresh</code> 按钮，之前的更改就会被还原。</p>\n<p>其实，无需采取前述方法，因为在工具箱组件里，我们已经集成了<code>还原</code>功能。这种方式更直接高效。</p>\n<h2 id=\"2.3.restore\">2.3.restore<a title=\"#2.3.restore\" href=\"#2.3.restore\"></a></h2>\n<p><code>还原</code> 是工具箱组件中的一项关键功能，允许我们在对图表数据进行编辑之后，轻松地将图表恢复至最初始的状态。现在，让我们来看看实现这一<code>还原</code>功能的具体代码是怎样的。</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    toolbox: &#123;<br>        show: true,<br>        feature: &#123;<br>            // 开启保存为图片<br>            saveAsImage: &#123;<br>                show: true<br>            &#125;,<br>            // 开启数据视图<br>            dataView: &#123;<br>                show: true<br>            &#125;,<br><span class=\"hljs-addition\">+            // 开启还原功能</span><br><span class=\"hljs-addition\">+            restore: &#123;</span><br><span class=\"hljs-addition\">+                show: true</span><br><span class=\"hljs-addition\">+            &#125;</span><br>        &#125;<br>    &#125;,<br>    <br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在代码中，我们在 <code>feature</code> 项中添加了 <code>restore</code> 选项。给 <code>restore</code> 设置了 <code>show</code> 属性，并将其值设定为 <code>true</code>，以此开启还原功能。这样一来，图表界面上就会出现一个按钮，用户点击后可以将图表恢复至最初始的状态。</p>\n<p>激活还原功能后，在谷歌浏览器中运行代码来审视效果。您将在图表右上角看到一个用来还原图表的按钮。点击它，图表就会恢复至最初始的状态。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240304230022355-861936003.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>首先，进入数据视图界面，并对数据进行修改。完成后点击 <code>refresh</code> 按钮更新数据。如需恢复至最初的数据，只需点击 <code>restore</code> 按钮即可。关于动态的演示效果，这里就不提供 gif 图了，您可以自行在浏览器中运行代码进行查看体验。</p>\n<h2 id=\"2.4.datazoom\">2.4.dataZoom<a title=\"#2.4.datazoom\" href=\"#2.4.datazoom\"></a></h2>\n<p><code>dataZoom</code> 是工具箱组件中的一项强大功能，它允许我们对图表的特定区域进行放大或缩小，以便更细致地查看数据。现在，让我们来看看如何实现 <code>dataZoom</code> 功能的具体代码。</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    toolbox: &#123;<br>        show: true,<br>        feature: &#123;<br>            // 开启保存为图片<br>            saveAsImage: &#123;<br>                show: true<br>            &#125;,<br>            // 开启数据视图<br>            dataView: &#123;<br>                show: true<br>            &#125;,<br>            // 开启还原功能<br>            restore: &#123;<br>                show: true<br>            &#125;,<br><span class=\"hljs-addition\">+            // 开启数据区域缩放</span><br><span class=\"hljs-addition\">+            dataZoom: &#123;</span><br><span class=\"hljs-addition\">+                show: true</span><br><span class=\"hljs-addition\">+            &#125;</span><br>        &#125;<br>    &#125;,<br>    <br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在代码的 <code>feature</code> 项中，我们新增了 <code>dataZoom</code> 选项，并为其配置了 <code>show</code> 属性，值设置为 <code>true</code> 来启用数据区域缩放功能。这样，图表界面会出现专门的缩放按钮，用户点击这个按钮后便可对图表数据进行缩放操作。</p>\n<p>启用数据区域缩放功能之后，在谷歌浏览器中运行代码以预览效果。在图表的右上角，您会发现一个用于缩放数据的按钮。点击此按钮，图表将根据您的需求进行相应的缩放（一张 gif 演示）。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240304230828896-1902082051.gif\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"2.5.magictype\">2.5.magicType<a title=\"#2.5.magictype\" href=\"#2.5.magictype\"></a></h2>\n<p><code>magicType</code> 是工具箱组件中的一项非常实用的功能，它允许我们轻松地在不同的图表类型间进行切换。比如你可以从柱状图切换到折线图，或是其他支持的图表类型。现在，让我们来看看如何实现 <code>magicType</code> 功能的具体代码是怎样的。</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs diff\">let option = &#123;<br>    toolbox: &#123;<br>        show: true,<br>        feature: &#123;<br>            // 开启保存为图片<br>            saveAsImage: &#123;<br>                show: true<br>            &#125;,<br>            // 开启数据视图<br>            dataView: &#123;<br>                show: true<br>            &#125;,<br>            // 开启还原功能<br>            restore: &#123;<br>                show: true<br>            &#125;,<br>            // 开启数据区域缩放<br>            dataZoom: &#123;<br>                show: true<br>            &#125;,<br><span class=\"hljs-addition\">+            // 开启切换图表类型</span><br><span class=\"hljs-addition\">+            magicType: &#123;</span><br><span class=\"hljs-addition\">+                show: true,</span><br><span class=\"hljs-addition\">+                type: [&#x27;line&#x27;, &#x27;bar&#x27;]</span><br><span class=\"hljs-addition\">+            &#125;</span><br>        &#125;<br>    &#125;,<br>    <br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在代码的 <code>feature</code> 项中，我们添加了 <code>magicType</code> 选项，并为其配置了 <code>show</code> 属性，设定值为 <code>true</code>，以开启图表类型切换功能。于是，在图表界面上便会显示一个按钮，用户点击该按钮后可以在不同的图表类型之间切换。</p>\n<p>启用图表类型切换功能之后，在谷歌浏览器中运行代码以预览效果。在图表的右上角，您将看到一个用于切换图表类型的按钮。点击此按钮，就可以在不同的图表样式之间进行切换。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202403/2105804-20240304231211767-804443912.gif\" alt loading=\"lazy\" class=\"φbp\"></p>\n<blockquote>\n<p>注意点：type 的取值只要 echarts 支持的图表类型即可。</p>\n</blockquote>\n<blockquote>\n<p>最后，感谢您对本文的阅读。如果这篇文章对您有所帮助，欢迎点赞、收藏或转发分享。您的每一份支持，都是我持续创作、分享知识热情的源泉。希望我们可以通过不断的学习和交流，一起进步，共享知识的乐趣。</p>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Echarts』弹窗组件和数据标记","link":"2024/02/02/Web/ECharts/05-『Echarts』弹窗组件和数据标记"},"next":{"title":"『Echarts』标题组件","link":"2024/02/02/Web/ECharts/03-『Echarts』标题组件"},"plink":"http://example.com/2024/02/02/Web/ECharts/04-『Echarts』工具箱组件/","toc":[{"id":"一、前言","title":"一、前言","index":"1"},{"id":"二、工具箱组件","title":"二、工具箱组件","index":"2","children":[{"id":"2.1.saveasimage","title":"2.1.saveAsImage","index":"2.1"},{"id":"2.2.dataview","title":"2.2.dataView","index":"2.2"},{"id":"2.3.restore","title":"2.3.restore","index":"2.3"},{"id":"2.4.datazoom","title":"2.4.dataZoom","index":"2.4"},{"id":"2.5.magictype","title":"2.5.magicType","index":"2.5"}]}],"reading_time":"2186 words in 15 min"}