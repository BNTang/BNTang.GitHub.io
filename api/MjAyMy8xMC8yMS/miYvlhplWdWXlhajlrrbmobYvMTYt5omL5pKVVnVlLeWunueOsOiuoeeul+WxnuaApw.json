{"title":"手撕Vue-实现计算属性","date":"2023-10-21T12:10:41.000Z","date_formatted":{"ll":"Oct 21, 2023","L":"10/21/2023","MM-DD":"10-21"},"link":"2023/10/21/手写Vue全家桶/16-手撕Vue-实现计算属性","tags":["手写Vue全家桶"],"updated":"2023-10-21T14:33:30.940Z","content":"<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<p>经过上一篇的学习, 完成了将数据代理到了 Nue 的实例上方，这个我们已经撕完了。接下来要实现的是计算属性，计算属性的实现原理是通过 Object.defineProperty() 来实现的，我们先来看看计算属性的使用。</p>\n<p>看之前先来改造一下我们的代码基础模板，首先是 example.html 的内容如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;en&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Vue基本模板<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;js/nue.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>&#123;&#123; getName &#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    <span class=\"hljs-keyword\">let</span> vue = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Nue</span>(&#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">el</span>: <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&#x27;#app&#x27;</span>),</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">data</span>: &#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;BNTang&quot;</span></span><br><span class=\"language-javascript\">        &#125;,</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">computed</span>: &#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-title function_\">getName</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span> + <span class=\"hljs-string\">&quot;- 666&quot;</span>;</span><br><span class=\"language-javascript\">            &#125;</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;);</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>导入的 Nue.js 是我们之前写的这里不在贴代码，好了，我编写了一个计算属性，用模板语法的方式进行了渲染，页面肯定是显示 undefined 的，因为我们还没有实现计算属性的功能，接下来我们就来实现计算属性的功能。</p>\n<p>在实现之前，我们来分析一下计算属性的编写思路, 当我们在 computed 编写了一个计算属性名称，比如 getName，这个时候呢我使用的是模板 <code>&#123;&#123;&#125;&#125;</code> 进行调用，那么我们去看一下模板的渲染源代码，在其中是可以拿到 getName 的，这个时候我们的 getContent 是从 Nue 中的 data 中去获取的，那我是不是可以在创建 Nue 实例时，将 computed 中的内容也放到 data 中呢？这样的话，我在 getContent 中就可以拿到了，那么我们就来实现一下吧。</p>\n<p>将 computed 中的内容放到 data 中，我们可以在 Nue 的构造函数中进行实现，首先将 computed 的内容存储起来，然后在 data 中进行合并，代码如下：</p>\n<p>存储 computed 的内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$computed</span> = options.<span class=\"hljs-property\">computed</span>;<br></code></pre></td></tr></table></figure>\n<p>将 computed 中的方法添加到 $data 中, 只有这样将来我们在渲染的时候才能从 $data 中获取到 computed 中定义的计算属性，定义一个 computed2data 方法单独来处理：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">computed2data</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$computed</span>) &#123;<br>        <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$data</span>, key, &#123;<br>            <span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\">() =&gt;</span> &#123;<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$computed</span>[key].<span class=\"hljs-title function_\">call</span>(<span class=\"hljs-variable language_\">this</span>);<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这里我们使用了 Object.defineProperty() 来实现，这里的 get 方法就是我们在模板中调用计算属性时，获取计算属性的值，这里的 <code>this.$computed[key]</code> 就是我们在 computed 中定义的方法，然后我们调用这个方法，这里的 this 是指向 Nue 的实例的，所以我们需要使用 call 来改变 this 的指向，这样我们就可以在模板中调用计算属性了。</p>\n<p>好了，我们现在已经将计算属性的内容添加到了 $data 中，那么我们就可以在 getContent 中获取到计算属性的值了，打开浏览器，查看一下效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202310/2105804-20231021223037554-929002757.png\" alt=\"image-20231021223036838\" loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"手撕Vuex-Vuex实现原理分析","link":"2023/10/21/手写VueX/01-手撕Vuex-Vuex实现原理分析"},"next":{"title":"手撕Vue-实现将数据代理到Vue实例","link":"2023/10/21/手写Vue全家桶/15-手撕Vue-实现将数据代理到Vue实例"},"plink":"http://example.com/2023/10/21/手写Vue全家桶/16-手撕Vue-实现计算属性/","toc":[{"id":"前言","title":"前言","index":"1"}],"reading_time":"747 words in 5 min"}