{"title":"手撕Vue-实现将数据代理到Vue实例","date":"2023-10-21T08:49:45.000Z","date_formatted":{"ll":"Oct 21, 2023","L":"10/21/2023","MM-DD":"10-21"},"link":"2023/10/21/手写Vue全家桶/15-手撕Vue-实现将数据代理到Vue实例","tags":["手写Vue全家桶"],"updated":"2023-10-21T12:39:04.627Z","content":"<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<p>经过上一篇文章的学习，完成了 v-on 指令的实现，接下来我们来实现将数据代理到 Vue 实例上。</p>\n<p>为什么要完成这个功能呢？因为我们在使用 Vue 的时候，可以直接通过 <a href=\"http://this.xxx\">this.xxx</a> 的方式来访问 data 中的数据，这样就不用每次都去访问 data 中的数据了，这样就方便了很多。</p>\n<p>现在在 myFn 函数中，通过 <a href=\"http://this.xxx\">this.xxx</a> 的方式来访问 data 中的数据，发现访问得到的是 undefined，这是因为我们还没有实现将数据代理到 Vue 实例上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">myFn</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&#x27;myFn被执行了&#x27;</span>);<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span>);<br>&#125;,<br></code></pre></td></tr></table></figure>\n<p>运行浏览器，点击 div，观察控制台输出，发现 <a href=\"http://this.name\">this.name</a> 的值为 undefined。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202310/2105804-20231021170229949-979489745.png\" alt=\"image-20231021170229454\" loading=\"lazy\" class=\"φbp\"></p>\n<p>接下来我们来实现将数据代理到 Vue 实例上。</p>\n<h1 id=\"代码实现\">代码实现<a title=\"#代码实现\" href=\"#代码实现\"></a></h1>\n<p>在构建 Nue 实例的时候，将 data 中的数据代理到 Vue 实例上，单独创建一个 proxyData 方法，代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">proxyData</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$data</span>) &#123;<br>        <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(<span class=\"hljs-variable language_\">this</span>, key, &#123;<br>            <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-params\"></span>) &#123;<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$data</span>[key];<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>proxyData 方法中，通过 for in 循环遍历 data 中的数据，然后通过 Object.defineProperty 方法将 data 中的数据代理到 Vue 实例上。</p>\n<p>接下来在构建 Nue 实例的时候，调用 proxyData 方法，代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">proxyData</span>();<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202310/2105804-20231021175719921-845700112.png\" alt=\"image-20231021175718916\" loading=\"lazy\" class=\"φbp\"></p>\n<p>运行浏览器，点击 div，观察控制台输出，发现 <a href=\"http://this.name\">this.name</a> 的值为 BNTang，说明数据代理到 Vue 实例上成功了，这样我们就可以通过 <a href=\"http://this.xxx\">this.xxx</a> 的方式来访问 data 中的数据了。</p>\n","prev":{"title":"手撕Vue-实现计算属性","link":"2023/10/21/手写Vue全家桶/16-手撕Vue-实现计算属性"},"next":{"title":"手撕Vue-实现事件相关指令","link":"2023/10/21/手写Vue全家桶/14-手撕Vue-实现事件相关指令"},"plink":"http://example.com/2023/10/21/手写Vue全家桶/15-手撕Vue-实现将数据代理到Vue实例/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"代码实现","title":"代码实现","index":"2"}],"reading_time":"426 words in 3 min"}