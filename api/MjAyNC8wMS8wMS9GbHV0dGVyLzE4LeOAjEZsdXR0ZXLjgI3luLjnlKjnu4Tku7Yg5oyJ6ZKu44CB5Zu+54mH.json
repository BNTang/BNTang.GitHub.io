{"title":"『Flutter』常用组件 按钮、图片","date":"2024-01-01T05:02:03.000Z","date_formatted":{"ll":"Jan 1, 2024","L":"01/01/2024","MM-DD":"01-01"},"link":"2024/01/01/Flutter/18-「Flutter」常用组件 按钮、图片","tags":["Flutter"],"updated":"2024-01-09T05:51:10.858Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240101130244534-303737892.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>经过上一篇文章的学习，我们大家可以了解到布局相关的组件，但是在实际开发中，我们还需要使用到其他的组件，比如按钮、图片、文本、输入框等等，这些组件都是我们在开发中经常使用的，所以本篇文章我们就来学习一下这些常用组件。</p>\n<h1 id=\"2.常用组件\">2.常用组件<a title=\"#2.常用组件\" href=\"#2.常用组件\"></a></h1>\n<p>在Flutter中，有多种按钮组件可以用于创建交互式界面。主要的按钮组件包括：</p>\n<ol>\n<li><strong>ElevatedButton</strong>：这是一个凸起的按钮，常用于主要的操作。它有默认的阴影和灰度效果，当按下时会有视觉反馈。</li>\n<li><strong>FlatButton</strong>（现在称为TextButton）：这是一个无阴影的平面按钮，通常用于不太重要的操作。它在按下时不会改变外观，提供简洁的视觉效果。</li>\n<li><strong>OutlineButton</strong>（现在称为OutlinedButton）：这个按钮有一个边框，但没有背景色。当按下时，边框和文字颜色会变化，适用于需要强调边框而非背景色的场景。</li>\n<li><strong>IconButton</strong>：这是一个图标按钮，常用于工具栏和对话框中。它可以包含图标而不是文本，适用于空间有限或需要图形化表示的地方。</li>\n<li><strong>FloatingActionButton</strong>：这是一个圆形的按钮，通常悬浮在内容上方，用于促进应用中的主要动作，如添加、编辑等。</li>\n<li><strong>MaterialButton</strong>：这是一个更通用的按钮组件，可以高度自定义，包括形状、颜色、阴影等。</li>\n<li><strong>DropdownButton</strong>：这是一个下拉按钮，允许用户从一系列项中选择一个。通常用于表单或需要选择性输入的界面。</li>\n<li><strong>PopupMenuButton</strong>：这个按钮在用户点击时会显示一个弹出菜单。它常用于应用的工具栏中，提供额外的选项。</li>\n<li><strong>InkWell</strong>：虽然不是一个标准的按钮组件，但它可以用来给几乎任何widget添加水波纹效果，从而制作自定义按钮。</li>\n</ol>\n<p>然后我分别编写了这些按钮的示例代码, 有几个演示不了，需要给大家介绍了有无状态组件之后再来演示。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>    <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>          appBar: AppBar(<br>            backgroundColor: Colors.blue,<br>            title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>            centerTitle: <span class=\"hljs-keyword\">true</span>,<br>          ),<br>          body: Column(<br>            mainAxisAlignment: MainAxisAlignment.center,<br>            children: &lt;Widget&gt;[<br>              TextButton(<br>                onPressed: () &#123;<br>                  <span class=\"hljs-comment\">// 按钮点击事件</span><br>                  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Text Button 1&quot;</span>);<br>                &#125;,<br>                child: Text(<span class=\"hljs-string\">&#x27;Text Button&#x27;</span>),<br>              ),<br>              ElevatedButton(<br>                onPressed: () &#123;<br>                  <span class=\"hljs-comment\">// 按钮点击事件</span><br>                  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Elevated Button 2&quot;</span>);<br>                &#125;,<br>                child: Text(<span class=\"hljs-string\">&#x27;Elevated Button&#x27;</span>),<br>              ),<br>              OutlinedButton(<br>                onPressed: () &#123;<br>                  <span class=\"hljs-comment\">// 按钮点击事件</span><br>                  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Outlined Button 3&quot;</span>);<br>                &#125;,<br>                child: Text(<span class=\"hljs-string\">&#x27;Outlined Button&#x27;</span>),<br>              ),<br>              IconButton(<br>                icon: Icon(Icons.star),<br>                onPressed: () &#123;<br>                  <span class=\"hljs-comment\">// 按钮点击事件</span><br>                  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;IconButton Button 4&quot;</span>);<br>                &#125;,<br>              ),<br>              FloatingActionButton(<br>                onPressed: () &#123;<br>                  <span class=\"hljs-comment\">// 按钮点击事件</span><br>                  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;FloatingActionButton Button 5&quot;</span>);<br>                &#125;,<br>                child: Icon(Icons.add),<br>              ),<br>              PopupMenuButton&lt;<span class=\"hljs-built_in\">String</span>&gt;(<br>                onSelected: (<span class=\"hljs-built_in\">String</span> result) &#123;<br>                  <span class=\"hljs-comment\">// 处理选择结果</span><br>                &#125;,<br>                itemBuilder: (BuildContext context) =&gt; &lt;PopupMenuEntry&lt;<span class=\"hljs-built_in\">String</span>&gt;&gt;[<br>                  <span class=\"hljs-keyword\">const</span> PopupMenuItem&lt;<span class=\"hljs-built_in\">String</span>&gt;(<br>                    value: <span class=\"hljs-string\">&#x27;Value1&#x27;</span>,<br>                    child: Text(<span class=\"hljs-string\">&#x27;Menu item 1&#x27;</span>),<br>                  ),<br>                  <span class=\"hljs-keyword\">const</span> PopupMenuItem&lt;<span class=\"hljs-built_in\">String</span>&gt;(<br>                    value: <span class=\"hljs-string\">&#x27;Value2&#x27;</span>,<br>                    child: Text(<span class=\"hljs-string\">&#x27;Menu item 2&#x27;</span>),<br>                  ),<br>                ],<br>              )<br>            ],<br>          )<br>      )<br>    )<br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n<h1 id=\"3.onlongpress\">3.onLongPress<a title=\"#3.onlongpress\" href=\"#3.onlongpress\"></a></h1>\n<p>在 Flutter 中，TextButton 组件的 onLongPress 属性允许你定义一个回调函数，当用户长按按钮时会被触发。这可以用于添加额外的功能或交互，与简单的点击（onPressed）不同。</p>\n<p><strong>示例代码</strong>如下：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>    <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>          appBar: AppBar(<br>            backgroundColor: Colors.blue,<br>            title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>            centerTitle: <span class=\"hljs-keyword\">true</span>,<br>          ),<br>          body: Column(<br>            mainAxisAlignment: MainAxisAlignment.center,<br>            children: &lt;Widget&gt;[<br>              TextButton(<br>                onPressed: () &#123;<br>                  <span class=\"hljs-comment\">// 按钮点击事件</span><br>                  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Text Button 1&quot;</span>);<br>                &#125;,<br>                onLongPress: () =&gt; &#123;<br>                  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Button Long Pressed&quot;</span>)<br>                &#125;,<br>                child: Text(<span class=\"hljs-string\">&#x27;Text Button&#x27;</span>),<br>              ),<br>            ],<br>          )<br>      )<br>    )<br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个示例中：</p>\n<ul>\n<li>当 <code>TextButton</code> 被点击时，<code>onPressed</code> 会被触发</li>\n<li>当 <code>TextButton</code> 被长按时，<code>onLongPress</code> 会被触发</li>\n</ul>\n<h1 id=\"4.icon\">4.Icon<a title=\"#4.icon\" href=\"#4.icon\"></a></h1>\n<p>Flutter 中的 Icon 组件用于显示 Material 设计风格的图标。</p>\n<p>常见属性及其作用：</p>\n<ol>\n<li><strong>icon</strong> (<code>IconData</code>): 必需的属性，用于指定要显示的图标。通常从 <code>Icons</code> 类中选择一个图标。</li>\n<li><strong>size</strong> (<code>double</code>): 图标的大小。默认大小是 24.0。</li>\n<li><strong>color</strong> (<code>Color</code>): 图标的颜色。</li>\n<li><strong>semanticLabel</strong> (<code>String</code>): 用于辅助技术的标签。如果图标不仅仅是装饰性的，这个标签可以提供关于图标的更多信息。</li>\n<li><strong>textDirection</strong> (<code>TextDirection</code>): 图标的文本方向。这对于一些图标（如箭头）非常重要，其方向可能会因语言的阅读方向（从左到右或从右到左）而改变。</li>\n</ol>\n<p><strong>示例代码</strong>：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>    <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>          appBar: AppBar(<br>            backgroundColor: Colors.blue,<br>            title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>            centerTitle: <span class=\"hljs-keyword\">true</span>,<br>          ),<br>          body: Column(<br>            mainAxisAlignment: MainAxisAlignment.center,<br>            children: &lt;Widget&gt;[<br>              Icon(<br>                Icons.favorite,<br>                size: <span class=\"hljs-number\">50.0</span>,<br>                color: Colors.red,<br>              ),<br>              Icon(<br>                Icons.alarm,<br>                color: Colors.blue,<br>                semanticLabel: <span class=\"hljs-string\">&#x27;Alarm Icon&#x27;</span>,<br>              ),<br>              Icon(<br>                Icons.arrow_back,<br>                size: <span class=\"hljs-number\">30.0</span>,<br>                textDirection: TextDirection.rtl,<br>              ),<br>            ],<br>          )<br>      )<br>    )<br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n<h1 id=\"5.图片组件\">5.图片组件<a title=\"#5.图片组件\" href=\"#5.图片组件\"></a></h1>\n<p>在 Flutter 中，用于显示图片的主要组件是 <code>Image</code>。这个组件提供了多种构造函数来从不同来源加载和显示图片，包括网络、本地文件、资源等。</p>\n<p>常用的 <code>Image</code> 组件属性及其作用：</p>\n<ol>\n<li><strong>image</strong> (<code>ImageProvider</code>): 图片的来源。可以是网络 (<code>NetworkImage</code>), 文件 (<code>FileImage</code>), 资源 (<code>AssetImage</code>) 等。</li>\n<li><strong>width</strong> (<code>double</code>): 图片的宽度。如果不设置，图片会根据其父组件和其他内容自动调整大小。</li>\n<li><strong>height</strong> (<code>double</code>): 图片的高度。同样，如果不设置，会自动调整。</li>\n<li><strong>fit</strong> (<code>BoxFit</code>): 如何处理图片的缩放和对齐。常用的值有 <code>BoxFit.fill</code>, <code>BoxFit.contain</code>, <code>BoxFit.cover</code> 等。</li>\n<li><strong>alignment</strong> (<code>AlignmentGeometry</code>): 图片在容器内的对齐方式。</li>\n<li><strong>repeat</strong> (<code>ImageRepeat</code>): 如果图片小于其容器，如何重复填充。可能的值有 <code>ImageRepeat.noRepeat</code>, <code>ImageRepeat.repeat</code>, <code>ImageRepeat.repeatX</code>, <code>ImageRepeat.repeatY</code> 等。</li>\n<li><strong>color</strong> 和 <strong>colorBlendMode</strong> (<code>Color</code> 和 <code>BlendMode</code>): 可以给图片应用颜色滤镜和混合模式。</li>\n</ol>\n<p>使用 <code>Image</code> 组件：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(MaterialApp(<br>    <span class=\"hljs-comment\">// 应用程序的标题，显示在任务管理窗口中。</span><br>      title: <span class=\"hljs-string\">&quot;my App&quot;</span>,<br>      <span class=\"hljs-comment\">// 应用程序的主题，用于定义颜色，字体和阴影等。接受一个 ThemeData 对象</span><br>      theme: ThemeData(primarySwatch: Colors.blue),<br>      <span class=\"hljs-comment\">// 应用的首页</span><br>      home: Scaffold(<br>          appBar: AppBar(<br>            backgroundColor: Colors.blue,<br>            title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;首页&#x27;</span>),<br>            centerTitle: <span class=\"hljs-keyword\">true</span>,<br>          ),<br>          body: Column(<br>            mainAxisAlignment: MainAxisAlignment.center,<br>            children: &lt;Widget&gt;[<br>              Image.network(<br>                <span class=\"hljs-string\">&#x27;https://images.cnblogs.com/cnblogs_com/BNTang/1812554/o_210513114744blogImage.jpg&#x27;</span>,<br>                width: <span class=\"hljs-number\">200</span>,<br>                height: <span class=\"hljs-number\">200</span>,<br>                fit: BoxFit.cover,<br>                alignment: Alignment.center,<br>              ),<br>            ],<br>          )<br>      )<br>    )<br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行效果如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240101180202402-2046471343.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n</ul>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Flutter』有无状态组件","link":"2024/01/02/Flutter/19-「Flutter」有无状态组件"},"next":{"title":"『Flutter』布局组件 Container、Row、Column、Stack","link":"2024/01/01/Flutter/17-『Flutter』布局组件 Container、Row、Column、Stack"},"plink":"http://example.com/2024/01/01/Flutter/18-「Flutter」常用组件 按钮、图片/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.常用组件","title":"2.常用组件","index":"2"},{"id":"3.onlongpress","title":"3.onLongPress","index":"3"},{"id":"4.icon","title":"4.Icon","index":"4"},{"id":"5.图片组件","title":"5.图片组件","index":"5"},{"id":"end","title":"End","index":"6"}]}