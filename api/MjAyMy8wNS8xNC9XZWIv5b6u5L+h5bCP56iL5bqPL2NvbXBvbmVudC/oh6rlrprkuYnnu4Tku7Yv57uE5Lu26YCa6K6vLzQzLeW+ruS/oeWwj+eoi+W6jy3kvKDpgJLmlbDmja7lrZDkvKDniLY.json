{"title":"微信小程序-传递数据子传父","date":"2023-05-14T07:54:48.000Z","date_formatted":{"ll":"May 14, 2023","L":"05/14/2023","MM-DD":"05-14"},"link":"2023/05/14/Web/微信小程序/component/自定义组件/组件通讯/43-微信小程序-传递数据子传父","tags":["微信小程序"],"updated":"2023-05-14T08:12:33.317Z","content":"<p>在看到此篇文章之前，如果你学习过了 Vue，那么这个内容对你而言就是切菜一样简单，老样子，我们先搭建我们的组件，然后在来看需要介绍的知识点。</p>\n<blockquote>\n<p>创建自定义组件</p>\n</blockquote>\n<p>新建 c-demo:</p>\n<p>页面的内容大致就是给一个 view 组件绑定了一个点击事件，点击的时候调用 <code>onTitleTap</code>，在组件当中方法的定义要写在 <code>methods</code> 当中这里是一个注意点，然后通过 mark:xxx 的方式传递了数据。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs wxml\">&lt;!-- <br>  c-demo.wxml<br> --&gt;<br>&lt;view&gt;<br>  &lt;view <br>  bindtap=&quot;onTitleTap&quot;<br>  mark:abc=&quot;&#123;&#123;title&#125;&#125;&quot;<br>  &gt;我是 demo 的 title view &#123;&#123;title&#125;&#125;&lt;/view&gt;<br>  &lt;view&gt;我是 demo 的 content view &#123;&#123;content&#125;&#125;&lt;/view&gt;<br>&lt;/view&gt;<br></code></pre></td></tr></table></figure>\n<p>JS:</p>\n<p>在我们的触发方法当中，我们拿到了传递的数据，然后通过 <code>this.triggerEvent(&quot;demoTitleClick&quot;, curTitle);</code> 主动触发事件的方式传递了一个 title 数据给调用者。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// components/c-demo/c-demo.js</span><br><span class=\"hljs-title class_\">Component</span>(&#123;<br>  <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">   * 组件的初始数据</span><br><span class=\"hljs-comment\">   */</span><br>  <span class=\"hljs-attr\">data</span>: &#123;<br>    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;BNTang&#x27;</span>,<br>    <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;BNTang content&#x27;</span><br>  &#125;,<br>  <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">   * 组件的方法列表</span><br><span class=\"hljs-comment\">   */</span><br>  <span class=\"hljs-attr\">methods</span>: &#123;<br>    <span class=\"hljs-title function_\">onTitleTap</span>(<span class=\"hljs-params\">e</span>) &#123;<br>      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;触发了 c-demo 的 onTitleTap&quot;</span>, e);<br>      <span class=\"hljs-keyword\">const</span> curTitle = e.<span class=\"hljs-property\">mark</span>.<span class=\"hljs-property\">abc</span>;<br>      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;拿到了当前点击的标题内容：&quot;</span>, curTitle);<br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">triggerEvent</span>(<span class=\"hljs-string\">&quot;demoTitleClick&quot;</span>, curTitle);<br>    &#125;<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure>\n<p>首页的 WXML：</p>\n<p>我在首页当中使用了上面新建的 c-demo 组件，绑定了在 c-demo 当中自定义的事件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs wxml\">&lt;!-- <br>  index.wxml<br> --&gt;<br>&lt;myDemo bind:demoTitleClick=&quot;sectionTitleClick&quot;/&gt;<br></code></pre></td></tr></table></figure>\n<p>首页的 JS：</p>\n<p>在 c-demo 的自定义事件当中，传递了一个数据到事件对象中，这里我们可以通过 <code>事件对象.detail</code> 的方式进行获取数据。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// index.js</span><br><span class=\"hljs-title class_\">Page</span>(&#123;<br>  <span class=\"hljs-title function_\">sectionTitleClick</span>(<span class=\"hljs-params\">e</span>) &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;页面监听到了组件触发的事件&quot;</span>);<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;在页面中拿到了自定义组件传递过来的数据&quot;</span>, e.<span class=\"hljs-property\">detail</span>);<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure>\n<h1 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h1>\n<p>?&gt; 想从组件中传递数据给页面，只需要在组件中通过 <code>this.triggerEvent(&quot;自定义事件名称&quot;, &quot;传递的数据&quot;);</code> 这种方式主动触发自定义事件，然后在页面使用这个组件的时候，绑定 <code>triggerEvent</code> 主动触发的自定义事件，就可以在绑定的自定义事件监听方法中，通过事件对象拿到组件传递过来的数据了。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202305/2105804-20230514160748856-1774503522.png\" alt=\"image-20230514160747932\" loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"微信小程序-页面访问组件数据和方法","link":"2023/05/14/Web/微信小程序/component/自定义组件/组件通讯/44-微信小程序-页面访问组件数据和方法"},"next":{"title":"微信小程序-传递数据父传子","link":"2023/05/14/Web/微信小程序/component/自定义组件/组件通讯/42-微信小程序-传递数据父传子"},"plink":"http://example.com/2023/05/14/Web/微信小程序/component/自定义组件/组件通讯/43-微信小程序-传递数据子传父/","toc":[{"id":"总结","title":"总结","index":"1"}],"reading_time":"586 words in 4 min"}