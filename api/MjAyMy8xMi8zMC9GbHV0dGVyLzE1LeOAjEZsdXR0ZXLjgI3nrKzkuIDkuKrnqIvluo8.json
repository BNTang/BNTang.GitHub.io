{"title":"『Flutter』第一个程序","date":"2023-12-30T10:39:43.000Z","date_formatted":{"ll":"Dec 30, 2023","L":"12/30/2023","MM-DD":"12-30"},"link":"2023/12/30/Flutter/15-「Flutter」第一个程序","tags":["Flutter"],"updated":"2024-01-09T05:51:10.857Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231161644012-1895889243.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>经过上一篇文章，就已经可以将 Flutter 的开发环境搭建成功了，这一篇文章就是接着上一篇。咱们来编写属于自己的第一个 Flutter 程序。</p>\n<h1 id=\"2.创建项目\">2.创建项目<a title=\"#2.创建项目\" href=\"#2.创建项目\"></a></h1>\n<p>关于创建项目，我在上一篇文章中已经讲过了，这里就不再赘述了。</p>\n<p>解决大家可能出现的疑惑，大家创建好一个项目之后，可能项目结构显示的内容如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231161856465-721656152.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>因为编辑器默认给我们选择的是 <code>android</code>:</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231161924657-1416682869.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>需要手动的选择为 <code>Project</code>:</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231162013048-195185696.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>这样一来我们项目的所有内容就都显示出来了。</p>\n<h1 id=\"3.编写代码\">3.编写代码<a title=\"#3.编写代码\" href=\"#3.编写代码\"></a></h1>\n<p>首先备份一下 <code>main.dart</code> 文件, 这个里面我们创建好项目之后官方给我们默认生成的代码，我们先不要删除。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231162152949-1320054102.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>接下来就可以开始慢慢分析 <code>main.dart</code> 代码了。</p>\n<h2 id=\"3.1.分析代码\">3.1.分析代码<a title=\"#3.1.分析代码\" href=\"#3.1.分析代码\"></a></h2>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br></code></pre></td></tr></table></figure>\n<p>这一行代码是导入 <code>material</code> 包，这个包是 Flutter 中的一个基础包，里面包含了很多基础的组件，我们在开发中经常会用到。</p>\n<p>这个时候呢，我们可以打开 Flutter 的官方文档：<a href=\"https://flutter.cn/%EF%BC%8C%E6%89%BE%E5%88%B0\" target=\"_blank\">https://flutter.cn/，找到</a> <a href=\"https://flutter.cn/docs/development/ui/widgets/material\" target=\"_blank\">https://flutter.cn/docs/development/ui/widgets/material</a></p>\n<p>其实就是导入了 Flutter 的 UI 库。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(<span class=\"hljs-keyword\">const</span> MyApp());<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这一行代码是入口函数，这个函数是 Flutter 程序的入口，这个函数是固定写法，不要去改变它。</p>\n<p>runApp 函数是 Flutter 中的一个内置函数，这个函数的作用是将 MyApp 这个组件渲染到屏幕上。</p>\n<p>这个 MyApp 组件是我们自己定义的，我们可以在这个组件中定义我们自己的组件。在定义自己的组件之前我们先来阅读下官方文档中的这一段话：</p>\n<p><code>Flutter widgets are built using a modern framework that takes inspiration from React. The central idea is that you build your UI out of widgets. Widgets describe what their view should look like given their current configuration and state. When a widget’s state changes, the widget rebuilds its description, which the framework diffs against the previous description in order to determine the minimal changes needed in the underlying render tree to transition from one state to the next.</code></p>\n<p>官方文档链接：<a href=\"https://flutter.cn/docs/ui\" target=\"_blank\">https://flutter.cn/docs/ui</a></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231163757633-1100115896.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>大概意思就是说 Flutter 中的组件是由现代化的框架构建的，这个框架是受 React 启发的。这个框架的核心思想就是你可以通过组件来构建你的 UI。组件描述了它们的视图应该如何在给定当前配置和状态的情况下看起来。当组件的状态发生变化时，组件会重新构建它的描述，框架会将其与之前的描述进行对比，以确定在底层渲染树中从一个状态过渡到另一个状态所需的最小更改。</p>\n<p>一句话总结就是：Flutter 中的组件是由现代化的框架构建的，这个框架是受 React 启发的。这个框架的核心思想就是你可以通过组件来构建你的 UI。</p>\n<h2 id=\"3.2.开发第一个-flutter-程序\">3.2.开发第一个 Flutter 程序<a title=\"#3.2.开发第一个-flutter-程序\" href=\"#3.2.开发第一个-flutter-程序\"></a></h2>\n<p>这个时候呢，我就知道了是通过组件的形式来构建 UI 的，那么我们就可以开始编写我们的第一个组件了。我想，居然是组件那么官方肯定也提供了组件给我们使用，好巧不巧我就发现了，先来用下 <code>Text</code> 组件。</p>\n<p>官方文档：<a href=\"https://api.flutter-io.cn/flutter/widgets/Text-class.html\" target=\"_blank\">https://api.flutter-io.cn/flutter/widgets/Text-class.html</a></p>\n<p>我将 Text 组件代码添加到 runApp 函数中，然后将 runApp 函数中的 <code>const MyApp()</code> 删除掉，这个时候我们的代码就变成了这样：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  runApp(Text(<br>    <span class=\"hljs-string\">&#x27;Hello World&#x27;</span>,<br>    textAlign: TextAlign.center,<br>    overflow: TextOverflow.ellipsis,<br>    style: <span class=\"hljs-keyword\">const</span> TextStyle(fontWeight: FontWeight.bold),<br>  ));<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行一下程序（怎么运行项目前面也已经介绍了），看看效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231170152790-1198665093.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>发现报错了，这是为什么呢，因为我们开发的 Flutter 项目是运行在多个国家的，因为在非中国地区有的国家文字是从右到左这样显示的，而中国是从左到右，所以我们需要在 <code>Text</code> 组件中添加 <code>textDirection: TextDirection.ltr,</code> 这一行代码，这样就可以解决这个问题了。</p>\n<p>这里正好借此机会，给大家介绍下我们更改了代码模拟器动态更新最新效果，点击 Run 控制台中的 <code>Flutter Hot Restart</code> 按钮：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231170452938-823080634.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>这个时候就会看到我们最新代码的效果了：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231170545164-1671500137.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>到此为止，我们的第一个 Flutter 程序就编写完成了。</p>\n<h2 id=\"3.3.如何学习\">3.3.如何学习<a title=\"#3.3.如何学习\" href=\"#3.3.如何学习\"></a></h2>\n<p>接下来跟大家聊一下，我是怎么学习 Flutter 的：</p>\n<ol>\n<li>通过官方文档来学习的，我觉得官方文档写的很好，很详细，而且有很多的示例代码，大家可以通过官方文档来学习 Flutter。</li>\n<li>通过 AI，我觉得 AI 也是一个很好的学习方式，我通过 AI 学习了很多的知识，大家可以通过 AI 来学习 Flutter。（混元大模型：<code>https://hunyuan.tencent.com</code>)</li>\n<li>英语好的呢，自己可以按住 Ctrl + 鼠标左键，然后点击组件，就可以看到组件的详细介绍了。</li>\n<li>英语不好的就可以通过如上分别介绍的官方文档+AI的方式去学习。</li>\n</ol>\n<p>这里我就用混元大模型来举例子，我在混元大模型中搜索了 <code>Text</code> 组件，然后就可以看到 <code>Text</code> 组件的详细介绍了：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231231171140607-1243641379.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>你就把 AI 当牛做马一顿问，它就会告诉你答案，这样你就可以很快的学习到知识了。</p>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n</ul>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Flutter』还原初始程序","link":"2023/12/31/Flutter/16-「Flutter」还原初始程序"},"next":{"title":"『Flutter』开发环境搭建","link":"2023/12/30/Flutter/14-「Flutter」开发环境搭建"},"plink":"http://example.com/2023/12/30/Flutter/15-「Flutter」第一个程序/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.创建项目","title":"2.创建项目","index":"2"},{"id":"3.编写代码","title":"3.编写代码","index":"3","children":[{"id":"3.1.分析代码","title":"3.1.分析代码","index":"3.1"},{"id":"3.2.开发第一个-flutter-程序","title":"3.2.开发第一个 Flutter 程序","index":"3.2"},{"id":"3.3.如何学习","title":"3.3.如何学习","index":"3.3"}]},{"id":"end","title":"End","index":"4"}]}