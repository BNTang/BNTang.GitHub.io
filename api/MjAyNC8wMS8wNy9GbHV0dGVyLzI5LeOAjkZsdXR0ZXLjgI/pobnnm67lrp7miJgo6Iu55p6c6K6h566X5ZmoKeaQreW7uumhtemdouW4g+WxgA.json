{"title":"『Flutter』项目实战(苹果计算器)搭建页面布局","date":"2024-01-07T03:39:06.000Z","date_formatted":{"ll":"Jan 7, 2024","L":"01/07/2024","MM-DD":"01-07"},"link":"2024/01/07/Flutter/29-『Flutter』项目实战(苹果计算器)搭建页面布局","tags":["Flutter"],"updated":"2024-01-19T03:14:11.066Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107114000031-894030577.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>经过上一篇文章的介绍，已经完成了项目的初始化，以及项目与容器的搭建，接下来就是搭建页面布局了。</p>\n<h1 id=\"2.页面布局\">2.页面布局<a title=\"#2.页面布局\" href=\"#2.页面布局\"></a></h1>\n<p>完成效果如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107174709880-494747359.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>要将上图中所可以看到的内容全部实现，只是布局与样式的实现，不涉及任何逻辑，所以这里就不再赘述了，直接上代码：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">/// <span class=\"language-markdown\">flutter 中的注释有哪些</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">1.单行注释 //</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">2.多行注释 /<span class=\"hljs-emphasis\">* *</span>/</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">3.文档注释 ///</span></span><br><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">buildButton 方法用于构建按钮</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">btnText 表示按钮的文本</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">curColor 表示按钮的背景颜色</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">isDouble 表示按钮是否是双倍宽度</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">返回一个按钮组件</span></span><br>Widget buildButton(<span class=\"hljs-built_in\">String</span> btnText, <span class=\"hljs-built_in\">dynamic</span> curColor, &#123;<span class=\"hljs-built_in\">bool</span> isDouble = <span class=\"hljs-keyword\">false</span>&#125;) &#123;<br>  <span class=\"hljs-keyword\">return</span> Container(<br>    <span class=\"hljs-comment\">// margin 表示容器的外边距, const EdgeInsets.only 表示只设置某个方向的外边距</span><br>    margin: <span class=\"hljs-keyword\">const</span> EdgeInsets.only(top: <span class=\"hljs-number\">10</span>),<br>    <span class=\"hljs-comment\">// child 表示容器的子组件, GestureDetector 表示手势检测组件</span><br>    child: GestureDetector(<br>      <span class=\"hljs-comment\">// onTap 表示手势检测组件的点击事件</span><br>      onTap: () &#123;<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;按钮被点击了 <span class=\"hljs-subst\">$&#123;btnText&#125;</span>&quot;</span>);<br>      &#125;,<br>      <span class=\"hljs-comment\">// child 表示手势检测组件的子组件</span><br>      child: Container(<br>        <span class=\"hljs-comment\">// width 表示容器的宽度</span><br>        width: isDouble ? <span class=\"hljs-number\">180</span> : <span class=\"hljs-number\">80</span>,<br>        <span class=\"hljs-comment\">// height 表示容器的高度</span><br>        height: <span class=\"hljs-number\">80</span>,<br>        <span class=\"hljs-comment\">// decoration 表示容器的装饰器，BoxDecoration 表示装饰器的样式</span><br>        decoration: BoxDecoration(<br>            <span class=\"hljs-comment\">// shape 表示装饰器的形状，BoxShape.rectangle 表示矩形</span><br>            shape: BoxShape.rectangle,<br>            <span class=\"hljs-comment\">// borderRadius 表示装饰器的圆角，const BorderRadius.all 表示所有的圆角</span><br>            borderRadius: <span class=\"hljs-keyword\">const</span> BorderRadius.all(Radius.circular(<span class=\"hljs-number\">40</span>)),<br>            <span class=\"hljs-comment\">// color 表示装饰器的背景颜色</span><br>            color: curColor),<br>        <span class=\"hljs-comment\">// child 表示容器的子组件</span><br>        child: Center(<br>          <span class=\"hljs-comment\">// child 表示子组件的子组件</span><br>          child: Text(btnText,<br>              <span class=\"hljs-comment\">// style 表示文本的样式</span><br>              style: <span class=\"hljs-keyword\">const</span> TextStyle(<br>                  <span class=\"hljs-comment\">// fontSize 表示文本的大小</span><br>                  fontSize: <span class=\"hljs-number\">30</span>,<br>                  <span class=\"hljs-comment\">// fontWeight 表示文本的粗细</span><br>                  fontWeight: FontWeight.bold,<br>                  <span class=\"hljs-comment\">// color 表示文本的颜色</span><br>                  color: Colors.white)),<br>        ),<br>      ),<br>    ),<br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>简单的说一下上面代码的逻辑：</p>\n<ul>\n<li>首先定义了一个 <code>buildButton</code> 方法，用于构建按钮，该方法接收三个参数，分别是按钮的文本、按钮的背景颜色、按钮是否是双倍宽度，返回一个按钮组件。</li>\n<li>在 <code>buildButton</code> 方法中，首先定义了一个 <code>Container</code> 容器，用于包裹按钮组件，然后在 <code>Container</code> 容器中定义了一个 <code>GestureDetector</code> 手势检测组件，用于检测按钮的点击事件，最后在 <code>GestureDetector</code> 手势检测组件中定义了一个 <code>Container</code> 容器，用于包裹按钮组件的样式。</li>\n<li>在 <code>Container</code> 容器中，定义了按钮组件的宽度、高度、装饰器、子组件。</li>\n<li>在 <code>Container</code> 容器的装饰器中，定义了按钮组件的形状、圆角、背景颜色。</li>\n<li>在 <code>Container</code> 容器的子组件中，定义了按钮组件的子组件。</li>\n<li>在按钮组件的子组件中，定义了按钮组件的子组件的子组件。</li>\n</ul>\n<p>调用 <code>buildButton</code> 方法，构建按钮组件，更改 CalculatorState 类中的代码如下：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">/// <span class=\"language-markdown\">CalculatorState 是一个 State 对象，继承自 State</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">用于保存 CalculatorWidget 的状态</span></span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CalculatorState</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">State</span> </span>&#123;<br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">保存计算器的输出</span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">_ 表示私有变量</span></span></span><br>  <span class=\"hljs-built_in\">String</span> _output = <span class=\"hljs-string\">&#x27;0&#x27;</span>;<br><br>  <span class=\"hljs-meta\">@override</span><br>  Widget build(BuildContext context) &#123;<br>    <span class=\"hljs-keyword\">return</span> Column(<br>      children: [<br>        <span class=\"hljs-comment\">// 计算器上半部分内容</span><br>        Container(<br>          <span class=\"hljs-comment\">// alignment 表示容器的对齐方式, Alignment.centerRight 表示右对齐</span><br>          alignment: Alignment.centerRight,<br>          <span class=\"hljs-comment\">// padding 表示容器的内边距, EdgeInsets.fromLTRB 表示分别设置左、上、右、下的内边距</span><br>          padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.fromLTRB(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">0</span>),<br>          child: Text(<br>            <span class=\"hljs-comment\">// _output 表示计算器的输出，因为是动态计算的需要用状态保存</span><br>            _output,<br>            style: <span class=\"hljs-keyword\">const</span> TextStyle(fontSize: <span class=\"hljs-number\">62</span>, color: Colors.white),<br>          ),<br>        ),<br>        <span class=\"hljs-comment\">// 计算器下半部分内容</span><br>        Container(<br>          <span class=\"hljs-comment\">// child 表示容器的子组件</span><br>          child: Column(<br>            children: [<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;AC&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;+/-&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;%&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;÷&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;7&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;8&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;9&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;x&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;4&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;5&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;6&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;-&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;1&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;2&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;3&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;+&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;0&quot;</span>, Colors.grey, isDouble: <span class=\"hljs-keyword\">true</span>),<br>                  buildButton(<span class=\"hljs-string\">&quot;.&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;=&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>            ],<br>          ),<br>        )<br>      ],<br>    );<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>CalculatorState 中的代码不再赘述，主要是调用了 <code>buildButton</code> 方法，构建按钮组件。</p>\n<p>更改 MaterialApp theme 为 <code>dark</code>：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\">theme: ThemeData.dark()<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107211543029-841795533.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"3.运行效果\">3.运行效果<a title=\"#3.运行效果\" href=\"#3.运行效果\"></a></h1>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107211638209-286017381.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<blockquote>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n<li>😁如果您觉得本文对您有所帮助，可以关注我的公众号 <code>BNTang</code>，我会不定期分享一些干货文章。</li>\n<li>🍻感谢您的支持，我会继续努力的！</li>\n</ul>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Flutter』项目实战(苹果计算器)处理输入数据","link":"2024/01/07/Flutter/30-『Flutter』项目实战(苹果计算器)处理输入数据"},"next":{"title":"『Flutter』项目实战(苹果计算器)搭建基本结构","link":"2024/01/06/Flutter/28-『Flutter』项目实战(苹果计算器)搭建基本结构"},"plink":"http://example.com/2024/01/07/Flutter/29-『Flutter』项目实战(苹果计算器)搭建页面布局/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.页面布局","title":"2.页面布局","index":"2"},{"id":"3.运行效果","title":"3.运行效果","index":"3"},{"id":"end","title":"End","index":"4"}]}