{"title":"MongoDB-树形结构","date":"2022-09-10T10:39:45.000Z","date_formatted":{"ll":"Sep 10, 2022","L":"09/10/2022","MM-DD":"09-10"},"link":"2022/09/10/MongoDB/索引/MongoDB4.x-数据模型/05-MongoDB-树形结构","tags":["MongoDB"],"updated":"2022-09-10T10:50:17.722Z","content":"<h1 id=\"树形结构\">树形结构<a title=\"#树形结构\" href=\"#树形结构\"></a></h1>\n<p>在 MongoDB 中我们除了可以使用 ‘内嵌式结构’ 和 ‘规范式结构’ 来表示数据的关系以外, 由于MongoDB数据的灵活性, 我们还可以使用’树形结构’来表示数据之间的关系。</p>\n<h1 id=\"树形结构概述\">树形结构概述<a title=\"#树形结构概述\" href=\"#树形结构概述\"></a></h1>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">           Database<br>              |<br>    |--------------------|<br>Relational           No-Relational<br>    |          |-----------|-------------|<br>  MySQL      Key-Value                Document<br>               |                         |<br>             Redis                    MongoDB<br></code></pre></td></tr></table></figure>\n<p>对于经常需要查询子节点的数据可以存储如以下的数据结构来表示：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">&#123;name:&#x27;Database&#x27;, parent:null&#125;<br>&#123;name:&#x27;No-Relational&#x27;, parent:&#x27;Database&#x27;&#125;<br>&#123;name:&#x27;Document&#x27;, parent:&#x27;No-Relational&#x27;&#125;<br>&#123;name:&#x27;MongoDB&#x27;, parent:&#x27;Document&#x27;&#125;<br>&#123;name:&#x27;Key-Value&#x27;, parent:&#x27;No-Relational&#x27;&#125;<br>&#123;name:&#x27;Redis&#x27;, parent:&#x27;Key-Value&#x27;&#125;<br></code></pre></td></tr></table></figure>\n<p>例如: 我们要查询非关系型数据库有几种类型, 我们可以使用 <code>find(&#123;parent:'No-Relational'&#125;)</code>。</p>\n<p>对于经常需要查询父节点的数据可以存储如下的数据结构来表示：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">&#123;name:&#x27;Database&#x27;, children:[&#x27;Relational&#x27;, &#x27;No-Relational&#x27;]&#125;<br>&#123;name:&#x27;No-Relational&#x27;, children:[&#x27;Key-Value&#x27;, &#x27;Document&#x27;]&#125;<br>&#123;name:&#x27;Document&#x27;, children:[&#x27;MongoDB&#x27;]&#125;<br>&#123;name:&#x27;MongoDB&#x27;, children:[]&#125;<br></code></pre></td></tr></table></figure>\n<p>例如: 我们要查询MongoDB是什么类型的的数据, 我们可以使用 <code>find(&#123;children:&#123;$in:['MongoDB']&#125;&#125;)</code>。</p>\n<p>对于经常查询祖先或者后代节点的数据的存储结构表示：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">&#123;name:&#x27;Database&#x27;, ancestors:[]&#125;<br>&#123;name:&#x27;No-Relational&#x27;, ancestors:[&#x27;Database&#x27;]&#125;<br>&#123;name:&#x27;Document&#x27;, ancestors:[&#x27;Database&#x27;, &#x27;No-Relational&#x27;]&#125;<br>&#123;name:&#x27;MongoDB&#x27;, ancestors:[&#x27;Database&#x27;, &#x27;No-Relational&#x27;, &#x27;Document&#x27;]&#125;<br></code></pre></td></tr></table></figure>\n<p>例如: 我们要查询MongoDB的祖先有哪些, 我们可以使用 <code>find(&#123;name:'MongoDB'&#125;)</code>，我们要查询Database的后代有哪些, 我们可以使用 <code>find(&#123;ancestors:&#123;$in:['Database']&#125;&#125;&#125;)</code>。</p>\n<p>还有一种就是结合深度优先或者广度优先算法来实现树形结构，这里不介绍。</p>\n","prev":{"title":"Mongoose-开篇","link":"2022/09/10/MongoDB/mongoose/01-Mongoose-开篇"},"next":{"title":"MongoDB-多对多关系","link":"2022/09/10/MongoDB/索引/MongoDB4.x-数据模型/04-MongoDB-多对多关系"},"plink":"http://example.com/2022/09/10/MongoDB/索引/MongoDB4.x-数据模型/05-MongoDB-树形结构/","toc":[{"id":"树形结构","title":"树形结构","index":"1"},{"id":"树形结构概述","title":"树形结构概述","index":"2"}],"reading_time":"388 words in 3 min"}