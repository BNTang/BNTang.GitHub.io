{"title":"『云函数』处理数据","date":"2023-12-03T09:46:02.000Z","date_formatted":{"ll":"Dec 3, 2023","L":"12/03/2023","MM-DD":"12-03"},"link":"2023/12/03/Web/微信小程序/云开发/73-『云函数』处理数据","tags":["云开发","微信小程序"],"updated":"2024-01-19T03:14:11.100Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231203184024695-829560484.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>经过上篇文章的介绍，详细的给大家介绍了一下云函数当中的传参与调试方式，在看本次文章介绍的内容之前首先我抛出一个问题，我们为什么使用云函数呢？是不是就是为了对我们的数据进行加工处理，对吧，所以，那么接下来我们就来看看云函数当中的数据处理。</p>\n<h1 id=\"2.云函数的数据处理\">2.云函数的数据处理<a title=\"#2.云函数的数据处理\" href=\"#2.云函数的数据处理\"></a></h1>\n<p>在云函数的目录下，创建一个叫做 getStu 的云函数：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240117070421026-1195590624.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<blockquote>\n<p>注意点：我们是可以直接在云函数中访问数据库的</p>\n</blockquote>\n<p>那么在云函数中，访问数据库的步骤如下：</p>\n<ol>\n<li>拿到当前环境对应的数据库</li>\n<li>拿到数据库中指定的集合</li>\n<li>查询指定集合数据</li>\n<li>对数据进行加工处理</li>\n<li>返回加工后的数据，给前端直接使用</li>\n</ol>\n<p>那么首先来看前面的三步：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// 云函数入口函数</span><br><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>    <span class=\"hljs-comment\">// 1. 拿到当前环境对应的数据库</span><br>    <span class=\"hljs-keyword\">const</span> db = cloud.<span class=\"hljs-title function_\">database</span>();<br>    <br>    <span class=\"hljs-comment\">// 2. 拿到数据库中指定的集合</span><br>    <span class=\"hljs-keyword\">const</span> stuCollection = db.<span class=\"hljs-title function_\">collection</span>(<span class=\"hljs-string\">&quot;stu&quot;</span>);<br>    <br>    <span class=\"hljs-comment\">// 3. 查询指定集合数据</span><br>    <span class=\"hljs-keyword\">const</span> res = stuCollection.<span class=\"hljs-title function_\">get</span>();<br>    <br>    <span class=\"hljs-keyword\">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>注意点：在第三步中，我利用 <code>stuCollection.get();</code> 查询了指定集合的数据，在之前微信小程序代码中操作数据库获取数据的时候，我是不是说过，最多只能获取 20 条数据，那么现在在云函数中，最多是可以获取 100 条数据的。</p>\n</blockquote>\n<p>编写一个调用按钮：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;primary&quot;</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\">&quot;onCloudFnProcessingDataTap&quot;</span>&gt;</span>云函数处理数据<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>编写对应的事件回调代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onCloudFnProcessingDataTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> wx.<span class=\"hljs-property\">cloud</span>.<span class=\"hljs-title function_\">callFunction</span>(&#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;getStu&#x27;</span>,<br>    &#125;);<br><br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;,<br></code></pre></td></tr></table></figure>\n<p>运行效果如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240117071252682-1759039693.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>可以看到已经超了 20 条数据了，那么接下来我们就来看看如何对数据进行加工处理。</p>\n<p>完成第四步：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// 云函数入口函数</span><br><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>    <span class=\"hljs-comment\">// 1. 拿到当前环境对应的数据库</span><br>    <span class=\"hljs-keyword\">const</span> db = cloud.<span class=\"hljs-title function_\">database</span>();<br><br>    <span class=\"hljs-comment\">// 2. 拿到数据库中指定的集合</span><br>    <span class=\"hljs-keyword\">const</span> stuCollection = db.<span class=\"hljs-title function_\">collection</span>(<span class=\"hljs-string\">&quot;stu&quot;</span>);<br><br>    <span class=\"hljs-comment\">// 3. 查询指定集合数据</span><br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">get</span>();<br><br>    <span class=\"hljs-comment\">// 4.对数据进行加工处理</span><br>    <span class=\"hljs-keyword\">const</span> stuInfo = &#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;终结二班&quot;</span>,<br>        <span class=\"hljs-comment\">// 返回结果的数据是放在 data 中，所以这里需要 .data 进行获取</span><br>        <span class=\"hljs-attr\">list</span>: res.<span class=\"hljs-property\">data</span><br>    &#125;<br><br>    <span class=\"hljs-comment\">// 5.返回加工后的数据，给前端直接使用</span><br>    <span class=\"hljs-keyword\">return</span> stuInfo;<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>注意点：stuCollection.get(); 是异步的所以我们需要使用 <code>await</code> 关键字来等待数据返回之后再进行下一步操作。本人在测试过程中，没有使用 <code>await</code> 关键字，导致数据返回的是 <code>undefined</code>，所以大家一定要注意。</p>\n</blockquote>\n<p>第四步中，对数据进行了加工处理, 再重新上传云函数，然后再次运行效果如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240117072239442-533711160.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>本篇文章内容介绍到这就结束了，我们下期再见，感谢大家的观看，谢谢大家。</p>\n<blockquote>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n<li>😁如果您觉得本文对您有所帮助，可以关注我的公众号 <code>BNTang</code>，我会不定期分享一些干货文章。</li>\n<li>🍻感谢您的支持，我会继续努力的！</li>\n</ul>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『云存储』获取临时路径","link":"2023/12/03/Web/微信小程序/云开发/70-『云存储』获取临时路径"},"next":{"title":"『云函数』快速获取 OpenID","link":"2023/12/03/Web/微信小程序/云开发/74-『云函数』快速获取 OpenID"},"plink":"http://example.com/2023/12/03/Web/微信小程序/云开发/73-『云函数』处理数据/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.云函数的数据处理","title":"2.云函数的数据处理","index":"2"}]}