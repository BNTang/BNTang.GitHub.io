{"title":"『Flutter』项目实战(苹果计算器)处理输入数据","date":"2024-01-07T13:24:01.000Z","date_formatted":{"ll":"Jan 7, 2024","L":"01/07/2024","MM-DD":"01-07"},"link":"2024/01/07/Flutter/30-『Flutter』项目实战(苹果计算器)处理输入数据","tags":["Flutter"],"updated":"2024-01-19T03:14:11.066Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107212448794-1851565970.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>经过上一篇文章的介绍，已经完成了项目的页面布局，接下来就是处理输入数据了。</p>\n<h1 id=\"2.处理输入数据\">2.处理输入数据<a title=\"#2.处理输入数据\" href=\"#2.处理输入数据\"></a></h1>\n<p>通过上一篇文章中，我编写了一个 <code>buildButton</code> 方法，用于构建按钮，这个方法中有一个 <code>onTap</code> 方法，用于处理按钮的点击事件，所以每个按钮的点击事件都会调用这个方法，接下来就要在这个方法中处理输入数据了。</p>\n<p>如果代码都写在 <code>onTap</code> 方法中，那么代码会非常的冗余，所以我将代码抽取出来，封装成一个方法，这个方法的作用就是处理输入数据，代码如下：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">/// <span class=\"language-markdown\">Flutter 程序的入口文件</span></span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">Flutter 程序的入口函数</span></span><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  <span class=\"hljs-comment\">// 1.Flutter 主函数，程序一运行起来就会执行</span><br>  <span class=\"hljs-comment\">// 2.运行 App 并且创建组件</span><br>  runApp(<span class=\"hljs-keyword\">const</span> MyApp());<br>&#125;<br><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">MyApp 是一个组件，继承自 StatelessWidget，是一个无状态的组件</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">并且是符合 Material Design 规范的组件</span></span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyApp</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>&#123;<br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">const 关键字表示 MyApp 是一个常量，一旦创建就不会被修改</span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">super.key 表示调用父类的构造函数</span></span><br>  <span class=\"hljs-keyword\">const</span> MyApp(&#123;<span class=\"hljs-keyword\">super</span>.key&#125;);<br><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">自定义无状态组件必须重写父类的 build 方法，返回我们构建好的组件</span></span><br>  <span class=\"hljs-meta\">@override</span><br>  Widget build(BuildContext context) &#123;<br>    <span class=\"hljs-comment\">// MaterialApp 是一个符合 Material Design 规范的组件</span><br>    <span class=\"hljs-keyword\">return</span> MaterialApp(<br>      theme: ThemeData.dark(),<br>      <span class=\"hljs-comment\">// Scaffold 是一个组件，用于实现页面的基本结构</span><br>      home: Scaffold(<br>        <span class=\"hljs-comment\">// appBar 是 Scaffold 的一个属性，表示页面的头部</span><br>        appBar: AppBar(<br>          <span class=\"hljs-comment\">// title 是 AppBar 的一个属性，表示头部的标题</span><br>          title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;计算器&#x27;</span>),<br>          <span class=\"hljs-comment\">// centerTitle 表示标题是否居中</span><br>          centerTitle: <span class=\"hljs-keyword\">true</span>,<br>        ),<br>        <span class=\"hljs-comment\">// body 是 Scaffold 的一个属性，表示页面的主体部分</span><br>        body: <span class=\"hljs-keyword\">const</span> CalculatorWidget(),<br>      ),<br>    );<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">CalculatorWidget 是一个组件，继承自 StatefulWidget，是一个有状态的组件</span></span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CalculatorWidget</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatefulWidget</span> </span>&#123;<br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">const 关键字表示 CalculatorWidget 是一个常量，一旦创建就不会被修改</span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">super.key 表示调用父类的构造函数</span></span><br>  <span class=\"hljs-keyword\">const</span> CalculatorWidget(&#123;<span class=\"hljs-keyword\">super</span>.key&#125;);<br><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">createState 方法返回一个 State 对象</span></span><br>  <span class=\"hljs-meta\">@override</span><br>  State&lt;StatefulWidget&gt; createState() &#123;<br>    <span class=\"hljs-comment\">// 返回一个 CalculatorState 对象</span><br>    <span class=\"hljs-keyword\">return</span> CalculatorState();<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">CalculatorState 是一个 State 对象，继承自 State</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">用于保存 CalculatorWidget 的状态</span></span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CalculatorState</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">State</span> </span>&#123;<br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">保存计算器的输出</span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">_ 表示私有变量</span></span></span><br>  <span class=\"hljs-built_in\">String</span> _output = <span class=\"hljs-string\">&#x27;0&#x27;</span>;<br><br>  <span class=\"hljs-keyword\">void</span> onBtnClick(btnText) &#123;<br>    <span class=\"hljs-keyword\">switch</span> (btnText) &#123;<br>      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;AC&quot;</span>:<br>        <span class=\"hljs-keyword\">break</span>;<br>      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;+/-&quot;</span>:<br>        <span class=\"hljs-keyword\">break</span>;<br>      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;%&quot;</span>:<br>        <span class=\"hljs-keyword\">break</span>;<br>      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;÷&quot;</span>:<br>        <span class=\"hljs-keyword\">break</span>;<br>      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;x&quot;</span>:<br>        <span class=\"hljs-keyword\">break</span>;<br>      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;+&quot;</span>:<br>        <span class=\"hljs-keyword\">break</span>;<br>      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;-&quot;</span>:<br>        <span class=\"hljs-keyword\">break</span>;<br>      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;=&quot;</span>:<br>        <span class=\"hljs-keyword\">break</span>;<br>      <span class=\"hljs-keyword\">default</span>:<br>        <span class=\"hljs-comment\">// 如果是小数, 那么就不能再输入点了，如果已经包含了点，那么就不能再输入点了</span><br>        <span class=\"hljs-keyword\">if</span> (btnText == <span class=\"hljs-string\">&quot;.&quot;</span> &amp;&amp; _output.contains(<span class=\"hljs-string\">&quot;.&quot;</span>)) <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-comment\">// 最多只能输入11位数，如果超过了就不能再输入了</span><br>        <span class=\"hljs-keyword\">if</span> (_output.length &gt;= <span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-comment\">// 第一次输入，如果输入的是0，那么就替换掉</span><br>        <span class=\"hljs-keyword\">if</span> (btnText != <span class=\"hljs-string\">&quot;.&quot;</span> &amp;&amp; _output == <span class=\"hljs-string\">&quot;0&quot;</span>) &#123;<br>          _output = btnText;<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>          <span class=\"hljs-comment\">// 如果不是第一次输入，那么就拼接</span><br>          _output += btnText;<br>        &#125;<br>        <span class=\"hljs-keyword\">break</span>;<br>    &#125;<br><br>    <span class=\"hljs-comment\">// 只要执行了这句话, 就会更新UI</span><br>    setState(() &#123;&#125;);<br>  &#125;<br><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">flutter 中的注释有哪些</span></span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">1.单行注释 //</span></span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">2.多行注释 /* */</span></span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">3.文档注释 ///</span></span></span><br><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">buildButton 方法用于构建按钮</span></span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">btnText 表示按钮的文本</span></span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">curColor 表示按钮的背景颜色</span></span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">isDouble 表示按钮是否是双倍宽度</span></span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">返回一个按钮组件</span></span></span><br>  Widget buildButton(<span class=\"hljs-built_in\">String</span> btnText, <span class=\"hljs-built_in\">dynamic</span> curColor,<br>      &#123;<span class=\"hljs-built_in\">bool</span> isDouble = <span class=\"hljs-keyword\">false</span>&#125;) &#123;<br>    <span class=\"hljs-keyword\">return</span> Container(<br>      <span class=\"hljs-comment\">// margin 表示容器的外边距, const EdgeInsets.only 表示只设置某个方向的外边距</span><br>      margin: <span class=\"hljs-keyword\">const</span> EdgeInsets.only(top: <span class=\"hljs-number\">10</span>),<br>      <span class=\"hljs-comment\">// child 表示容器的子组件, GestureDetector 表示手势检测组件</span><br>      child: GestureDetector(<br>        <span class=\"hljs-comment\">// onTap 表示手势检测组件的点击事件</span><br>        onTap: () =&gt; onBtnClick(btnText),<br>        <span class=\"hljs-comment\">// child 表示手势检测组件的子组件</span><br>        child: Container(<br>          <span class=\"hljs-comment\">// width 表示容器的宽度</span><br>          width: isDouble ? <span class=\"hljs-number\">180</span> : <span class=\"hljs-number\">80</span>,<br>          <span class=\"hljs-comment\">// height 表示容器的高度</span><br>          height: <span class=\"hljs-number\">80</span>,<br>          <span class=\"hljs-comment\">// decoration 表示容器的装饰器，BoxDecoration 表示装饰器的样式</span><br>          decoration: BoxDecoration(<br>              <span class=\"hljs-comment\">// shape 表示装饰器的形状，BoxShape.rectangle 表示矩形</span><br>              shape: BoxShape.rectangle,<br>              <span class=\"hljs-comment\">// borderRadius 表示装饰器的圆角，const BorderRadius.all 表示所有的圆角</span><br>              borderRadius: <span class=\"hljs-keyword\">const</span> BorderRadius.all(Radius.circular(<span class=\"hljs-number\">40</span>)),<br>              <span class=\"hljs-comment\">// color 表示装饰器的背景颜色</span><br>              color: curColor),<br>          <span class=\"hljs-comment\">// child 表示容器的子组件</span><br>          child: Center(<br>            <span class=\"hljs-comment\">// child 表示子组件的子组件</span><br>            child: Text(btnText,<br>                <span class=\"hljs-comment\">// style 表示文本的样式</span><br>                style: <span class=\"hljs-keyword\">const</span> TextStyle(<br>                    <span class=\"hljs-comment\">// fontSize 表示文本的大小</span><br>                    fontSize: <span class=\"hljs-number\">30</span>,<br>                    <span class=\"hljs-comment\">// fontWeight 表示文本的粗细</span><br>                    fontWeight: FontWeight.bold,<br>                    <span class=\"hljs-comment\">// color 表示文本的颜色</span><br>                    color: Colors.white)),<br>          ),<br>        ),<br>      ),<br>    );<br>  &#125;<br><br>  <span class=\"hljs-meta\">@override</span><br>  Widget build(BuildContext context) &#123;<br>    <span class=\"hljs-keyword\">return</span> Column(<br>      children: [<br>        <span class=\"hljs-comment\">// 计算器上半部分内容</span><br>        Container(<br>          <span class=\"hljs-comment\">// alignment 表示容器的对齐方式, Alignment.centerRight 表示右对齐</span><br>          alignment: Alignment.centerRight,<br>          <span class=\"hljs-comment\">// padding 表示容器的内边距, EdgeInsets.fromLTRB 表示分别设置左、上、右、下的内边距</span><br>          padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.fromLTRB(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">0</span>),<br>          child: Text(<br>            <span class=\"hljs-comment\">// _output 表示计算器的输出，因为是动态计算的需要用状态保存</span><br>            _output,<br>            style: <span class=\"hljs-keyword\">const</span> TextStyle(fontSize: <span class=\"hljs-number\">62</span>, color: Colors.white),<br>          ),<br>        ),<br>        <span class=\"hljs-comment\">// 计算器下半部分内容</span><br>        Container(<br>          <span class=\"hljs-comment\">// child 表示容器的子组件</span><br>          child: Column(<br>            children: [<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;AC&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;+/-&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;%&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;÷&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;7&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;8&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;9&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;x&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;4&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;5&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;6&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;-&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;1&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;2&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;3&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;+&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>              Row(<br>                mainAxisAlignment: MainAxisAlignment.spaceAround,<br>                children: [<br>                  buildButton(<span class=\"hljs-string\">&quot;0&quot;</span>, Colors.grey, isDouble: <span class=\"hljs-keyword\">true</span>),<br>                  buildButton(<span class=\"hljs-string\">&quot;.&quot;</span>, Colors.grey),<br>                  buildButton(<span class=\"hljs-string\">&quot;=&quot;</span>, Colors.orange),<br>                ],<br>              ),<br>            ],<br>          ),<br>        )<br>      ],<br>    );<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>主要看 onBtnClick 方法，这个方法中有一个 switch 语句，用于判断用户点击的是哪个按钮，然后根据不同的按钮做不同的处理。</p>\n<blockquote>\n<p>setState 方法用于更新 UI，只要执行了这个方法，就会重新调用 build 方法，重新构建 UI。</p>\n</blockquote>\n<h1 id=\"3.运行效果\">3.运行效果<a title=\"#3.运行效果\" href=\"#3.运行效果\"></a></h1>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107213428998-1113601721.gif\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<blockquote>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n<li>😁如果您觉得本文对您有所帮助，可以关注我的公众号 <code>BNTang</code>，我会不定期分享一些干货文章。</li>\n<li>🍻感谢您的支持，我会继续努力的！</li>\n</ul>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Flutter』项目实战(苹果计算器)处理计算逻辑","link":"2024/01/07/Flutter/31-『Flutter』项目实战(苹果计算器)处理计算逻辑"},"next":{"title":"『Flutter』项目实战(苹果计算器)搭建页面布局","link":"2024/01/07/Flutter/29-『Flutter』项目实战(苹果计算器)搭建页面布局"},"plink":"http://example.com/2024/01/07/Flutter/30-『Flutter』项目实战(苹果计算器)处理输入数据/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.处理输入数据","title":"2.处理输入数据","index":"2"},{"id":"3.运行效果","title":"3.运行效果","index":"3"},{"id":"end","title":"End","index":"4"}]}