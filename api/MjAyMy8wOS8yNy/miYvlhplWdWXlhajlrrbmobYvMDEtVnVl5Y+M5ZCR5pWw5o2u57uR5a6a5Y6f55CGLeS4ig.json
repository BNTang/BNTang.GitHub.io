{"title":"Vue双向数据绑定原理-上","date":"2023-09-26T16:08:10.000Z","date_formatted":{"ll":"Sep 27, 2023","L":"09/27/2023","MM-DD":"09-27"},"link":"2023/09/27/手写Vue全家桶/01-Vue双向数据绑定原理-上","tags":["手写Vue全家桶"],"updated":"2023-09-26T16:40:41.142Z","content":"<h1 id=\"vue响应式的原理(数据改变界面就会改变)是什么?\">Vue响应式的原理(数据改变界面就会改变)是什么?<a title=\"#vue响应式的原理(数据改变界面就会改变)是什么?\" href=\"#vue响应式的原理(数据改变界面就会改变)是什么?\"></a></h1>\n<p>时时监听数据变化, 一旦数据发生变化就更新界面, 这就是Vue响应式的原理。</p>\n<h1 id=\"vue是如何实现时时监听数据变化的\">Vue是如何实现时时监听数据变化的<a title=\"#vue是如何实现时时监听数据变化的\" href=\"#vue是如何实现时时监听数据变化的\"></a></h1>\n<p>通过原生JS的defineProperty方法, 通过get和set方法来监听数据的变化。</p>\n<h1 id=\"defineproperty方法的特点\">defineProperty方法的特点<a title=\"#defineproperty方法的特点\" href=\"#defineproperty方法的特点\"></a></h1>\n<p>可以直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回这个对象。</p>\n<h1 id=\"defineproperty用法\">defineProperty用法<a title=\"#defineproperty用法\" href=\"#defineproperty用法\"></a></h1>\n<p>?&gt; 可以直接在一个对象上定义一个新属性</p>\n<p>假设我有这么一个需求，给obj对象动态新增一个name属性, 并且name属性的取值必须是BNTang，通过 defineProperty 方法实现。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;&#125;;<br><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;BNTang&#x27;</span><br>    &#125;);<br><br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(obj);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p>defineProperty 是属于 Object 对象的方法，所以我们可以直接通过 Object.defineProperty 来调用。</p>\n<ul>\n<li>第一个参数是要定义属性的对象（obj: 需要操作的对象）</li>\n<li>第二个参数是要定义或修改的属性的名称（prop: 需要操作的属性）</li>\n<li>第三个参数是将被定义或修改的属性描述符（descriptor: 属性描述符）</li>\n</ul>\n<p>最终语法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, prop, descriptor)<br></code></pre></td></tr></table></figure>\n<p>在上面提出的需求中，我们需要动态新增一个 name 属性，所以第一个参数就是 obj 对象，第二个参数就是 name 属性，第三个参数就是 name 属性的描述符。<br>\n我在第三个参数中定义了一个 value 属性，这个 value 属性的值就是 BNTang，这样我们就实现了动态新增一个 name 属性，并且 name 属性的值是 BNTang。<br>\nvalue 属性描述符的作用可以通过value来告诉defineProperty方法新增的属性的取值是什么。</p>\n<p>!&gt; 默认情况下通过defineProperty新增的属性的取值是不能修改的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;&#125;;<br><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;BNTang&#x27;</span><br>    &#125;);<br>    obj.<span class=\"hljs-property\">name</span> = <span class=\"hljs-string\">&#x27;test&#x27;</span>;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(obj);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202309/2105804-20230927002908895-95535102.png\" alt=\"image-20230927002907591\" loading=\"lazy\" class=\"φbp\"></p>\n<p>如果想修改, 那么就必须显示的告诉defineProperty方法，这个属性是可修改的，通过writable属性描述符来实现。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;&#125;;<br><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;BNTang&#x27;</span>,<br>        <span class=\"hljs-attr\">writable</span>: <span class=\"hljs-literal\">true</span>,<br>    &#125;);<br>    obj.<span class=\"hljs-property\">name</span> = <span class=\"hljs-string\">&#x27;test&#x27;</span>;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(obj);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202309/2105804-20230927003021603-1352041352.png\" alt=\"image-20230927003021442\" loading=\"lazy\" class=\"φbp\"></p>\n<p>!&gt; 默认情况下通过defineProperty新增的属性是不能删除的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;&#125;;<br><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;BNTang&#x27;</span>,<br>        <span class=\"hljs-attr\">writable</span>: <span class=\"hljs-literal\">true</span>,<br>    &#125;);<br>    obj.<span class=\"hljs-property\">name</span> = <span class=\"hljs-string\">&#x27;test&#x27;</span>;<br>    <span class=\"hljs-keyword\">delete</span> obj.<span class=\"hljs-property\">name</span>;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(obj);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202309/2105804-20230927003304406-2037895019.png\" alt=\"image-20230927003304204\" loading=\"lazy\" class=\"φbp\"></p>\n<p>如果想删除, 那么就必须显示的告诉defineProperty方法，这个属性是可删除的，通过configurable属性描述符来实现。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;&#125;;<br><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;BNTang&#x27;</span>,<br>        <span class=\"hljs-attr\">writable</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-attr\">configurable</span>: <span class=\"hljs-literal\">true</span>,<br>    &#125;);<br>    obj.<span class=\"hljs-property\">name</span> = <span class=\"hljs-string\">&#x27;test&#x27;</span>;<br>    <span class=\"hljs-keyword\">delete</span> obj.<span class=\"hljs-property\">name</span>;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(obj);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202309/2105804-20230927003428064-2122808622.png\" alt=\"image-20230927003427738\" loading=\"lazy\" class=\"φbp\"></p>\n<p>!&gt; 默认情况下通过defineProperty新增的属性是不能遍历(迭代的)。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;&#125;;<br><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;BNTang&#x27;</span><br>    &#125;);<br><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> obj) &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(key, obj[key]);<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p>如果想迭代, 那么就必须显示的告诉defineProperty方法，这个属性是可迭代的，通过enumerable属性描述符来实现。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;&#125;;<br><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;BNTang&#x27;</span>,<br>        <span class=\"hljs-attr\">enumerable</span>: <span class=\"hljs-literal\">true</span><br>    &#125;);<br><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> obj) &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(key, obj[key]);<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202309/2105804-20230927003554204-1418303267.png\" alt=\"image-20230927003553936\" loading=\"lazy\" class=\"φbp\"></p>\n<p>到此为止，定义一个新属性的方法就介绍完了，接下来我们来看看如何修改一个对象的现有属性。</p>\n<p>其实非常的简单，只需要在我们定义对象的时候初始化一个属性，并且给这个属性一个初始值，然后在调用 defineProperty 方法的时候，将这个属性的值修改为我们想要的值就可以了。</p>\n<p>代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Example&#x27;</span>&#125;;<br><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;BNTang&#x27;</span><br>    &#125;);<br><br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(obj);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202309/2105804-20230927003723692-189001197.png\" alt=\"image-20230927003723530\" loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"Vue双向数据绑定原理-中","link":"2023/09/30/手写Vue全家桶/02-Vue双向数据绑定原理-中"},"next":{"title":"TienChin-课程管理-课程导出","link":"2023/09/24/项目/TienChin 健身系统/2023-6-11/课程管理/52-TienChin-课程管理-课程导出"},"plink":"http://example.com/2023/09/27/手写Vue全家桶/01-Vue双向数据绑定原理-上/","toc":[{"id":"vue响应式的原理(数据改变界面就会改变)是什么?","title":"Vue响应式的原理(数据改变界面就会改变)是什么?","index":"1"},{"id":"vue是如何实现时时监听数据变化的","title":"Vue是如何实现时时监听数据变化的","index":"2"},{"id":"defineproperty方法的特点","title":"defineProperty方法的特点","index":"3"},{"id":"defineproperty用法","title":"defineProperty用法","index":"4"}],"reading_time":"1045 words in 7 min"}