{"title":"Dart-入口函数","date":"2023-12-11T14:36:20.000Z","date_formatted":{"ll":"Dec 11, 2023","L":"12/11/2023","MM-DD":"12-11"},"link":"2023/12/11/Flutter/02-Dart-入口函数","tags":["Dart"],"updated":"2023-12-26T02:15:21.623Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211233718717-207759593.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<ul>\n<li>在 Dart 和 JavaScript 中，<code>main</code> 函数通常是一个程序的入口点</li>\n<li>这篇文章，我将展示两种语言中如何编写 <code>main</code> 函数</li>\n<li>通过语言对比的方式，让你更好的理解 Dart 语言（更有利于学习）</li>\n</ul>\n<h1 id=\"dart-运行环境\">Dart 运行环境<a title=\"#dart-运行环境\" href=\"#dart-运行环境\"></a></h1>\n<ul>\n<li>\n<p>为什么我这里单独起一个章节来讲 Dart 运行环境呢</p>\n</li>\n<li>\n<p>我相信大家在最开始学习编程的时候，都需要搭建一个运行环境，比如 C 语言需要安装 <code>Dev-C++</code>，Java 语言需要安装 <code>JDK</code> 等等</p>\n</li>\n<li>\n<p>其实，我们在学习一门新的语言时，不用把门槛设置的很高，比如说去搭建开发环境，这类似的事情，有的人可能环境搭不好就不学了，到此为止直接劝退了，这样不太好</p>\n</li>\n<li>\n<p>现在呢，有很多在线编译这类似的网页，这样能够快速的帮助我们进行学习，所以说我这里就找了一个在线编译 Dart 语言的网页，这样就不用搭建环境了，直接上手学习就可以了。</p>\n</li>\n<li>\n<p>DartPad 线上工具：<a href=\"https://dartpad.cn\" target=\"_blank\">https://dartpad.cn</a></p>\n</li>\n</ul>\n<h1 id=\"dart-中的-main-函数\">Dart 中的 main 函数<a title=\"#dart-中的-main-函数\" href=\"#dart-中的-main-函数\"></a></h1>\n<ul>\n<li>\n<p>在 Dart 中，main 函数是程序的起始点。它是必须的，每个 Dart 程序都从 main 函数开始执行。</p>\n</li>\n<li>\n<p>main 函数的语法如下：</p>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">void</span> main() &#123;<br>  <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;Hello, Dart!&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>这段代码定义了一个没有参数的 main 函数，并在其中使用 print 函数打印一条消息</p>\n</li>\n<li>\n<p>将代码复制到 DartPad 中，然后点击运行按钮，你将看到输出结果：</p>\n</li>\n</ul>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231212004850079-907922689.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"javascript-中的-main-函数\">JavaScript 中的 main 函数<a title=\"#javascript-中的-main-函数\" href=\"#javascript-中的-main-函数\"></a></h1>\n<ul>\n<li>与 Dart 不同，JavaScript 并没有强制要求 main 函数</li>\n<li>在 JavaScript 中，全局作用域本身就像一个 <code>main</code> 函数</li>\n<li>但是，可以按照类似的方式定义一个名为 main 的函数，并调用它</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">main</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Hello, JavaScript!&#x27;</span>);<br>&#125;<br><br><span class=\"hljs-comment\">// 调用 main 函数</span><br><span class=\"hljs-title function_\">main</span>();<br></code></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>这段代码创建了一个 main 函数，并在全局作用域中调用它。</p>\n</li>\n<li>\n<p>关于 JavaScript 的在线运行平台我也找了一个：<a href=\"https://www.json.cn/runcode/run_javascript\" target=\"_blank\">https://www.json.cn/runcode/run_javascript</a></p>\n</li>\n<li>\n<p>然后将代码复制到平台中，点击运行按钮，你将看到输出结果：</p>\n</li>\n</ul>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231212005344736-674418609.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"dart-与-javascript-main-函数的异同点\">Dart 与 JavaScript main 函数的异同点<a title=\"#dart-与-javascript-main-函数的异同点\" href=\"#dart-与-javascript-main-函数的异同点\"></a></h1>\n<p>Dart 和 JavaScript 的 main 函数有以下几个不同之处：</p>\n<h2 id=\"必要性\">必要性<a title=\"#必要性\" href=\"#必要性\"></a></h2>\n<ul>\n<li>在 Dart 中，<code>main</code> 函数是必须的，因为它定义了程序的入口点。</li>\n<li>在 JavaScript 中，<code>main</code> 函数不是必需的，你可以直接在全局作用域中编写代码。</li>\n</ul>\n<h2 id=\"调用方式\">调用方式<a title=\"#调用方式\" href=\"#调用方式\"></a></h2>\n<ul>\n<li>Dart 程序自动调用 <code>main</code> 函数。</li>\n<li>在 JavaScript 中，如果你定义了一个 <code>main</code> 函数，你需要手动调用它。</li>\n</ul>\n<h2 id=\"用途\">用途<a title=\"#用途\" href=\"#用途\"></a></h2>\n<ul>\n<li>在 Dart 和 JavaScript 中，<code>main</code> 函数（或全局作用域中的代码）都用于初始化程序、调用其他函数或执行程序逻辑。</li>\n</ul>\n<p>这些差异反映了 Dart 和 JavaScript 在程序结构和执行流程上的设计哲学不同。</p>\n<blockquote>\n<p>声明：其实 JavaScript 中的没有 main 函数的我这里是为了模仿 Dart 的结构特意这么设计来演示的</p>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"Dart-常量和变量","link":"2023/12/12/Flutter/03-Dart-常量和变量"},"next":{"title":"『Flutter』开篇","link":"2023/12/11/Flutter/01-Flutter-开篇"},"plink":"http://example.com/2023/12/11/Flutter/02-Dart-入口函数/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"dart-运行环境","title":"Dart 运行环境","index":"2"},{"id":"dart-中的-main-函数","title":"Dart 中的 main 函数","index":"3"},{"id":"javascript-中的-main-函数","title":"JavaScript 中的 main 函数","index":"4"},{"id":"dart-与-javascript-main-函数的异同点","title":"Dart 与 JavaScript main 函数的异同点","index":"5","children":[{"id":"必要性","title":"必要性","index":"5.1"},{"id":"调用方式","title":"调用方式","index":"5.2"},{"id":"用途","title":"用途","index":"5.3"}]}]}