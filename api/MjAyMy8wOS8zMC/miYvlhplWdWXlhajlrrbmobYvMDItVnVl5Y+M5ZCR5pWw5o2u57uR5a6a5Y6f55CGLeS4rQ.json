{"title":"Vue双向数据绑定原理-中","date":"2023-09-30T12:17:27.000Z","date_formatted":{"ll":"Sep 30, 2023","L":"09/30/2023","MM-DD":"09-30"},"link":"2023/09/30/手写Vue全家桶/02-Vue双向数据绑定原理-中","tags":["手写Vue全家桶"],"updated":"2023-09-30T12:29:11.699Z","content":"<h1 id=\"defineproperty方法\">defineProperty方法<a title=\"#defineproperty方法\" href=\"#defineproperty方法\"></a></h1>\n<p>defineProperty除了可以动态修改/新增对象的属性以外, 还可以在修改/新增的时候给该属性添加get/set方法, 从而实现数据劫持。</p>\n<h1 id=\"defineproperty-get/set方法特点\">defineProperty get/set方法特点<a title=\"#defineproperty-get/set方法特点\" href=\"#defineproperty-get/set方法特点\"></a></h1>\n<p>只要通过defineProperty给某个属性添加了get/set方法,那么以后只要获取这个属性的值就会自动调用get, 设置这个属性的值就会自动调用set。</p>\n<p>!&gt; 但是有一个注意点, 如果设置了get/set方法, 那么就不能通过value直接赋值, 也不能编写writable:true。</p>\n<h1 id=\"defineproperty-get-方法\">defineProperty get 方法<a title=\"#defineproperty-get-方法\" href=\"#defineproperty-get-方法\"></a></h1>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;&#125;;<br>    <span class=\"hljs-keyword\">let</span> oldValue = <span class=\"hljs-string\">&quot;Example&quot;</span><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-params\"></span>) &#123;<br>            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;get方法被执行了&#x27;</span>);<br>            <span class=\"hljs-keyword\">return</span> oldValue;<br>        &#125;<br>    &#125;);<br><br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(obj.<span class=\"hljs-property\">name</span>);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202309/2105804-20230930202459063-1585736658.png\" alt=\"image-20230930202458805\" loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"defineproperty-set-方法\">defineProperty set 方法<a title=\"#defineproperty-set-方法\" href=\"#defineproperty-set-方法\"></a></h1>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;script&gt;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;&#125;;<br>    <span class=\"hljs-keyword\">let</span> oldValue = <span class=\"hljs-string\">&quot;Example&quot;</span><br>    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, <span class=\"hljs-string\">&#x27;name&#x27;</span>, &#123;<br>        <span class=\"hljs-title function_\">set</span>(<span class=\"hljs-params\">newValue</span>) &#123;<br>            <span class=\"hljs-keyword\">if</span> (oldValue !== newValue) &#123;<br>                <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;set方法被执行了&quot;</span>);<br>                oldValue = newValue;<br>            &#125;<br>        &#125;<br>    &#125;);<br>    obj.<span class=\"hljs-property\">name</span> = <span class=\"hljs-string\">&#x27;BNTang&#x27;</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202309/2105804-20230930202623421-1843955015.png\" alt=\"image-20230930202623403\" loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h1>\n<p>通过上面的例子可以看出, 只要给某个属性添加了get/set方法, 那么以后只要获取这个属性的值就会自动调用get, 设置这个属性的值就会自动调用set。还有就是如果设置了get/set方法, 那么就不能通过value直接赋值, 也不能编写writable:true。</p>\n","prev":{"title":"Vue双向数据绑定原理-下","link":"2023/09/30/手写Vue全家桶/03-Vue双向数据绑定原理-下"},"next":{"title":"Vue双向数据绑定原理-上","link":"2023/09/27/手写Vue全家桶/01-Vue双向数据绑定原理-上"},"plink":"http://example.com/2023/09/30/手写Vue全家桶/02-Vue双向数据绑定原理-中/","toc":[{"id":"defineproperty方法","title":"defineProperty方法","index":"1"},{"id":"defineproperty-get/set方法特点","title":"defineProperty get&#x2F;set方法特点","index":"2"},{"id":"defineproperty-get-方法","title":"defineProperty get 方法","index":"3"},{"id":"defineproperty-set-方法","title":"defineProperty set 方法","index":"4"},{"id":"总结","title":"总结","index":"5"}],"reading_time":"357 words in 2 min"}