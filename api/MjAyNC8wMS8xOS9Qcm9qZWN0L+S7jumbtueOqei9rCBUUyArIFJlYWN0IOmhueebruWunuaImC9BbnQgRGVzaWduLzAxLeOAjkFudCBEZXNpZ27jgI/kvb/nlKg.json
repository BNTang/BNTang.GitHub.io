{"title":"『Ant Design』使用","date":"2024-01-18T23:17:15.000Z","date_formatted":{"ll":"Jan 19, 2024","L":"01/19/2024","MM-DD":"01-19"},"link":"2024/01/19/Project/从零玩转 TS + React 项目实战/Ant Design/01-『Ant Design』使用","tags":["Ant Design"],"updated":"2024-01-22T01:13:56.971Z","content":"<p>[toc]</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240119071606451-967084099.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"一、前言\">一、前言<a title=\"#一、前言\" href=\"#一、前言\"></a></h1>\n<blockquote>\n<ul>\n<li>🐤本篇文章是『从零玩转 TypeScript + React 项目实战』系列文章的第 1 篇，主要介绍『Ant Design』的使用</li>\n</ul>\n</blockquote>\n<ul>\n<li>通过前面文章我出过一个 React 系列全集，已经将 React 全部的基础知识介绍了一遍，那么了解完毕了 React 之后，接下来就开始编写一个项目实战文章系列了</li>\n<li>但是在编写之前，还有一些知识点给大家介绍一下，这些知识点是在项目实战中会用到的，所以在开始项目实战之前，我们先来了解一下这些知识点</li>\n</ul>\n<h1 id=\"二、ant-design\">二、Ant Design<a title=\"#二、ant-design\" href=\"#二、ant-design\"></a></h1>\n<p>本次文章标题是『Ant Design』所以首先要介绍的是一个叫做 Ant Design 的东西，那么这个『Ant Design』是什么呢？它是一个什么样的东西呢？它是一个 UI 框架，它是一个基于 React 的 UI 框架，它是一个非常优秀的 UI 框架。</p>\n<h2 id=\"1.-什么是-ant-design\">1. 什么是 Ant Design<a title=\"#1.-什么是-ant-design\" href=\"#1.-什么是-ant-design\"></a></h2>\n<p>antd 是 <code>蚂蚁金服</code> 开源的 React UI 组件库，主要用于研发 <code>企业级中后台</code> 产品。</p>\n<ul>\n<li>也就是说它帮我们封装了一些很常用的 UI</li>\n<li>在企业开发中它可以帮助我们提升开发效率</li>\n</ul>\n<blockquote>\n<p>😀那么简单的来理解这个『Ant Design』，它其实就是 React 版本的 Element UI</p>\n</blockquote>\n<h2 id=\"2.-ant-design-特点\">2. Ant Design 特点<a title=\"#2.-ant-design-特点\" href=\"#2.-ant-design-特点\"></a></h2>\n<ul>\n<li>🌈 提炼自企业级中后台产品的交互语言和视觉风格</li>\n<li>📦 开箱即用的高质量 React 组件</li>\n<li>🛡 使用 TypeScript 开发，提供完整的类型定义文件</li>\n<li>⚙ 全链路开发和设计工具体系（业务战略-用户场景-设计目标-交互体验-用户流程-预期效率等全方面考虑和分析）</li>\n<li>🌍 数十个 <code>国际化语言</code> 支持</li>\n<li>🎨 深入每个细节的主题定制能力</li>\n</ul>\n<blockquote>\n<ul>\n<li>特点其实不用看了，就是牛叉就可以了，特点最核心的就是使用 TypeScript 来开发的，提供了完整的 TypeScript 类型定义文件</li>\n<li>也就是说你可以在 TypeScript 项目当中，来直接使用 Ant Design</li>\n</ul>\n</blockquote>\n<h2 id=\"3.-ant-design-兼容性\">3. Ant Design 兼容性<a title=\"#3.-ant-design-兼容性\" href=\"#3.-ant-design-兼容性\"></a></h2>\n<ul>\n<li><code>antd@2.0</code> 之后不再支持 <code>IE8</code></li>\n<li><code>antd@4.0</code> 之后不再支持 <code>React 15</code> 和 <code>IE9/10</code></li>\n<li><code>antd@5.0</code> 之后不再支持 IE</li>\n</ul>\n<p>2024-1-20 当前最新版本是 <code>antd@5.13.2</code>：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120120833938-877558280.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>如果说你的需求需要兼容低版本的浏览器，这个 Ant Design 就不适合你了。</p>\n<p>但是至今为止，除了开发一些政府项目以外，在企业级开发当中，我们都是不需要去兼容 IE，不需要去兼容 IE 低版本的，一般情况下兼容到 IE11，或者兼容到 Edge 就可以了。</p>\n<blockquote>\n<p>总结下来就是：如果你不是做政府项目的话是不用去考虑的</p>\n</blockquote>\n<h1 id=\"三、ant-design-使用\">三、Ant Design 使用<a title=\"#三、ant-design-使用\" href=\"#三、ant-design-使用\"></a></h1>\n<p>市面上非常多的 UI 框架，总不能全部都去学习一遍，所以我们在使用的时候直接去打开官方文档按照对应的步骤来抄写即可，官方文档地址: <a href=\"https://ant.design/index-cn\" target=\"_blank\">https://ant.design/index-cn</a></p>\n<p>点击 <code>开始使用</code>，会默认跳转到组件页面，再点击 <code>研发</code>：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120122507920-1813461263.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>好，再开始使用之前，首先如果你还没有创建好项目你可以通过：<a href=\"https://www.cnblogs.com/BNTang/articles/16125436.html\" target=\"_blank\">https://www.cnblogs.com/BNTang/articles/16125436.html</a> 这篇文章来通过 React 脚手架来创建一个项目，然后再来使用 Ant Design。</p>\n<p>创建过程我这里也贴一下我正好也是在创建一个项目，我这里创建的项目名称是 <code>antd-demo</code>, 首先安装 <code>create-react-app</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install -g create-react-app<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120122646000-385374635.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>使用 create-react-app 创建项目：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">create-react-app antd-demo<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120122855624-289821259.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>等待等待，漫长的等待即可。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120123154591-1327593455.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>上图可以看到已经创建成功，可以通过 <code>npm start</code> 试着启动一下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120123308326-957182673.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>运行效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120123333357-1641223344.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>好的，到这里，React 项目咱们已经创建完毕了，接下来继续讲本文要介绍的内容，使用 Ant Design。</p>\n<p>安装 <code>Ant Design</code>, 学习过 Node 的同学大家通过都知道，首先要安装对应的依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install antd --save<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120123537513-1570739426.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>到这里项目创建好了，Ant Design 也安装好了，接下来就是使用 Ant Design 了，那么如何使用呢？我们可以通过官方文档来查看，点击 <code>组件</code>：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120124107764-77456339.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>组件非常的多这里我就挑几个常用的来介绍一下，比如说 <code>Button</code>，点击 <code>Button</code>：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120124155803-239544945.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>点击显示代码，可以看到代码如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120124226131-1166935348.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>将代码拷贝到 App 组件当中：</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tsx\"><span class=\"hljs-keyword\">import</span> &#123; <span class=\"hljs-title class_\">Button</span> &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;antd&#x27;</span>;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">App</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>      <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;&gt;</span></span><br><span class=\"language-xml\">          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;primary&quot;</span>&gt;</span>Primary Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>Default Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;dashed&quot;</span>&gt;</span>Dashed Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span>&gt;</span>Text Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;link&quot;</span>&gt;</span>Link Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">      <span class=\"hljs-tag\">&lt;/&gt;</span></span><br>  );<br>&#125;<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">App</span>;<br></code></pre></td></tr></table></figure>\n<p>如上代码采用 <code>&lt;&gt; &lt;/&gt;</code> 这种写法，这种写法叫做 <code>Fragment</code>，它是 React 16.2 之后才有的，它的作用就是可以在不增加额外节点的情况下，让 <code>render()</code> 方法中返回多个元素。</p>\n<p>运行效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120134419603-1981885911.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<blockquote>\n<ul>\n<li>通过上面的代码我们可以看到，我们在使用 Ant Design 的时候，其实就是在使用它提供的组件</li>\n</ul>\n</blockquote>\n<p>看了一个组件，那么我们再来看一个组件，比如说 <code>Switch</code>，点击 <code>Switch</code>：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120134553408-202923292.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>首先导入 <code>Switch</code> 组件：</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tsx\"><span class=\"hljs-keyword\">import</span> &#123;<span class=\"hljs-title class_\">Button</span>, <span class=\"hljs-title class_\">Switch</span>&#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;antd&#x27;</span>;<br></code></pre></td></tr></table></figure>\n<p>然后将 <code>Switch</code> 组件放到 <code>App</code> 组件当中：</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tsx\">&lt;<span class=\"hljs-title class_\">Switch</span> defaultChecked onChange=&#123;onChange&#125; /&gt;<br></code></pre></td></tr></table></figure>\n<p>使用到了 <code>onChange</code> 方法，所以我们需要在 <code>App</code> 组件当中定义一个 <code>onChange</code> 方法：</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tsx\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">onChange</span> = (<span class=\"hljs-params\">checked: <span class=\"hljs-built_in\">boolean</span></span>) =&gt; &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`switch to <span class=\"hljs-subst\">$&#123;checked&#125;</span>`</span>);<br>&#125;;<br></code></pre></td></tr></table></figure>\n<p>完整代码：</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tsx\"><span class=\"hljs-keyword\">import</span> &#123;<span class=\"hljs-title class_\">Button</span>, <span class=\"hljs-title class_\">Switch</span>&#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;antd&#x27;</span>;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">App</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">onChange</span> = (<span class=\"hljs-params\">checked: <span class=\"hljs-built_in\">boolean</span></span>) =&gt; &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`switch to <span class=\"hljs-subst\">$&#123;checked&#125;</span>`</span>);<br>    &#125;;<br>    <span class=\"hljs-keyword\">return</span> (<br>        <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;primary&quot;</span>&gt;</span>Primary Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>Default Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;dashed&quot;</span>&gt;</span>Dashed Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span>&gt;</span>Text Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;link&quot;</span>&gt;</span>Link Button<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Switch</span> <span class=\"hljs-attr\">defaultChecked</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">&#123;onChange&#125;/</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;/&gt;</span></span><br>    );<br>&#125;<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">App</span>;<br></code></pre></td></tr></table></figure>\n<p>运行效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240120134900684-110782449.gif\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"四、题外话\">四、题外话<a title=\"#四、题外话\" href=\"#四、题外话\"></a></h1>\n<p>在之前我记得在使用组件的时候是需要自己在导入样式的，现在貌似是不用了，所以这些注意点我就不介绍了，按照我本文来即可，有坑我就会介绍出来让大家避开。</p>\n<h1 id=\"五、总结\">五、总结<a title=\"#五、总结\" href=\"#五、总结\"></a></h1>\n<p>通过阅读本文你可以学到：</p>\n<ul>\n<li>了解 Ant Design 是什么</li>\n<li>了解 Ant Design 特点</li>\n<li>了解 Ant Design 兼容性</li>\n<li>了解 Ant Design 使用，通过 React 脚手架创建项目，在 React 项目中使用 Ant Design 组件</li>\n</ul>\n<blockquote>\n<ul>\n<li>🐤我非常乐意听取您的疑问和想法，欢迎在评论区留言</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快回复</li>\n<li>🎈如果这篇文章对您有所启发或帮助，欢迎赞赏、收藏或分享</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持</li>\n<li>👍感谢您的阅读和陪伴，希望我的文章能给您带来一些帮助</li>\n<li>😁如果您觉得本文有价值，欢迎关注我的公众号 <code>BNTang</code>，我会不定期分享更多有价值的内容</li>\n<li>🍻感谢您的支持，我会继续努力创作更多有价值的内容！</li>\n</ul>\n</blockquote>\n<p>这篇文章的内容就介绍到这里，期待我们下次的相遇。感谢您花时间阅读，如果有任何问题或想法，欢迎在评论区留言。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"经验/写作/资料收集/知识星球/『谈谈写作与写作的意义』","link":"2024/01/19/经验/写作/资料收集/知识星球/『谈谈写作与写作的意义』"},"next":{"title":"『云数据库』查询数据","link":"2024/01/14/Web/微信小程序/云开发/66-『云数据库』查询数据"},"plink":"http://example.com/2024/01/19/Project/从零玩转 TS + React 项目实战/Ant Design/01-『Ant Design』使用/","toc":[{"id":"一、前言","title":"一、前言","index":"1"},{"id":"二、ant-design","title":"二、Ant Design","index":"2","children":[{"id":"1.-什么是-ant-design","title":"1. 什么是 Ant Design","index":"2.1"},{"id":"2.-ant-design-特点","title":"2. Ant Design 特点","index":"2.2"},{"id":"3.-ant-design-兼容性","title":"3. Ant Design 兼容性","index":"2.3"}]},{"id":"三、ant-design-使用","title":"三、Ant Design 使用","index":"3"},{"id":"四、题外话","title":"四、题外话","index":"4"},{"id":"五、总结","title":"五、总结","index":"5"}]}