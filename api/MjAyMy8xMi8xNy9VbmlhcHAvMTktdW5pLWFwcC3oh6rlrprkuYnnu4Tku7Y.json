{"title":"uni-app-自定义组件","date":"2023-12-17T09:39:31.000Z","date_formatted":{"ll":"Dec 17, 2023","L":"12/17/2023","MM-DD":"12-17"},"link":"2023/12/17/Uniapp/19-uni-app-自定义组件","tags":["Uniapp"],"updated":"2023-12-17T10:01:14.621Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231203182130826-1561756591.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<ul>\n<li>经过上个章节的介绍，大家可以了解到 uni-app-网络请求的基本使用方法</li>\n<li>那本章节来给大家介绍一下 uni-app-自定义组件 的基本使用方法</li>\n<li>原本打算是直接写项目的，在写项目之前还有个内容需要我在码一篇文章，所以就先码这篇文章了</li>\n<li>本章节的内容比较简单，大家可以快速的过一遍，然后在项目中使用</li>\n<li>就是自定义组件，虽然 UniApp 是基于 Vue 的，但是在使用自定义组件的时候，还是有一些需要注意的地方，所以本章节就来给大家介绍一下</li>\n</ul>\n<h1 id=\"步入正题\">步入正题<a title=\"#步入正题\" href=\"#步入正题\"></a></h1>\n<ul>\n<li>首先我们打开官方文档：<a href=\"https://uniapp.dcloud.net.cn/component/#easycom\" target=\"_blank\">https://uniapp.dcloud.net.cn/component/#easycom</a></li>\n<li>在 UniApp 的组件当中，有一个 easycom 的组件规范，只要你遵循了这个规范，就可以进行自定义组件</li>\n</ul>\n<p>那么遵循了这个规范又有什么好处呢？</p>\n<ul>\n<li>传统 vue 组件，需要安装、引用、注册，三个步骤后才能使用组件。easycom 将其精简为一步</li>\n<li>只要组件安装在项目的 <code>components</code> 目录下或 <code>uni_modules</code> 目录下，并符合 <code>components/组件名称/组件名称.(vue|uvue)</code> 就可以不用引用、注册，直接在页面中使用</li>\n</ul>\n<blockquote>\n<p>目录结构注意：当同时存在 vue 和 uvue 时，uni-app 项目优先使用 vue 文件，而 uni-app x 项目优先使用 uvue 文件</p>\n</blockquote>\n<p>好了，知道了 UniApp 中有这么一个规范之后，我们来试一下，看是不是就可以如此简单的使用自定义组件了</p>\n<ul>\n<li>首先我们在项目的 <code>components</code> 目录下创建一个 <code>ITButton</code> 文件夹</li>\n<li>然后在 <code>ITButton</code> 文件夹下创建一个 <code>ITButton.vue</code> 文件</li>\n</ul>\n<p>ITButton.vue</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">&lt;template&gt;<br>\t&lt;view :class=&quot;[&#x27;it-btn&#x27;, type]&quot;&gt;<br>\t\t&lt;slot&gt;&lt;/slot&gt;<br>\t&lt;/view&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>\texport default &#123;<br>\t\tprops: &#123;<br>\t\t\ttype: &#123;<br>\t\t\t\ttype: String,<br>\t\t\t\tdefault: &#x27;default&#x27;<br>\t\t\t&#125;<br>\t\t&#125;,<br>\t\tmethods: &#123;<br><br>\t\t&#125;<br>\t&#125;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>\t.it-btn &#123;<br>\t\twidth: 400rpx;<br>\t\theight: 150rpx;<br>\t\tline-height: 150rpx;<br>\t\tfont-size: 40rpx;<br>\t\ttext-align: center;<br>\t&#125;<br><br>\t.default &#123;<br>\t\tbackground-color: gray;<br>\t&#125;<br><br>\t.warn &#123;<br>\t\tbackground-color: red;<br>\t&#125;<br><br>\t.primary &#123;<br>\t\tbackground-color: deepskyblue;<br>\t&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure>\n<p>到这，我们自定义组件创建好了，官方介绍，只要我们遵循了这个规范，就可以不用引用、注册，直接在页面中使用，那么我们就来试一下：</p>\n<ul>\n<li>在 index.vue 中使用</li>\n</ul>\n<p>index.vue</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vue\">&lt;template&gt;<br>\t&lt;view&gt;<br>\t\t&lt;ITButton type=&quot;primary&quot;&gt;我是自定义按钮哦&lt;/ITButton&gt;<br>\t&lt;/view&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>然后我们运行一下，看看效果</li>\n</ul>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231217175943273-1846206138.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>很完美哦，我们就不用引用、注册，就可以直接在页面中使用了</li>\n<li>可以根据 type 的不同，来设置不同的样式，这样就可以实现一个按钮，多种样式的效果了</li>\n<li>我这个组件已经实现了，好了本文就到这里，下一篇文章我们就来写项目了</li>\n</ul>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<ul>\n<li>如果你有任何问题或建议，欢迎在下方留言，我会尽快回复</li>\n<li>如果你觉得本文对你有帮助，欢迎点赞、收藏，你的支持是我写作的最大动力</li>\n</ul>\n<blockquote>\n<p><a href=\"https://cloud.tencent.com/developer/article/2366050?from_column=20421&amp;from=20421\" target=\"_blank\">我正在参与2023腾讯技术创作特训营第四期有奖征文，快来和我瓜分大奖！</a></p>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231129232539490-1458223711.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"uni-app-项目实战页面布局(苹果计算器)","link":"2023/12/17/Uniapp/20-uni-app-项目实战页面布局(苹果计算器)"},"next":{"title":"uni-app-网络请求","link":"2023/12/17/Uniapp/18-uni-app-网络请求"},"plink":"http://example.com/2023/12/17/Uniapp/19-uni-app-自定义组件/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"步入正题","title":"步入正题","index":"2"},{"id":"end","title":"End","index":"3"}],"reading_time":"850 words in 6 min"}