{"title":"微信小程序-WXS的作用和使用","date":"2023-04-09T04:51:59.000Z","date_formatted":{"ll":"Apr 9, 2023","L":"04/09/2023","MM-DD":"04-09"},"link":"2023/04/09/Web/微信小程序/wxs/23-微信小程序-WXS的作用和使用","tags":["微信小程序"],"updated":"2023-04-13T16:43:47.475Z","content":"<p>官方文档：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxs/\" target=\"_blank\">https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxs/</a></p>\n<h1 id=\"什么是-wxs\">什么是 WXS<a title=\"#什么是-wxs\" href=\"#什么是-wxs\"></a></h1>\n<p>WXS（WeiXin Script）是小程序的一套脚本语言，结合 <code>WXML</code>，可以构建出页面的结构。</p>\n<p>!&gt; 注意事项：</p>\n<ul>\n<li>WXS 不依赖于运行时的基础库版本，可以在所有版本的小程序中运行。</li>\n<li>WXS 与 JavaScript 是不同的语言，有自己的语法，并不和 JavaScript 一致。</li>\n<li><strong>WXS 的运行环境和其他 JavaScript 代码是隔离的，WXS 中不能调用其他 JavaScript 文件中定义的函数，也不能调用小程序提供的API</strong>。</li>\n<li>由于运行环境的差异，在 iOS 设备上小程序内的 WXS 会比 JavaScript 代码快 2 ~ 20 倍。在 android 设备上二者运行效率无差异。</li>\n</ul>\n<h1 id=\"为什么需要-wxs(wxs-用来干什么)\">为什么需要 WXS(WXS 用来干什么)<a title=\"#为什么需要-wxs(wxs-用来干什么)\" href=\"#为什么需要-wxs(wxs-用来干什么)\"></a></h1>\n<ul>\n<li>小程序的 Mustache 语法只能直接绑定数据，或者写一些简单的表达式</li>\n<li>而不能直接调用函数获取数据，这就导致了我们无法对一些数据进行复杂处理之后再绑定</li>\n</ul>\n<p>例如：我们做一个短视频小程序，我们拿到了服务器返回的视频时长，这个时长是xxxx秒，我们希望展示的时候显示 xx分钟:xx秒，那么我们就需要对这个时长进行复杂的处理之后再绑定，但 Mustache 语法默认又获取不到函数的返回值，此时就需要用到 WXS</p>\n<p>首先来看通过 Mustache 语法的方式来试试看，假设我们有一个 count，我们想让这个 count 大于等于1000后面以<code>k</code>的形式来进行展示，我们就有了如下的代码：</p>\n<p>index.wxml:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">view</span>&gt;</span><br>  &#123;&#123; count &gt;= 1000 ? count / 1000 + &quot;k&quot; : count &#125;&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">view</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>index.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-attr\">data</span>: &#123;<br>  <span class=\"hljs-attr\">count</span>: <span class=\"hljs-number\">1000</span><br>&#125;,<br></code></pre></td></tr></table></figure>\n<p>那么我们能否将这个复杂的代码通过一个方法进行封装起来然后直接调用方法得到是否会更好呢，所以我抱着这样的好奇思想去尝试了一下：</p>\n<p>index.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-attr\">formartData</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)&#123;<br>  <span class=\"hljs-keyword\">return</span> count &gt;= <span class=\"hljs-number\">1000</span> ? count / <span class=\"hljs-number\">1000</span> + <span class=\"hljs-string\">&#x27;k&#x27;</span> : count;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>index.wxml:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">view</span>&gt;</span><br>  &#123;&#123; formartData() &#125;&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">view</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>页面根本就没显示数据了很显然是不能这么做的：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202304/2105804-20230414001546717-910955620.png\" alt=\"image-20230414001546050\" loading=\"lazy\" class=\"φbp\"></p>\n<p>然后这个时候就需要利用到本章讲解的WXS来解决该问题了，至于什么是WXS，上方已经详细概述过了，废话不多说直接上代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">view</span>&gt;</span><br>  &#123;&#123; tool.formartData() &#125;&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">view</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wxs</span> <span class=\"hljs-attr\">module</span>=<span class=\"hljs-string\">&quot;tool&quot;</span>&gt;</span><br>function formartData () &#123;<br>  var count =  1000;<br>  console.log(count)<br>  return count &gt;= 1000 ? count / 1000 + &#x27;k&#x27; : count;<br>&#125;<br><br>module.exports.formartData = formartData;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wxs</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>!&gt; 不支持 ES6 语法</p>\n<p>当然我们的 count 变量，可以通过方法传参的方式进行通行，我们官方文档当中说我们的WXS是不能调用其他JS的函数等变量，我们就可以利用这种方式去访问JS文件中的内容到达可以处理JS文件当中的内容变了等信息：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">view</span>&gt;</span><br>  &#123;&#123; tool.formartData(count) &#125;&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">view</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">wxs</span> <span class=\"hljs-attr\">module</span>=<span class=\"hljs-string\">&quot;tool&quot;</span>&gt;</span><br>function formartData (count) &#123;<br>  return count &gt;= 1000 ? count / 1000 + &#x27;k&#x27; : count;<br>&#125;<br><br>module.exports.formartData = formartData;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">wxs</span>&gt;</span><br></code></pre></td></tr></table></figure>","prev":{"title":"微信小程序-WXS独立文件","link":"2023/04/14/Web/微信小程序/wxs/24-微信小程序-WXS独立文件"},"next":{"title":"微信小程序-WXML包装元素","link":"2023/04/09/Web/微信小程序/wxml/22-微信小程序-WXML包装元素"},"plink":"http://example.com/2023/04/09/Web/微信小程序/wxs/23-微信小程序-WXS的作用和使用/","toc":[{"id":"什么是-wxs","title":"什么是 WXS","index":"1"},{"id":"为什么需要-wxs(wxs-用来干什么)","title":"为什么需要 WXS(WXS 用来干什么)","index":"2"}],"reading_time":"778 words in 5 min"}