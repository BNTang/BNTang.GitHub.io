{"title":"MongoDB-复制集同步规则","date":"2022-09-24T09:37:20.000Z","date_formatted":{"ll":"Sep 24, 2022","L":"09/24/2022","MM-DD":"09-24"},"link":"2022/09/24/MongoDB/MongoDB-复制集/04-MongoDB-复制集同步规则","tags":["MongoDB"],"updated":"2022-09-24T09:41:57.827Z","content":"<h1 id=\"初始化同步\">初始化同步<a title=\"#初始化同步\" href=\"#初始化同步\"></a></h1>\n<ul>\n<li>将一个新的节点加入到复制集中时, 就需要进行初始化同步</li>\n<li>初始化同步会先清空自己所有的内容, 保证将来自己和主节点一模一样</li>\n<li>初始化同步会将主节点中现有所有的 ‘数据库’, ‘集合’, ‘文档’, ‘索引’ 全部拷贝过来</li>\n<li>但是在拷贝的过程中主节点仍然可能会做一些其它操作, 新增一些其它的数据等</li>\n</ul>\n<p>!&gt; 所以仅仅做一次大型的拷贝是不能保证副节点和主节点一模一样的</p>\n<h1 id=\"同步写库记录\">同步写库记录<a title=\"#同步写库记录\" href=\"#同步写库记录\"></a></h1>\n<ul>\n<li>\n<p>每个节点中都有一个 local 数据库, 这个数据库中有一个 oplog 的集合，这个集合就是专门用来保存数据库的操作记录的(写库记录)</p>\n</li>\n<li>\n<p>做完初始化同步之后, 副节点就会定期从主节点中拷贝写库记录, 将写库记录保存到自己的 local 数据库中, 然后执行写库记录中的操作, 从而使得自己的内容和主节点的内容保持高度一致</p>\n</li>\n</ul>\n<p>!&gt; 写库记录是可以被多次应用的, 但是多次应用和一次应用的效果是一样的, 也就是有效的防止了多次应用造成的主节点和副节点内容不一致问题</p>\n<p>!&gt; 应用写库记录的时候是通过多线程分批次应用的, 这样大大提高了引用的效率和性能</p>\n","prev":{"title":"MongoDB-复制集投票节点","link":"2022/10/15/MongoDB/MongoDB-复制集/05-MongoDB-复制集投票节点"},"next":{"title":"MongoDB-复制集选举规则","link":"2022/09/24/MongoDB/MongoDB-复制集/03-MongoDB-复制集选举规则"},"plink":"http://example.com/2022/09/24/MongoDB/MongoDB-复制集/04-MongoDB-复制集同步规则/","toc":[{"id":"初始化同步","title":"初始化同步","index":"1"},{"id":"同步写库记录","title":"同步写库记录","index":"2"}],"reading_time":"385 words in 3 min"}