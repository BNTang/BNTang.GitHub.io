{"title":"MySQL 中使用变量实现排名名次","date":"2023-07-16T11:45:26.000Z","date_formatted":{"ll":"Jul 16, 2023","L":"07/16/2023","MM-DD":"07-16"},"link":"2023/07/16/MySQL/SQL 高级查询/01-MySQL 中使用变量实现排名名次","tags":["SQL 高级查询"],"updated":"2023-07-16T16:21:49.753Z","content":"<h1 id=\"一.-数据准备:\">一. 数据准备:<a title=\"#一.-数据准备:\" href=\"#一.-数据准备:\"></a></h1>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> sql_rank (<br>\tid <span class=\"hljs-type\">INT</span> ( <span class=\"hljs-number\">11</span> ) UNSIGNED <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> AUTO_INCREMENT,<br>\tuser_id <span class=\"hljs-type\">INT</span> ( <span class=\"hljs-number\">11</span> ) UNSIGNED <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,<br>\tscore TINYINT ( <span class=\"hljs-number\">3</span> ) UNSIGNED <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,<br>\tadd_time <span class=\"hljs-type\">date</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,<br>\t<span class=\"hljs-keyword\">PRIMARY</span> KEY ( id ) <br>) ENGINE <span class=\"hljs-operator\">=</span> INNODB CHARSET <span class=\"hljs-operator\">=</span> latin1;<br><br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> sql_rank ( user_id, score, add_time )<br><span class=\"hljs-keyword\">VALUES</span><br>\t( <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-string\">&#x27;2016-05-01&#x27;</span> ),<br>\t( <span class=\"hljs-number\">101</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-string\">&#x27;2016-05-01&#x27;</span> ),<br>\t( <span class=\"hljs-number\">102</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-string\">&#x27;2016-05-01&#x27;</span> ),<br>\t( <span class=\"hljs-number\">103</span>, <span class=\"hljs-number\">60</span>, <span class=\"hljs-string\">&#x27;2016-05-01&#x27;</span> ),<br>\t( <span class=\"hljs-number\">104</span>, <span class=\"hljs-number\">80</span>, <span class=\"hljs-string\">&#x27;2016-05-01&#x27;</span> ),<br>\t( <span class=\"hljs-number\">105</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-string\">&#x27;2016-05-01&#x27;</span> ),<br>\t( <span class=\"hljs-number\">106</span>, <span class=\"hljs-number\">70</span>, <span class=\"hljs-string\">&#x27;2016-05-01&#x27;</span> ),<br>\t( <span class=\"hljs-number\">107</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-string\">&#x27;2016-05-01&#x27;</span> ),<br>\t(<br>\t\t<span class=\"hljs-number\">108</span>,<br>\t<span class=\"hljs-number\">60</span>,<br>\t<span class=\"hljs-string\">&#x27;2016-05-01&#x27;</span>);<br></code></pre></td></tr></table></figure>\n<h1 id=\"二.-不管数据相同与否，排名依次排序(1,2,3,4,5,6,7,...)\">二. 不管数据相同与否，排名依次排序(1,2,3,4,5,6,7,…)<a title=\"#二.-不管数据相同与否，排名依次排序(1,2,3,4,5,6,7,...)\" href=\"#二.-不管数据相同与否，排名依次排序(1,2,3,4,5,6,7,...)\"></a></h1>\n<p>思路: 将已经排序好的数据从第一条依次取出来，取一条就自增加一，实现从 1 到最后的一个排名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span><br>\tobj.user_id,<br>\tobj.score,<br>\t<span class=\"hljs-variable\">@rownum</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-variable\">@rownum</span> <span class=\"hljs-operator\">+</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">AS</span> rownum <br><span class=\"hljs-keyword\">FROM</span><br>\t( <span class=\"hljs-keyword\">SELECT</span> user_id, score <span class=\"hljs-keyword\">FROM</span> sql_rank <span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> score <span class=\"hljs-keyword\">DESC</span> ) obj,<br>\t( <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-variable\">@rownum</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span> ) r<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202307/2105804-20230716203301484-31991034.png\" alt=\"img\" loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"三.-只要数据有相同的排名就一样，排名依次排序(1,2,2,3,3,4,5,...)\">三. 只要数据有相同的排名就一样，排名依次排序(1,2,2,3,3,4,5,…)<a title=\"#三.-只要数据有相同的排名就一样，排名依次排序(1,2,2,3,3,4,5,...)\" href=\"#三.-只要数据有相同的排名就一样，排名依次排序(1,2,2,3,3,4,5,...)\"></a></h1>\n<p>思路: 当出现相同的数据时，排名保持不变，此时则需要再设置一个变量，用来记录上一条数据的值，跟当前数据的值进行对比，如果相同，则排名不变，不相同则排名自增加 1</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span><br>\tobj.user_id,<br>\tobj.score,<br><span class=\"hljs-keyword\">CASE</span><br>\t\t<span class=\"hljs-keyword\">WHEN</span> <span class=\"hljs-variable\">@prerow</span> <span class=\"hljs-operator\">=</span> obj.score <span class=\"hljs-keyword\">THEN</span><br>\t\t<span class=\"hljs-variable\">@currank</span> <br>\t\t<span class=\"hljs-keyword\">WHEN</span> <span class=\"hljs-variable\">@prerow</span> :<span class=\"hljs-operator\">=</span> obj.score <span class=\"hljs-keyword\">THEN</span><br>\t\t<span class=\"hljs-variable\">@currank</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-variable\">@currank</span> <span class=\"hljs-operator\">+</span> <span class=\"hljs-number\">1</span> <br>\t\t<span class=\"hljs-keyword\">WHEN</span> <span class=\"hljs-variable\">@prerow</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">THEN</span><br>\t\t<span class=\"hljs-variable\">@currow</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-variable\">@currank</span> <span class=\"hljs-operator\">+</span> <span class=\"hljs-number\">1</span> <br>\t<span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> currank <br><span class=\"hljs-keyword\">FROM</span><br>\t( <span class=\"hljs-keyword\">SELECT</span> user_id, score <span class=\"hljs-keyword\">FROM</span> sql_rank <span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> score <span class=\"hljs-keyword\">DESC</span> ) obj,<br>\t( <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-variable\">@currank</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable\">@prerow</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">NULL</span> ) r<br></code></pre></td></tr></table></figure>\n<p>让我们逐行解释：</p>\n<ol>\n<li><code>WHEN @prerow = obj.score THEN @currank</code>: 这行代码检查前一行的分数是否与当前行的分数相同。如果相同，则将当前的排名（@currank）赋值给当前行的排名。</li>\n<li><code>WHEN @prerow := obj.score THEN @currank := @currank + 1</code>: 这行代码首先将当前行的分数赋值给@prerow变量，然后将当前排名（@currank）加1。</li>\n<li><code>WHEN @prerow = 0 THEN @currow := @currank + 1</code>: 这行代码检查前一行的分数是否为0。如果是，则将当前排名（@currank）加1，并将结果赋值给@currow变量。</li>\n<li><code>END AS currank</code>: 这行代码将计算得到的排名赋值给一个名为currank的列。</li>\n</ol>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202307/2105804-20230716203534415-642616063.png\" alt=\"img\" loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"四.-当出现相同的数据时，排名保持不变，但是保持不变的排名依旧会占用一个位置，也就是类似于(1,2,2,2,5)这种排名\">四. 当出现相同的数据时，排名保持不变，但是保持不变的排名依旧会占用一个位置，也就是类似于(1,2,2,2,5)这种排名<a title=\"#四.-当出现相同的数据时，排名保持不变，但是保持不变的排名依旧会占用一个位置，也就是类似于(1,2,2,2,5)这种排名\" href=\"#四.-当出现相同的数据时，排名保持不变，但是保持不变的排名依旧会占用一个位置，也就是类似于(1,2,2,2,5)这种排名\"></a></h1>\n<p>思路: 当出现相同的数据时，排名保持不变，但是保持不变的排名依旧会占用一个位置，也就是类似于(1,2,2,2,5)这种排名就是属于中间的三个排名是一样的，但是第五个排名按照上面一种情况是(1,2,2,2,3)，现在则是排名相同也会占据排名的位置</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span><br>\tobj_new.user_id,<br>\tobj_new.score,<br>\tobj_new.rownum <br><span class=\"hljs-keyword\">FROM</span><br>\t(<br>\t<span class=\"hljs-keyword\">SELECT</span><br>\t\tobj.user_id,<br>\t\tobj.score,<br>\t\t<span class=\"hljs-variable\">@curRank</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-variable\">@curRank</span> <span class=\"hljs-operator\">+</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">AS</span> num_tmp,<br>\t\t<span class=\"hljs-variable\">@incrRank</span> :<span class=\"hljs-operator\">=</span><br>\t<span class=\"hljs-keyword\">CASE</span><br>\t\t\t<br>\t\t\t<span class=\"hljs-keyword\">WHEN</span> <span class=\"hljs-variable\">@prevRecord</span> <span class=\"hljs-operator\">=</span> obj.score <span class=\"hljs-keyword\">THEN</span><br>\t\t\t<span class=\"hljs-variable\">@incrRank</span> <br>\t\t\t<span class=\"hljs-keyword\">WHEN</span> <span class=\"hljs-variable\">@prevRecord</span> :<span class=\"hljs-operator\">=</span> obj.score <span class=\"hljs-keyword\">THEN</span><br>\t\t\t<span class=\"hljs-variable\">@curRank</span> <br>\t\t<span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> rownum <br>\t<span class=\"hljs-keyword\">FROM</span> <br>\t\t( <span class=\"hljs-keyword\">SELECT</span> user_id, score <span class=\"hljs-keyword\">FROM</span> `sql_rank` <span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> score <span class=\"hljs-keyword\">DESC</span> ) obj,<br>\t( <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-variable\">@curRank</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable\">@prevRecord</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">NULL</span>, <span class=\"hljs-variable\">@incrRank</span> :<span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span> ) r <br>\t) obj_new<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202307/2105804-20230716204443086-1438873318.png\" alt=\"img\" loading=\"lazy\" class=\"φbp\"></p>\n<p>这时候就新增加了一个变量，用于记录上一条数据的分数了，只要当前数据分数跟上一条数据的分数比较，相同分数的排名就不变，不相同分数的排名就加一，并且更新变量的分数值为该条数据的分数，依次比较。</p>\n","prev":{"title":"TienChin-系统功能介绍","link":"2023/07/17/TienChin/TienChin 业务功能/01-TienChin-系统功能介绍"},"next":{"title":"SQL 训练题目","link":"2023/07/15/MySQL/SQL 训练/02-SQL 训练题目"},"plink":"http://example.com/2023/07/16/MySQL/SQL 高级查询/01-MySQL 中使用变量实现排名名次/","toc":[{"id":"一.-数据准备:","title":"一. 数据准备:","index":"1"},{"id":"二.-不管数据相同与否，排名依次排序(1,2,3,4,5,6,7,...)","title":"二. 不管数据相同与否，排名依次排序(1,2,3,4,5,6,7,…)","index":"2"},{"id":"三.-只要数据有相同的排名就一样，排名依次排序(1,2,2,3,3,4,5,...)","title":"三. 只要数据有相同的排名就一样，排名依次排序(1,2,2,3,3,4,5,…)","index":"3"},{"id":"四.-当出现相同的数据时，排名保持不变，但是保持不变的排名依旧会占用一个位置，也就是类似于(1,2,2,2,5)这种排名","title":"四. 当出现相同的数据时，排名保持不变，但是保持不变的排名依旧会占用一个位置，也就是类似于(1,2,2,2,5)这种排名","index":"4"}],"reading_time":"884 words in 6 min"}