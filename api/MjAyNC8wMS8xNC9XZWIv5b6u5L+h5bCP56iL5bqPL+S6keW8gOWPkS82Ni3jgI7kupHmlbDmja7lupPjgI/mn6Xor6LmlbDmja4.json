{"title":"『云数据库』查询数据","date":"2024-01-14T03:39:56.000Z","date_formatted":{"ll":"Jan 14, 2024","L":"01/14/2024","MM-DD":"01-14"},"link":"2024/01/14/Web/微信小程序/云开发/66-『云数据库』查询数据","tags":["云开发","微信小程序"],"updated":"2024-03-04T02:19:39.727Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231203183456665-721734399.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>[toc]</p>\n<h1 id=\"一、前言\">一、前言<a title=\"#一、前言\" href=\"#一、前言\"></a></h1>\n<blockquote>\n<ul>\n<li>本篇文章是『云数据库』文章的第 4 篇，主要介绍『云数据库』查询数据</li>\n</ul>\n</blockquote>\n<p>在上一篇文章中，我们已经介绍了如何通过编写代码来更新云数据库中的数据，并指出了一些需要注意的事项。接下来，让我们进一步探讨如何有效地查询数据库中的信息。</p>\n<h1 id=\"二、查询数据\">二、查询数据<a title=\"#二、查询数据\" href=\"#二、查询数据\"></a></h1>\n<p>在微信云开发中，数据查询最终都通过调用 <code>.get</code> 方法来实现。具体来说，我们首先需要获取云数据库的集合对象引用，随后便可以使用该对象上的 <code>.get</code> 方法来执行查询操作。</p>\n<p>接下来，我将介绍几种查询方法。了解这些方法后，您就可以继续深入学习了。</p>\n<h2 id=\"2.1.查询全部数据\">2.1.查询全部数据<a title=\"#2.1.查询全部数据\" href=\"#2.1.查询全部数据\"></a></h2>\n<p>首先，若要查询数据库中指定集合的所有数据，我们可以直接使用 <code>.get</code> 方法进行全量查询，代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onQueryTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">get</span>();<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;,<br></code></pre></td></tr></table></figure>\n<p>查询结果显示，我们需要的数据已成功检索出来，且数据量相对较小。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114120212818-644321738.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>在查询全部数据时，有个重要的注意事项需要向大家说明，具体如下：</p>\n<ul>\n<li>1.在默认设置下，微信云开发的查询操作最多返回 20 条数据。</li>\n</ul>\n<p>若需一次性获取超过默认限制的数据量，我们需利用云函数来实现这一操作。当我在后续内容中详细介绍云函数时，将会再次讨论这个问题。</p>\n<h2 id=\"2.2.根据-id-查询数据\">2.2.根据 id 查询数据<a title=\"#2.2.根据-id-查询数据\" href=\"#2.2.根据-id-查询数据\"></a></h2>\n<p>若需要根据特定的 id 来检索数据，我们可以使用 <code>doc</code> 方法来完成这一查询任务：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onQueryTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">doc</span>(<span class=\"hljs-string\">&#x27;08bade59659d76d500164eca51e17bd0&#x27;</span>).<span class=\"hljs-title function_\">get</span>();<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;,<br></code></pre></td></tr></table></figure>\n<p>查询的结果见下图。从中我们可以清楚地看到被检索出的数据。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114120739105-636250613.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"2.3.根据条件查询数据\">2.3.根据条件查询数据<a title=\"#2.3.根据条件查询数据\" href=\"#2.3.根据条件查询数据\"></a></h2>\n<p>若希望基于特定条件进行数据查询，我们可以利用 <code>where</code> 方法来执行该操作：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onQueryTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">where</span>(&#123;<br>        <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">99</span><br>    &#125;).<span class=\"hljs-title function_\">get</span>();<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;,<br></code></pre></td></tr></table></figure>\n<p>查询结果如下所示：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114120851803-73590372.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<blockquote>\n<p>注意事项：类似于全量查询，条件查询默认也只会返回最多 20 条数据。若需一次性检索更多数据，将需要通过云函数来完成。</p>\n</blockquote>\n<h2 id=\"2.4.分页查询数据\">2.4.分页查询数据<a title=\"#2.4.分页查询数据\" href=\"#2.4.分页查询数据\"></a></h2>\n<p>如需进行分页数据查询，我们可以利用 <code>skip</code> 和 <code>limit</code> 方法来实现这一操作：</p>\n<ul>\n<li><code>skip</code>：指定跳过的数据条数。</li>\n<li><code>limit</code>：设置返回数据的条数上限。</li>\n</ul>\n<p>了解了这些基本知识后，我们就可以开始编写代码了。具体代码示例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onQueryTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">skip</span>(<span class=\"hljs-number\">0</span>).<span class=\"hljs-title function_\">limit</span>(<span class=\"hljs-number\">5</span>).<span class=\"hljs-title function_\">get</span>();<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;,<br></code></pre></td></tr></table></figure>\n<p>上述分页查询代码的功能是：跳过前 0 条数据，并返回接下来的 5 条数据，即获取第一页的数据。</p>\n<p>要检索第二页的数据，则需要设置跳过首个 5 条数据，再返回紧接着的 5 条数据。</p>\n<h2 id=\"2.5.返回指定字段的数据\">2.5.返回指定字段的数据<a title=\"#2.5.返回指定字段的数据\" href=\"#2.5.返回指定字段的数据\"></a></h2>\n<p>所述背景是：在进行数据查询时，我们可能不需要获取所有字段的数据，而只需检索特定的字段。</p>\n<p>为了实现这一需求，我们可以采用 <code>field</code> 方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onQueryTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">field</span>(&#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-literal\">true</span><br>    &#125;).<span class=\"hljs-title function_\">get</span>();<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>查询结果如下所示：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114121429189-760557332.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<blockquote>\n<p>需要注意的是，<code>id</code> 字段默认无法被排除在查询结果之外。</p>\n</blockquote>\n<h2 id=\"2.6.排序查询数据\">2.6.排序查询数据<a title=\"#2.6.排序查询数据\" href=\"#2.6.排序查询数据\"></a></h2>\n<p>如需对检索到的数据进行排序，我们可以使用 <code>orderBy</code> 方法来实现这一功能：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onQueryTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">orderBy</span>(<span class=\"hljs-string\">&#x27;age&#x27;</span>, <span class=\"hljs-string\">&#x27;desc&#x27;</span>).<span class=\"hljs-title function_\">get</span>();<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;,<br></code></pre></td></tr></table></figure>\n<p>如上所示，代码通过设置 <code>age</code> 字段进行降序排列来对数据进行排序。具体的查询结果在此不予展示，您可以通过实际操作来查看效果。</p>\n<h1 id=\"三、总结\">三、总结<a title=\"#三、总结\" href=\"#三、总结\"></a></h1>\n<p>通过本文的学习，您将能够掌握以下核心知识点：</p>\n<ul>\n<li>1.查询全部数据</li>\n<li>2.根据 id 查询数据</li>\n<li>3.根据条件查询数据</li>\n<li>4.分页查询数据</li>\n<li>5.返回指定字段的数据</li>\n<li>6.排序查询数据</li>\n</ul>\n<blockquote>\n<p>最后，我要感谢您阅读本文。如果您觉得文章有用，请不吝点赞、收藏或者转发。您的支持是我不断创作与分享的最大动力。让我们携手在学习的旅途上相互促进，共同享受知识带来的快乐。</p>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Ant Design』使用","link":"2024/01/19/Project/从零玩转 TS + React 项目实战/Ant Design/01-『Ant Design』使用"},"next":{"title":"『prompt』开篇","link":"2024/01/09/AI/Prompt/01-『prompt』开篇"},"plink":"http://example.com/2024/01/14/Web/微信小程序/云开发/66-『云数据库』查询数据/","toc":[{"id":"一、前言","title":"一、前言","index":"1"},{"id":"二、查询数据","title":"二、查询数据","index":"2","children":[{"id":"2.1.查询全部数据","title":"2.1.查询全部数据","index":"2.1"},{"id":"2.2.根据-id-查询数据","title":"2.2.根据 id 查询数据","index":"2.2"},{"id":"2.3.根据条件查询数据","title":"2.3.根据条件查询数据","index":"2.3"},{"id":"2.4.分页查询数据","title":"2.4.分页查询数据","index":"2.4"},{"id":"2.5.返回指定字段的数据","title":"2.5.返回指定字段的数据","index":"2.5"},{"id":"2.6.排序查询数据","title":"2.6.排序查询数据","index":"2.6"}]},{"id":"三、总结","title":"三、总结","index":"3"}]}