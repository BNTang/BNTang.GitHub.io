{"title":"MongoDB-复制集开篇","date":"2022-09-12T02:38:29.000Z","date_formatted":{"ll":"Sep 12, 2022","L":"09/12/2022","MM-DD":"09-12"},"link":"2022/09/12/MongoDB/MongoDB-复制集/01-MongoDB-复制集开篇","tags":["MongoDB"],"updated":"2022-09-12T02:38:43.822Z","content":"<h1 id=\"mongodb-高可用性\">MongoDB 高可用性<a title=\"#mongodb-高可用性\" href=\"#mongodb-高可用性\"></a></h1>\n<ul>\n<li>如果所有用户都从同一台MongoDB服务器上读写数据, 那么如果这台MongoDB服务器宕机了, 用户就不能进行读写了</li>\n<li>如果我们有多台MongoDB服务器, 并且每台服务器中存储的内容都相同，那么即使有一台服务器宕机了, 用户依然可以进行读写数据, 因为用户还可以继续使用其它保存了相同内容的服务器</li>\n</ul>\n<p>?&gt; 以上这种特点, 我们就称之为’高可用性’</p>\n<h1 id=\"mongodb-数据安全性\">MongoDB 数据安全性<a title=\"#mongodb-数据安全性\" href=\"#mongodb-数据安全性\"></a></h1>\n<ul>\n<li>如果所有数据都保存在同一台MongoDB服务器上，那么如果这台MongoDB服务器坏了, 那么很有可能会导致数据丢失</li>\n<li>如果我们有多台MongoDB服务器, 并且每台服务器中存储的内容都相同, 那么即使有一台服务器坏了, 那么依然不会导致数据丢失, 因为我们还有其它保存了相同内容的服务器</li>\n</ul>\n<p>?&gt; 以上这种特点, 我们就称之为’数据的安全性’</p>\n<h1 id=\"mongodb-数据分流\">MongoDB 数据分流<a title=\"#mongodb-数据分流\" href=\"#mongodb-数据分流\"></a></h1>\n<ul>\n<li>如果所有用户都从同一台MongoDB服务器上读写数据, 那么由于服务器的性能限制和网络传输速度的限制, 会导致同一时刻用户量较多时, 服务器负荷增大, 数据处理速度变慢的问题, 会导致由于用户距离服务器较远, 网络传输时间变长, 响应速度变慢的问题</li>\n<li>如果我们有多台MongoDB服务器, 并且每台服务器中存储的内容都相同, 并且安放到了不同的地区, 那么我们可以采用就近原则返回数据, 提升网络的传输速度，那么我们可以采用请求分流, 降低每台服务器负荷, 提升数据处理速度</li>\n</ul>\n<p>?&gt; 以上这种特点, 我们就称之为’数据分流’</p>\n<h1 id=\"mongodb-复制集\">MongoDB 复制集<a title=\"#mongodb-复制集\" href=\"#mongodb-复制集\"></a></h1>\n<ul>\n<li>在MongoDB中我们可以通过复制集来实现如上的功能</li>\n<li>复制集就是使用多台保存了相同内容的MongoDB服务器来组成一个数据库集群, 这个数据库集群中的每一台MongoDB服务我们称之为一个节点</li>\n</ul>\n","prev":{"title":"Bean生命周期-环境搭建","link":"2022/09/18/Java/Spring中Bean的生命周期与扩展点/01-Bean生命周期-环境搭建"},"next":{"title":"Mongoose-更新和删除","link":"2022/09/12/MongoDB/mongoose/03-Mongoose-更新和删除"},"plink":"http://example.com/2022/09/12/MongoDB/MongoDB-复制集/01-MongoDB-复制集开篇/","toc":[{"id":"mongodb-高可用性","title":"MongoDB 高可用性","index":"1"},{"id":"mongodb-数据安全性","title":"MongoDB 数据安全性","index":"2"},{"id":"mongodb-数据分流","title":"MongoDB 数据分流","index":"3"},{"id":"mongodb-复制集","title":"MongoDB 复制集","index":"4"}],"reading_time":"573 words in 4 min"}