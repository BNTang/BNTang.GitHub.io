{"title":"『云函数』基本使用","date":"2023-12-03T09:46:02.000Z","date_formatted":{"ll":"Dec 3, 2023","L":"12/03/2023","MM-DD":"12-03"},"link":"2023/12/03/Web/微信小程序/云开发/71-『云函数』基本使用","tags":["云开发","微信小程序"],"updated":"2024-01-19T03:14:11.100Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231203183748589-341862090.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>经前面几篇文章的介绍，已经给大家介绍了云开发中的云数据库与云存储，那么了解完了云数据库云存储之后，接下来我介绍一下云开发中的另外一个重要的功能，云函数。</p>\n<h1 id=\"2.什么是云函数\">2.什么是云函数<a title=\"#2.什么是云函数\" href=\"#2.什么是云函数\"></a></h1>\n<p>要介绍清楚这个云函数之前，首先得要先来看看过去我们用服务器来存储数据与文件的时候，我们是怎么做的，我们来看一下下面这张图。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114220948612-479445089.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>可以看到根据图中信息，可以知道，首先我们有着自己的一台服务器，然后在自己的服务器上，安装了对应的数据库这类似的东西，数据库里面存储的就是结构化数据。</p>\n<p>那么除此之外这个服务器上，是不是还可以存储一些文件数据，所以在图中可以看到这两块，一块是数据库，一块是文件数据，这两块都是存储在服务器上的，这个是 <code>过去</code> 我们使用自己服务器的时候。</p>\n<p>好，直到如今，我是不是介绍了云开发，在云开发当中，他是不是给我们提供了云数据库与云存储这两个功能，随着而来我们的演示图也就变成了下面这样。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114221525928-927784914.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>这样一来是不是将我们自己服务器上面的功能给替换掉了，替换掉了之后还没完，无论是云数据库还是云存储，都是用来存储数据的，处理不了数据，就比如说我存储了一些结构化的数据，我现在需要对这些结构化的数据进行加工处理，这个时候我们该怎么办？</p>\n<p>这个时候我们的客户端是不是得要发送一个请求到服务器上（云），把我们需要处理的数据拿回来，拿回来之后就是在本地对数据进行加工处理，那本地加工，本地是什么呢？本地就是我们的一个手机，这个时候问题又来了，手机的性能有电脑的性能好吗？是不是肯定没有，那么没有的话，过去我们想对这些数据进行处理加工，我们是怎么做的呢？</p>\n<p>是不是在服务器上，我们可以写一些代码，然后在服务器上运行，然后我们的客户端发送请求到服务器上，服务器就会对我们的数据进行加工处理，然后将加工处理之后的数据返回给我们的客户端，这样一来，我们的客户端就不需要做太多的事情了，我们的客户端只需要发送请求，然后接收数据就可以了。</p>\n<p>现在的这个演示图就可以演变成下面这样：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114222610006-966284695.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>这样演变一来，我们的数据就是在服务器上处理也就是电脑上面处理，这个时候我们的性能是不是就好了，但是现在我们如果用云开发之后，这个云开发提供的云数据库和云存储是不是不能处理数据。</p>\n<p>我们是不是只能在本地处理，也就是在手机上处理，这个时候性能是不是就差了，所以说为了解决这个问题，给我们搞了一个云函数出来，那么云函数是什么呢？</p>\n<p>云函数是不是就是给云增加了编码的能力，增加了处理数据的能力，这个就是云函数，这个就是云函数的作用。最终的演示图就变成了下面这样：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114223332243-1885455329.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>这个时候云开发中的能力与我们自己搭建的服务器的能力就一样了。</p>\n<h1 id=\"3.云函数的创建\">3.云函数的创建<a title=\"#3.云函数的创建\" href=\"#3.云函数的创建\"></a></h1>\n<p>那么怎么创建云函数呢，也非常的简单，前面我说过，如果是云开发的小程序，项目当中有两个目录，一个是 <code>miniprogram</code> 目录这个是编写我们小程序代码的，还有一个是 <code>cloudfunctions</code> 目录，这个目录是用来存放我们的云函数的，所以在这个目录下编写对应的云函数即可。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114223658473-1254394619.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>那么我们现在就来创建一个云函数，我们在 <code>cloudfunctions</code> 目录下创建一个目录，这个目录就是我们的云函数的名字，鼠标右键点击 <code>cloudfunctions</code> 目录，然后选择 <code>新建 Node.js 云函数</code>，然后输入我们的云函数的名字：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114224020468-1639500110.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<blockquote>\n<p>这里目前只有 <code>Node.js</code> 云函数，后续会有其他的语言的云函数，这个就不知道了。如果有你就可以选择其他的语言，按照自己的喜好来选择。</p>\n</blockquote>\n<p>这里我是做测试我就起了一个 test：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114224117613-1813592811.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>通过观察这个云函数中有三个文件：</p>\n<ul>\n<li>\n<ol>\n<li><code>index.js</code>：这个是我们的云函数的入口文件，我们的云函数的代码就写在这个文件当中。</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li><code>package.json</code>：依赖文件（NodeJs，可以依赖一些其他的库）</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li><code>config.json</code>：配置文件</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"3.1.云函数的入口文件\">3.1.云函数的入口文件<a title=\"#3.1.云函数的入口文件\" href=\"#3.1.云函数的入口文件\"></a></h2>\n<p>我们现在来看一下这个 <code>index.js</code> 文件，这个文件就是我们的云函数的入口文件，我们的云函数的代码就写在这个文件当中。</p>\n<p>官方示例代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// 云函数入口文件</span><br><span class=\"hljs-keyword\">const</span> cloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;wx-server-sdk&#x27;</span>)<br><br><span class=\"hljs-comment\">// 使用当前云环境</span><br>cloud.<span class=\"hljs-title function_\">init</span>(&#123; <span class=\"hljs-attr\">env</span>: cloud.<span class=\"hljs-property\">DYNAMIC_CURRENT_ENV</span> &#125;)<br><br><span class=\"hljs-comment\">// 云函数入口函数</span><br><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>  <span class=\"hljs-keyword\">const</span> wxContext = cloud.<span class=\"hljs-title function_\">getWXContext</span>()<br><br>  <span class=\"hljs-keyword\">return</span> &#123;<br>    event,<br>    <span class=\"hljs-attr\">openid</span>: wxContext.<span class=\"hljs-property\">OPENID</span>,<br>    <span class=\"hljs-attr\">appid</span>: wxContext.<span class=\"hljs-property\">APPID</span>,<br>    <span class=\"hljs-attr\">unionid</span>: wxContext.<span class=\"hljs-property\">UNIONID</span>,<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个代码中首先引入了 <code>wx-server-sdk</code> 这个库，这个库是不是就是用来操作云开发的，然后是指定当前使用的云环境，然后在这个文件中导出了一个 <code>main</code> 函数，这个函数就是我们的云函数的入口函数，这个函数中有两个参数，一个是 <code>event</code>，一个是 <code>context</code>，这两个参数是什么呢？</p>\n<ul>\n<li><code>event</code>：这个参数是我们的客户端调用云函数的时候传递的参数，这个参数是一个对象，这个对象中包含了客户端传递过来的参数。</li>\n<li><code>context</code>：这个参数是一个对象，这个对象中包含了一些上下文的信息，比如说当前用户的 <code>openid</code>，当前用户的 <code>appid</code>，当前用户的 <code>unionid</code>，这些信息都是在这个 <code>context</code> 对象中。</li>\n</ul>\n<p>这两个参数后续在介绍，如上代码这是官方的示例，我们先给删掉，自己来编写一个：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// 云函数入口文件</span><br><span class=\"hljs-keyword\">const</span> cloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;wx-server-sdk&#x27;</span>)<br><br><span class=\"hljs-comment\">// 使用当前云环境</span><br>cloud.<span class=\"hljs-title function_\">init</span>(&#123; <span class=\"hljs-attr\">env</span>: cloud.<span class=\"hljs-property\">DYNAMIC_CURRENT_ENV</span> &#125;)<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">example</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;我是 example 函数&quot;</span>;<br>&#125;<br><br><span class=\"hljs-comment\">// 云函数入口函数</span><br><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>  <span class=\"hljs-keyword\">const</span> res= <span class=\"hljs-title function_\">example</span>();<br>  <span class=\"hljs-keyword\">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>我定义了一个 example 的函数，然后在入口函数中进行调用了，假设我们调用这个函数，在函数中处理数据，那么调用者拿到的结果就是已经处理好的，这样是不是就没问题了，这个就是云函数的基本结构。</p>\n<p>所以说你要做的事情就是，找到云函数的目录，在云函数目录下创建自己的云函数，在创建的云函数的 index.js 中来编写自己的业务逻辑代码即可，编写好之后怎么办，编写好之后就可以在 main 中进行调用你编写好的业务逻辑，拿到结果返回给调用者。</p>\n<h2 id=\"3.2.上传云函数\">3.2.上传云函数<a title=\"#3.2.上传云函数\" href=\"#3.2.上传云函数\"></a></h2>\n<p>通过如上的这么一顿操作，我们的云函数就创建好了，那么我们怎么调用这个云函数呢？也就是想在小程序当中进行使用，可以直接使用吗？我的答案是不可以，为什么不可以呢？</p>\n<p>云函数云函数是不是是在云端的，那么我们编写的这个函数是不是仅仅在本地，写好云函数之后我们需要将云函数上传到云上，然后才可以在小程序当中去云里面调用这个函数。</p>\n<blockquote>\n<p>好，这里来简单的做一个云函数使用步骤梳理：</p>\n</blockquote>\n<ol>\n<li>创建一个云函数</li>\n<li>编写云函数的业务逻辑代码</li>\n<li>上传云函数到云端</li>\n<li>在小程序中调用云函数</li>\n</ol>\n<p>现在我已经完成到了，第二步，接下来就是 <code>上传云函数到云端</code>。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114230010060-755254459.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>找到创建的云函数文件夹目录，鼠标右键，选择如上图所示，即可完成上传，因为我们是 NodeJS 代码，所以云当中也需要进行安装。</p>\n<p>上传结果如下图，这个不代表已经彻底完成了：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114230117253-2095117273.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>弹出了如下图这个弹框才算是彻底完成：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114230135366-1787161291.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"4.云函数的使用\">4.云函数的使用<a title=\"#4.云函数的使用\" href=\"#4.云函数的使用\"></a></h1>\n<p>首先我们找到项目结构的编写小程序代码的目录，找到 <code>miniprogram/pages/cloud-fn/index.wxml</code>, 添加一个调用云函数的按钮：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;primary&quot;</span> <span class=\"hljs-attr\">bindtap</span>=<span class=\"hljs-string\">&quot;onTestTap&quot;</span>&gt;</span>调用云函数<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>然后在 <code>index.js</code> 中编写对应的事件处理函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title class_\">Page</span>(&#123;<br>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onTestTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> wx.<span class=\"hljs-property\">cloud</span>.<span class=\"hljs-title function_\">callFunction</span>(&#123;<br>      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;test&#x27;</span><br>    &#125;);<br><br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res)<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure>\n<p>在这个函数中，我们调用了 <code>wx.cloud.callFunction</code> 这个函数，这个函数是不是就是用来调用云函数的，这个函数中有一个参数，这个参数是一个对象，这个对象中有一个 <code>name</code> 属性，这个属性的值就是我们的云函数的名字，这个名字是不是就是我们在创建云函数的时候起的名字，打开云控制台，我们可以看到我们的云函数的名字：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114230814656-162835030.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>运行小程序，点击按钮，可以看到控制台输出了如下的结果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114231315274-1222417575.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>ok，完毕，如果你更改了云函数的内容，是需要重新上传的，重新上传之后，再次调用云函数，就可以看到最新的结果了。</p>\n<p>本篇文章内容介绍到这就结束了，我们下期再见，感谢大家的观看，谢谢大家。</p>\n<blockquote>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n<li>😁如果您觉得本文对您有所帮助，可以关注我的公众号 <code>BNTang</code>，我会不定期分享一些干货文章。</li>\n<li>🍻感谢您的支持，我会继续努力的！</li>\n</ul>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『云存储』删除文件","link":"2023/12/03/Web/微信小程序/云开发/69-『云存储』删除文件"},"next":{"title":"『云存储』获取临时路径","link":"2023/12/03/Web/微信小程序/云开发/70-『云存储』获取临时路径"},"plink":"http://example.com/2023/12/03/Web/微信小程序/云开发/71-『云函数』基本使用/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.什么是云函数","title":"2.什么是云函数","index":"2"},{"id":"3.云函数的创建","title":"3.云函数的创建","index":"3","children":[{"id":"3.1.云函数的入口文件","title":"3.1.云函数的入口文件","index":"3.1"},{"id":"3.2.上传云函数","title":"3.2.上传云函数","index":"3.2"}]},{"id":"4.云函数的使用","title":"4.云函数的使用","index":"4"}]}