{"title":"『Flutter』开篇","date":"2023-12-11T13:51:48.000Z","date_formatted":{"ll":"Dec 11, 2023","L":"12/11/2023","MM-DD":"12-11"},"link":"2023/12/11/Flutter/01-Flutter-开篇","tags":["Flutter"],"updated":"2024-01-09T05:51:10.856Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215036947-359505973.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"什么是-flutter\">什么是 Flutter<a title=\"#什么是-flutter\" href=\"#什么是-flutter\"></a></h1>\n<ul>\n<li>Flutter 是由 Google 开发的开源框架</li>\n<li>Flutter 用于构建跨平台的移动应用程序</li>\n<li>Flutter 它允许开发者使用同一套代码来同时为 IOS 和 Android 平台开发应用程序</li>\n<li>Flutter 使用 <code>Dart</code> 语言开发，特点是拥有高性能的渲染引擎和丰富的组件库</li>\n</ul>\n<h1 id=\"flutter-特性\">Flutter 特性<a title=\"#flutter-特性\" href=\"#flutter-特性\"></a></h1>\n<ol>\n<li><strong>跨平台能力</strong>：Flutter 允许开发者使用同一代码库开发 Android、iOS、Web 和桌面（例如 Windows、MacOS 和 Linux）应用程序</li>\n<li><strong>Dart 语言</strong>：Flutter 使用 Dart 语言进行编程。Dart 是 Google 开发的一种现代、面向对象的编程语言，它专为 Flutter 优化，易于学习且性能出色。</li>\n<li><strong>热重载</strong>：Flutter 的热重载功能使开发者能够在应用运行时即时查看更改效果，这极大提高了开发效率。</li>\n<li><strong>丰富的组件和库</strong>：Flutter 提供了大量预制组件（称为 Widgets），可以帮助快速构建美观、响应迅速的用户界面。此外，还有活跃的社区和众多库支持各种功能和集成。</li>\n<li><strong>接近原生的性能</strong>：Flutter 应用的性能接近原生应用，因为其渲染引擎直接编译为原生的 ARM 代码，无需通过 WebView 或操作系统的原生组件。</li>\n<li><strong>美观的设计</strong>：Flutter 支持 Material Design（Google 的设计语言）和 Cupertino（Apple 的 iOS 风格），允许创建高度定制且视觉上吸引人的界面。</li>\n</ol>\n<p>由于其高效性、灵活性和跨平台的能力，Flutter 已成为移动和网络应用开发领域中非常受欢迎的框架之一。</p>\n<h1 id=\"flutter-与-uniapp-的区别\">Flutter 与 UniApp 的区别<a title=\"#flutter-与-uniapp-的区别\" href=\"#flutter-与-uniapp-的区别\"></a></h1>\n<ul>\n<li>Flutter 和 UniApp 都是用于构建跨平台应用程序的框架</li>\n<li>但它们在设计理念、技术实现和使用场景上有着显著的区别</li>\n</ul>\n<h2 id=\"开发语言\">开发语言<a title=\"#开发语言\" href=\"#开发语言\"></a></h2>\n<ul>\n<li>Flutter 使用 Dart 语言。Dart 是一种由 Google 开发的现代编程语言，专为 Flutter 优化。</li>\n<li>UniApp 主要使用 JavaScript，结合 Vue.js 的语法，这对于前端开发者来说更熟悉。</li>\n</ul>\n<h2 id=\"技术实现\">技术实现<a title=\"#技术实现\" href=\"#技术实现\"></a></h2>\n<ul>\n<li>Flutter 直接编译为原生代码，拥有自己的渲染引擎（Skia），因此能够提供接近原生的性能和丰富的 UI 组件。</li>\n<li>UniApp 采用基于 HTML5 的技术，通过 DCloud 的 mui 框架或其他前端框架实现跨平台应用。它依赖于 WebView 或小程序环境，可能不如 Flutter 在性能上高效。</li>\n</ul>\n<h2 id=\"跨平台能力\">跨平台能力<a title=\"#跨平台能力\" href=\"#跨平台能力\"></a></h2>\n<ul>\n<li>Flutter 能够构建运行在 Android、iOS、Web 和桌面操作系统上的应用程序。</li>\n<li>UniApp 强调其“一次开发，多端运行”的能力，支持发布到 iOS、Android、各大主流小程序平台以及 H5。</li>\n</ul>\n<h2 id=\"性能\">性能<a title=\"#性能\" href=\"#性能\"></a></h2>\n<ul>\n<li>Flutter 由于其直接编译到原生代码和拥有自己的渲染引擎，通常提供更高的性能和更流畅的用户体验。</li>\n<li>UniApp 可能在性能上不如 Flutter，特别是在复杂或资源密集型的应用场景。</li>\n</ul>\n<h2 id=\"用户界面\">用户界面<a title=\"#用户界面\" href=\"#用户界面\"></a></h2>\n<ul>\n<li>Flutter 提供丰富的组件库和高度可定制的 UI 组件，允许创建独特且吸引人的设计。</li>\n<li>UniApp 通常依赖于标准的 HTML5 和 CSS，这可能在一定程度上限制 UI 的创新性和定制性。</li>\n</ul>\n<h2 id=\"生态系统和社区\">生态系统和社区<a title=\"#生态系统和社区\" href=\"#生态系统和社区\"></a></h2>\n<ul>\n<li>Flutter 拥有 Google 的支持和一个活跃的开发者社区，提供丰富的库和工具。</li>\n<li>UniApp 由 DCloud 维护，主要在中国有较大的用户基础，社区和生态相对较小。</li>\n</ul>\n<blockquote>\n<p>总的来说，Flutter 更适合需要高性能和高度定制 UI 的应用程序，而 UniApp 更适合追求快速开发和前端技术栈的项目。选择哪个框架取决于具体的项目需求、团队技能和开发目标。</p>\n</blockquote>\n<p>好了大概先知道这么多，简单的介绍一下 Flutter，这个系列是 Flutter, 所以我会将内容进行划分，本文的内容已经结束，下一篇文章我们再继续。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"Dart-入口函数","link":"2023/12/11/Flutter/02-Dart-入口函数"},"next":{"title":"uni-app-数据传递补充","link":"2023/12/10/Uniapp/15-uni-app-数据传递补充"},"plink":"http://example.com/2023/12/11/Flutter/01-Flutter-开篇/","toc":[{"id":"什么是-flutter","title":"什么是 Flutter","index":"1"},{"id":"flutter-特性","title":"Flutter 特性","index":"2"},{"id":"flutter-与-uniapp-的区别","title":"Flutter 与 UniApp 的区别","index":"3","children":[{"id":"开发语言","title":"开发语言","index":"3.1"},{"id":"技术实现","title":"技术实现","index":"3.2"},{"id":"跨平台能力","title":"跨平台能力","index":"3.3"},{"id":"性能","title":"性能","index":"3.4"},{"id":"用户界面","title":"用户界面","index":"3.5"},{"id":"生态系统和社区","title":"生态系统和社区","index":"3.6"}]}]}