{"title":"『Flutter』项目实战(苹果计算器)搭建基本结构","date":"2024-01-06T12:21:19.000Z","date_formatted":{"ll":"Jan 6, 2024","L":"01/06/2024","MM-DD":"01-06"},"link":"2024/01/06/Flutter/28-『Flutter』项目实战(苹果计算器)搭建基本结构","tags":["Flutter"],"updated":"2024-01-09T05:51:10.859Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240106202245967-753215682.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>好了，经过前面的文章，已经对Flutter的知识大致介绍完毕，接下来就是实战的部分了，本篇文章将会搭建一个苹果计算器的基本结构，后面的文章将会对这个基本结构进行完善，最终完成一个完整的计算器。</p>\n<h1 id=\"2.最终效果\">2.最终效果<a title=\"#2.最终效果\" href=\"#2.最终效果\"></a></h1>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240106203220702-61724253.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"3.目标\">3.目标<a title=\"#3.目标\" href=\"#3.目标\"></a></h1>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240106204026526-1070584702.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>其中的按钮我先不做，只是搭建一个基本的结构，后面的文章将会对这个基本结构进行完善。</p>\n<h1 id=\"4.搭建基本结构\">4.搭建基本结构<a title=\"#4.搭建基本结构\" href=\"#4.搭建基本结构\"></a></h1>\n<h2 id=\"4.1.创建项目\">4.1.创建项目<a title=\"#4.1.创建项目\" href=\"#4.1.创建项目\"></a></h2>\n<p>打开Android Studio，点击<code>Start a new Flutter project</code>，选择<code>Flutter Application</code>，点击<code>Next</code>，输入项目名称，点击<code>Finish</code>，即可创建一个Flutter项目。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240106202440554-1754207486.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240106202458555-2015148655.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240106202559306-369172023.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>然后将项目的视图切换至 <code>project</code>，可以看到项目的基本结构如下：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240106202637147-1461128971.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"4.2.编写基础代码\">4.2.编写基础代码<a title=\"#4.2.编写基础代码\" href=\"#4.2.编写基础代码\"></a></h2>\n<h3 id=\"4.2.1.修改main.dart\">4.2.1.修改<code>main.dart</code><a title=\"#4.2.1.修改main.dart\" href=\"#4.2.1.修改main.dart\"></a></h3>\n<p>在<code>lib</code>目录下，找到<code>main.dart</code>文件，将其内容修改为如下：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">/// <span class=\"language-markdown\">Flutter 程序的入口文件</span></span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:flutter/material.dart&#x27;</span>;<br><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">Flutter 程序的入口函数</span></span><br><span class=\"hljs-keyword\">void</span> main() &#123;<br>  <span class=\"hljs-comment\">// 1.Flutter 主函数，程序一运行起来就会执行</span><br>  <span class=\"hljs-comment\">// 2.运行 App 并且创建组件</span><br>  runApp(<span class=\"hljs-keyword\">const</span> MyApp());<br>&#125;<br><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">MyApp 是一个组件，继承自 StatelessWidget，是一个无状态的组件</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">并且是符合 Material Design 规范的组件</span></span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyApp</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>&#123;<br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">const 关键字表示 MyApp 是一个常量，一旦创建就不会被修改</span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">super.key 表示调用父类的构造函数</span></span><br>  <span class=\"hljs-keyword\">const</span> MyApp(&#123;<span class=\"hljs-keyword\">super</span>.key&#125;);<br><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">自定义无状态组件必须重写父类的 build 方法，返回我们构建好的组件</span></span><br>  <span class=\"hljs-meta\">@override</span><br>  Widget build(BuildContext context) &#123;<br>    <span class=\"hljs-comment\">// MaterialApp 是一个符合 Material Design 规范的组件</span><br>    <span class=\"hljs-keyword\">return</span> MaterialApp(<br>      <span class=\"hljs-comment\">// Scaffold 是一个组件，用于实现页面的基本结构</span><br>      home: Scaffold(<br>        <span class=\"hljs-comment\">// appBar 是 Scaffold 的一个属性，表示页面的头部</span><br>        appBar: AppBar(<br>          <span class=\"hljs-comment\">// title 是 AppBar 的一个属性，表示头部的标题</span><br>          title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">&#x27;计算器&#x27;</span>),<br>          <span class=\"hljs-comment\">// centerTitle 表示标题是否居中</span><br>          centerTitle: <span class=\"hljs-keyword\">true</span>,<br>        ),<br>        <span class=\"hljs-comment\">// body 是 Scaffold 的一个属性，表示页面的主体部分</span><br>        body: <span class=\"hljs-keyword\">const</span> CalculatorWidget(),<br>      ),<br>    );<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">CalculatorWidget 是一个组件，继承自 StatefulWidget，是一个有状态的组件</span></span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CalculatorWidget</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatefulWidget</span> </span>&#123;<br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">const 关键字表示 CalculatorWidget 是一个常量，一旦创建就不会被修改</span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">super.key 表示调用父类的构造函数</span></span><br>  <span class=\"hljs-keyword\">const</span> CalculatorWidget(&#123;<span class=\"hljs-keyword\">super</span>.key&#125;);<br><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">createState 方法返回一个 State 对象</span></span><br>  <span class=\"hljs-meta\">@override</span><br>  State&lt;StatefulWidget&gt; createState() &#123;<br>    <span class=\"hljs-comment\">// 返回一个 CalculatorState 对象</span><br>    <span class=\"hljs-keyword\">return</span> CalculatorState();<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">CalculatorState 是一个 State 对象，继承自 State</span></span><br><span class=\"hljs-comment\">/// <span class=\"language-markdown\">用于保存 CalculatorWidget 的状态</span></span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CalculatorState</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">State</span> </span>&#123;<br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\">保存计算器的输出</span></span><br>  <span class=\"hljs-comment\">/// <span class=\"language-markdown\"><span class=\"hljs-emphasis\">_ 表示私有变量</span></span></span><br>  <span class=\"hljs-built_in\">String</span> _output = <span class=\"hljs-string\">&#x27;0&#x27;</span>;<br><br>  <span class=\"hljs-meta\">@override</span><br>  Widget build(BuildContext context) &#123;<br>    <span class=\"hljs-keyword\">return</span> Column(<br>      children: [<br>        <span class=\"hljs-comment\">// 计算器上半部分内容</span><br>        Container(<br>          <span class=\"hljs-comment\">// color 表示容器的背景颜色</span><br>          color: Colors.black,<br>          <span class=\"hljs-comment\">// alignment 表示容器的对齐方式, Alignment.centerRight 表示右对齐</span><br>          alignment: Alignment.centerRight,<br>          <span class=\"hljs-comment\">// padding 表示容器的内边距, EdgeInsets.fromLTRB 表示分别设置左、上、右、下的内边距</span><br>          padding: <span class=\"hljs-keyword\">const</span> EdgeInsets.fromLTRB(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">0</span>),<br>          child: Text(<br>            <span class=\"hljs-comment\">// _output 表示计算器的输出，因为是动态计算的需要用状态保存</span><br>            _output,<br>            style: <span class=\"hljs-keyword\">const</span> TextStyle(fontSize: <span class=\"hljs-number\">62</span>, color: Colors.white),<br>          ),<br>        ),<br>        <span class=\"hljs-comment\">// 计算器下半部分内容</span><br>        Container(<br>          <span class=\"hljs-comment\">// color 表示容器的背景颜色</span><br>          color: Colors.black,<br>          <span class=\"hljs-comment\">// child 表示容器的子组件</span><br>          child: <span class=\"hljs-keyword\">const</span> Column(<br>            children: [<br>              Row(),<br>              Row(),<br>              Row(),<br>              Row(),<br>              Row(),<br>            ],<br>          ),<br>        )<br>      ],<br>    );<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>运行项目，可以看到如下效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240106210002832-1894191691.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n</ul>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Flutter』项目实战(苹果计算器)搭建页面布局","link":"2024/01/07/Flutter/29-『Flutter』项目实战(苹果计算器)搭建页面布局"},"next":{"title":"『Flutter』多文件开发","link":"2024/01/06/Flutter/27-『Flutter』多文件开发"},"plink":"http://example.com/2024/01/06/Flutter/28-『Flutter』项目实战(苹果计算器)搭建基本结构/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.最终效果","title":"2.最终效果","index":"2"},{"id":"3.目标","title":"3.目标","index":"3"},{"id":"4.搭建基本结构","title":"4.搭建基本结构","index":"4","children":[{"id":"4.1.创建项目","title":"4.1.创建项目","index":"4.1"},{"id":"4.2.编写基础代码","title":"4.2.编写基础代码","index":"4.2","children":[{"id":"4.2.1.修改main.dart","title":"4.2.1.修改main.dart","index":"4.2.1"}]}]},{"id":"end","title":"End","index":"5"}]}