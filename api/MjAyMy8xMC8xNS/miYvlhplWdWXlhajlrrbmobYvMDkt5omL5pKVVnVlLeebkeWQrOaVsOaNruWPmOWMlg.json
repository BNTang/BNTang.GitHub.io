{"title":"手撕Vue-监听数据变化","date":"2023-10-15T10:24:31.000Z","date_formatted":{"ll":"Oct 15, 2023","L":"10/15/2023","MM-DD":"10-15"},"link":"2023/10/15/手写Vue全家桶/09-手撕Vue-监听数据变化","tags":["手写Vue全家桶"],"updated":"2023-10-15T10:33:50.005Z","content":"<p>经过上一篇的介绍，已经实现了将模板编译成具体数据，接下来要介绍的是如何监听数据的变化，本章主要完成这个需求即可。</p>\n<p>在我们文章的开始，我写了一个 Vue 双向数据绑定原理的文章当中封装了一个 Observer 类，这个类的作用就是监听数据的变化，当数据发生变化的时候，会通知订阅者，订阅者会去更新视图。</p>\n<p>所以我先将这个类拿过来，稍微修改一下，没有这个类的源码可以去我之前的文章中查看，或者我这里也贴一下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Observer</span> &#123;<br>    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">data</span>) &#123;<br>        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">observer</span>(data);<br>    &#125;<br><br>    <span class=\"hljs-title function_\">observer</span>(<span class=\"hljs-params\">obj</span>) &#123;<br>        <span class=\"hljs-keyword\">if</span> (obj &amp;&amp; <span class=\"hljs-keyword\">typeof</span> obj === <span class=\"hljs-string\">&#x27;object&#x27;</span>) &#123;<br>            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> obj) &#123;<br>                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">defineReactive</span>(obj, key, obj[key]);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-title function_\">defineReactive</span>(<span class=\"hljs-params\">obj, attr, value</span>) &#123;<br>        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">observer</span>(value);<br>        <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">defineProperty</span>(obj, attr, &#123;<br>            <span class=\"hljs-title function_\">get</span>(<span class=\"hljs-params\"></span>) &#123;<br>                <span class=\"hljs-keyword\">return</span> value;<br>            &#125;,<br>            <span class=\"hljs-attr\">set</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">newValue</span>) =&gt;</span> &#123;<br>                <span class=\"hljs-keyword\">if</span> (value !== newValue) &#123;<br>                    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">observer</span>(newValue);<br>                    value = newValue;<br>                    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;监听到数据的变化, 需要去更新UI&#x27;</span>);<br>                &#125;<br>            &#125;<br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在 Nue 中，我们需要将这个类稍微修改一下，在根据指定的区域和数据去编译渲染界面这一步中，我们需要将数据传入到 Observer 类中，这样就可以监听数据的变化了。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202310/2105804-20231015183203362-1431957239.png\" alt=\"image-20231015183202818\" loading=\"lazy\" class=\"φbp\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// 第一步：给外界传入的所有数据都添加get/set方法</span><br><span class=\"hljs-comment\">//         这样就可以监听数据的变化了</span><br><span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Observer</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$data</span>);<br></code></pre></td></tr></table></figure>\n<p>接下来是测试环节，我们在浏览器中打开页面，修改数据，看看是否会触发监听数据变化的方法：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202310/2105804-20231015183340232-1832278202.png\" alt=\"image-20231015183339873\" loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"手撕Vue-数据驱动界面改变上","link":"2023/10/15/手写Vue全家桶/10-手撕Vue-数据驱动界面改变上"},"next":{"title":"手撕Vue-编译模板数据","link":"2023/10/15/手写Vue全家桶/08-手撕Vue-编译模板数据"},"plink":"http://example.com/2023/10/15/手写Vue全家桶/09-手撕Vue-监听数据变化/","reading_time":"436 words in 3 min"}