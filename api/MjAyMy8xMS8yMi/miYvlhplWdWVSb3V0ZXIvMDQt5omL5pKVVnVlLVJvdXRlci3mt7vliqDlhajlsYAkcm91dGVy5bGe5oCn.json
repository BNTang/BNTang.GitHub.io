{"title":"手撕Vue-Router-添加全局$router属性","date":"2023-11-22T15:05:49.000Z","date_formatted":{"ll":"Nov 22, 2023","L":"11/22/2023","MM-DD":"11-22"},"link":"2023/11/22/手写VueRouter/04-手撕Vue-Router-添加全局$router属性","tags":["手写VueRouter"],"updated":"2023-11-22T16:01:07.434Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231122231908596-1511704482.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<p>经过上一篇文章的介绍，完成了初始化路由相关信息的内容，接下来我们需要将路由信息挂载到Vue实例上，这样我们就可以在Vue实例中使用路由信息了。</p>\n<p>简而言之就是给每一个Vue实例添加一个$router属性，这个属性就是我们在上一篇文章中创建的VueRouter实例。</p>\n<h1 id=\"实现思路\">实现思路<a title=\"#实现思路\" href=\"#实现思路\"></a></h1>\n<p>我们需要在Vue实例创建之前，将VueRouter实例挂载到Vue实例上，这样我们就可以在Vue实例中使用$router属性了。</p>\n<p>在我们实现的 NueRouter 时，我们通过 <code>Vue.use</code> 来安装好我们的路由插件，那么在编写插件中有一个 install 方法，这个方法会在 Vue.use 时被调用，我们可以在这个方法中将 VueRouter 实例挂载到 Vue 实例上。</p>\n<p>在 Vue 中有一个 mixin 方法，这个方法会在每个组件创建之前被调用，我们可以在这个方法中将 VueRouter 实例挂载到 Vue 实例上。</p>\n<p>重写 beforeCreate 方法，将 VueRouter 实例挂载到 Vue 实例上。在 beforeCreate 方法中，我们可以通过 <code>this.$options.router</code> 获取到我们在 new Vue 时传入的 router 对象，然后将这个对象挂载到 Vue 实例上。如果通过 <code>this.$options.router</code> 获取到了 router 对象，那么就说明这个 Vue 实例是根实例，我们就可以将 router 对象挂载到 Vue 实例上了。</p>\n<p>如果获取不到 router 对象，那么就说明这个 Vue 实例不是根实例，我们就需要将父组件的 router 对象挂载到 Vue 实例上。</p>\n<p>大致思路就是这样，接下来我们来实现一下。</p>\n<h1 id=\"代码实现\">代码实现<a title=\"#代码实现\" href=\"#代码实现\"></a></h1>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title class_\">NueRouter</span>.<span class=\"hljs-property\">install</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">Vue, options</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">mixin</span>(&#123;<br>        <span class=\"hljs-title function_\">beforeCreate</span>(<span class=\"hljs-params\"></span>) &#123;<br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$options</span> &amp;&amp; <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$options</span>.<span class=\"hljs-property\">router</span>) &#123;<br>                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$router</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$options</span>.<span class=\"hljs-property\">router</span>;<br>                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$route</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$router</span>.<span class=\"hljs-property\">routerInfo</span>;<br>            &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$router</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$parent</span>.<span class=\"hljs-property\">$router</span>;<br>                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$route</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$router</span>.<span class=\"hljs-property\">routerInfo</span>;<br>            &#125;<br>        &#125;<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>如上的代码就是我们实现的思路，我们通过 <code>this.$options.router</code> 获取到我们在 new Vue 时传入的 router 对象，然后将这个对象挂载到 Vue 实例上。如果获取不到 router 对象，那么就说明这个 Vue 实例不是根实例，我们就需要将父组件的 router 对象挂载到 Vue 实例上。</p>\n<h1 id=\"测试\">测试<a title=\"#测试\" href=\"#测试\"></a></h1>\n<p>接下来就是我们平时要进行的测试了，分别在各个组件当中打印一下 <code>$router</code> 和 <code>$route</code> 属性，看看是否挂载成功。</p>\n<p>App.vue:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;App&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$router</span>);<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;App&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$route</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>Home.vue:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Home&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$router</span>);<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Home&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$route</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>About.vue:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;About&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$router</span>);<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;About&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$route</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>最后我们来看一下效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231122235953304-2070379343.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>可以看到我们的路由信息已经挂载到 Vue 实例上了。</p>\n<h1 id=\"最后\">最后<a title=\"#最后\" href=\"#最后\"></a></h1>\n<p>到这里我们就完成了将路由信息挂载到 Vue 实例上的功能，接下来下一篇文章我会带着大家来实现 <code>实现router-link</code>。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231122231128423-999760020.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"文章模板","link":"2023/11/22/关于/01-关于"},"next":{"title":"手撕Vue-Router-初始化路由信息","link":"2023/11/21/手写VueRouter/03-手撕Vue-Router-初始化路由信息"},"plink":"http://example.com/2023/11/22/手写VueRouter/04-手撕Vue-Router-添加全局$router属性/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"实现思路","title":"实现思路","index":"2"},{"id":"代码实现","title":"代码实现","index":"3"},{"id":"测试","title":"测试","index":"4"},{"id":"最后","title":"最后","index":"5"}],"reading_time":"787 words in 5 min"}