{"title":"『Flutter』项目实战(苹果计算器)处理计算逻辑","date":"2024-01-07T13:47:01.000Z","date_formatted":{"ll":"Jan 7, 2024","L":"01/07/2024","MM-DD":"01-07"},"link":"2024/01/07/Flutter/31-『Flutter』项目实战(苹果计算器)处理计算逻辑","tags":["Flutter"],"updated":"2024-01-19T03:14:11.068Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107214911710-122548879.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"1.前言\">1.前言<a title=\"#1.前言\" href=\"#1.前言\"></a></h1>\n<p>经过上一篇文章的介绍，已经完成了项目的输入数据，接下来就是处理计算逻辑了。</p>\n<h1 id=\"2.计算逻辑-ac、+/-、%\">2.计算逻辑 AC、+/-、%<a title=\"#2.计算逻辑-ac、+/-、%\" href=\"#2.计算逻辑-ac、+/-、%\"></a></h1>\n<p>首先实现 <code>AC</code>、<code>+/-</code>、<code>%</code>，先定义需要使用的变量：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">// 保存前面输入数据</span><br><span class=\"hljs-built_in\">dynamic</span> _num1 = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-comment\">// 保存后面输入数据</span><br><span class=\"hljs-built_in\">dynamic</span> _num2 = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-comment\">// 保存当前计算状态</span><br><span class=\"hljs-built_in\">bool</span> isCalculate = <span class=\"hljs-keyword\">false</span>;<br></code></pre></td></tr></table></figure>\n<p>然后实现 <code>AC</code>、<code>+/-</code>、<code>%</code> 的点击事件：</p>\n<p><code>AC</code>：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\">_output = <span class=\"hljs-string\">&quot;0&quot;</span>;<br>_num1 = <span class=\"hljs-number\">0</span>;<br>_num2 = <span class=\"hljs-number\">0</span>;<br>isCalculate = <span class=\"hljs-keyword\">false</span>;<br></code></pre></td></tr></table></figure>\n<p><code>+/-</code>：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">// 负负得正</span><br><span class=\"hljs-keyword\">if</span> (_output.contains(<span class=\"hljs-string\">&quot;.&quot;</span>))&#123;<br>  <span class=\"hljs-comment\">// 小数</span><br>  _output = (-<span class=\"hljs-built_in\">double</span>.parse(_output)).toString();<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>  <span class=\"hljs-comment\">// 整数</span><br>  _output = (-<span class=\"hljs-built_in\">int</span>.parse(_output)).toString();<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>%</code>, 在实现 <code>%</code> 之前给大家介绍一下在 Flutter 中如何安装第三方库，因为这里我需要使用到一个第三方库来解决精度问题，所以需要先安装：</p>\n<p>在 Flutter 中安装第三方库通常涉及以下几个步骤：</p>\n<ol>\n<li><strong>找到库</strong>: 访问 <a href=\"https://pub.dev/\" target=\"_blank\">pub.dev</a>（官方的 Flutter 和 Dart 包管理网站），并找到你需要的库。库页面将提供安装指令、文档和使用示例。</li>\n<li><strong>更新 <code>pubspec.yaml</code> 文件</strong>: 在你的 Flutter 项目根目录中找到 <code>pubspec.yaml</code> 文件。在 <code>dependencies</code> 部分添加你想要安装的库及其版本。例如，如果你想安装一个名为 <code>http</code> 的库，你会这样做:</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">dependencies:</span><br>  <span class=\"hljs-attr\">flutter:</span><br>    <span class=\"hljs-attr\">sdk:</span> <span class=\"hljs-string\">flutter</span><br>  <span class=\"hljs-comment\"># 添加这行，版本号可能不同</span><br>  <span class=\"hljs-attr\">http:</span> <span class=\"hljs-string\">^0.13.3</span><br></code></pre></td></tr></table></figure>\n<p><strong>安装库</strong>: 打开终端（或命令提示符、或IDE的终端），导航到你的项目目录，然后运行以下命令以获取和安装新的依赖：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">flutter pub get<br></code></pre></td></tr></table></figure>\n<p><strong>在项目中使用库</strong>: 在你的 Dart 代码中，现在你可以引用并使用这个库了。通常，你需要导入包含你需要的功能的特定文件。例如，如果你安装了 <code>http</code> 库，你可能需要这样做：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:http/http.dart&#x27;</span> <span class=\"hljs-keyword\">as</span> http;<br></code></pre></td></tr></table></figure>\n<p><strong>查看文档和示例</strong>: 返回到你在 pub.dev 上找到的库页面，阅读文档和查看示例代码以了解如何使用这个库。</p>\n<p>确保遵循库的官方文档，因为不同的库可能有特定的安装步骤或依赖要求。</p>\n<p>我这里使用 <code>decimal</code>：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107215938312-585281384.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107220006449-1802655239.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p><code>%</code>：</p>\n<p>安装 <code>decimal</code>：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107220236154-456029451.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">flutter pub get<br></code></pre></td></tr></table></figure>\n<p>导入与定义 <code>decimal</code>：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">// 引入解决丢失精度库</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:decimal/decimal.dart&#x27;</span>;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">// 快速处理丢失精度结构</span><br><span class=\"hljs-keyword\">final</span> d = (<span class=\"hljs-built_in\">String</span> s) =&gt; Decimal.parse(s);<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">// 百分号, 除以100</span><br>_output = (d(_output) / d(<span class=\"hljs-string\">&quot;100.0&quot;</span>)).toDouble().toString();<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107220425554-733932633.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>查看一波效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107220536772-1271737152.gif\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"3.计算逻辑-+、-、x、÷、=\">3.计算逻辑 +、-、x、÷、=<a title=\"#3.计算逻辑-+、-、x、÷、=\" href=\"#3.计算逻辑-+、-、x、÷、=\"></a></h1>\n<p>在定义一个变量用于保存当前运算符 <code>_operand</code>：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">// 保存当前运算符</span><br><span class=\"hljs-built_in\">String</span> _operand = <span class=\"hljs-string\">&quot;&quot;</span>;<br></code></pre></td></tr></table></figure>\n<p>然后实现 <code>+</code>、<code>-</code>、<code>x</code>、<code>÷</code>、<code>=</code> 的点击事件：</p>\n<p><code>+</code>、<code>-</code>、<code>x</code>、<code>÷</code>：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;÷&quot;</span>:<br>  isCalculate = <span class=\"hljs-keyword\">true</span>;<br>  _operand = btnText;<br><br>  <span class=\"hljs-comment\">// 如果已经保存了上一次输入内容, 那么就做运算</span><br>  <span class=\"hljs-keyword\">if</span> (_num1 != <span class=\"hljs-number\">0</span>) &#123;<br>    <span class=\"hljs-comment\">// 小数之间的运算</span><br>    <span class=\"hljs-keyword\">if</span> (_output.contains(<span class=\"hljs-string\">&quot;.&quot;</span>) || _num1 <span class=\"hljs-keyword\">is</span> <span class=\"hljs-built_in\">double</span>) &#123;<br>      <span class=\"hljs-comment\">// 保存当前输入值</span><br>      _num2 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>      _output = (d(_num1.toString()) / d(_num2.toString()))<br>          .toDouble()<br>          .toString();<br>      _num1 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>      <span class=\"hljs-comment\">// 整数之间运算</span><br>      _num2 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>      <span class=\"hljs-comment\">// 保存当前输入值</span><br>      _output = (d(_num1.toString()) / d(_num2.toString()))<br>          .toBigInt()<br>          .toString();<br>      _num1 = <span class=\"hljs-built_in\">int</span>.parse(_output);<br>    &#125;<br>  &#125;<br>  <span class=\"hljs-keyword\">break</span>;<br><span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;x&quot;</span>:<br>  isCalculate = <span class=\"hljs-keyword\">true</span>;<br>  _operand = btnText;<br>  <span class=\"hljs-comment\">// 如果已经保存了上一次输入内容, 那么就做运算</span><br>  <span class=\"hljs-keyword\">if</span> (_num1 != <span class=\"hljs-number\">0</span>) &#123;<br>    <span class=\"hljs-comment\">// 小数之间的运算</span><br>    <span class=\"hljs-keyword\">if</span> (_output.contains(<span class=\"hljs-string\">&quot;.&quot;</span>) || _num1 <span class=\"hljs-keyword\">is</span> <span class=\"hljs-built_in\">double</span>) &#123;<br>      <span class=\"hljs-comment\">// 保存当前输入值</span><br>      _num2 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>      _output = (d(_num1.toString()) * d(_num2.toString()))<br>          .toDouble()<br>          .toString();<br>      _num1 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>      <span class=\"hljs-comment\">// 整数之间运算</span><br>      <span class=\"hljs-comment\">// 保存当前输入值</span><br>      _num2 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>      _output = (d(_num1.toString()) * d(_num2.toString()))<br>          .toBigInt()<br>          .toString();<br>      _num1 = <span class=\"hljs-built_in\">int</span>.parse(_output);<br>    &#125;<br>  &#125;<br>  <span class=\"hljs-keyword\">break</span>;<br><span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;+&quot;</span>:<br>  isCalculate = <span class=\"hljs-keyword\">true</span>;<br>  _operand = btnText;<br>  <span class=\"hljs-keyword\">if</span> (_num1 != <span class=\"hljs-number\">0</span>) &#123;<br>    <span class=\"hljs-comment\">// 如果已经保存了上一次输入内容, 那么就做运算</span><br>    <span class=\"hljs-keyword\">if</span> (_output.contains(<span class=\"hljs-string\">&quot;.&quot;</span>) || _num1 <span class=\"hljs-keyword\">is</span> <span class=\"hljs-built_in\">double</span>) &#123;<br>      <span class=\"hljs-comment\">// 小数之间的运算</span><br>      <span class=\"hljs-comment\">// 保存当前输入值</span><br>      _num2 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>      _output = (d(_num1.toString()) + d(_num2.toString()))<br>          .toDouble()<br>          .toString();<br>      _num1 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>      <span class=\"hljs-comment\">// 整数之间运算</span><br>      <span class=\"hljs-comment\">// 保存当前输入值</span><br>      _num2 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>      _output = (d(_num1.toString()) + d(_num2.toString()))<br>          .toBigInt()<br>          .toString();<br>      _num1 = <span class=\"hljs-built_in\">int</span>.parse(_output);<br>    &#125;<br>  &#125;<br>  <span class=\"hljs-keyword\">break</span>;<br><span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;-&quot;</span>:<br>  isCalculate = <span class=\"hljs-keyword\">true</span>;<br>  _operand = btnText;<br>  <span class=\"hljs-keyword\">if</span> (_num1 != <span class=\"hljs-number\">0</span>) &#123;<br>    <span class=\"hljs-comment\">// 如果已经保存了上一次输入内容, 那么就做运算</span><br>    <span class=\"hljs-keyword\">if</span> (_output.contains(<span class=\"hljs-string\">&quot;.&quot;</span>) || _num1 <span class=\"hljs-keyword\">is</span> <span class=\"hljs-built_in\">double</span>) &#123;<br>      <span class=\"hljs-comment\">// 小数之间的运算</span><br>      <span class=\"hljs-comment\">// 保存当前输入值</span><br>      _num2 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>      _output = (d(_num1.toString()) - d(_num2.toString()))<br>          .toDouble()<br>          .toString();<br>      _num1 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>      <span class=\"hljs-comment\">// 整数之间运算</span><br>      <span class=\"hljs-comment\">// 保存当前输入值</span><br>      _num2 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>      _output = (d(_num1.toString()) - d(_num2.toString()))<br>          .toBigInt()<br>          .toString();<br>      _num1 = <span class=\"hljs-built_in\">int</span>.parse(_output);<br>    &#125;<br>  &#125;<br>  <span class=\"hljs-keyword\">break</span>;<br><span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;=&quot;</span>:<br>  onBtnClick(_operand);<br>  _operand = <span class=\"hljs-string\">&quot;&quot;</span>;<br>  isCalculate = <span class=\"hljs-keyword\">false</span>;<br>  _num1 = <span class=\"hljs-number\">0</span>;<br>  _num2 = <span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-keyword\">break</span>;<br></code></pre></td></tr></table></figure>\n<p>default 里面的逻辑，还需要改动一下：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-comment\">// 判断是否点击了运算符, 如果点击了就将当前的数据先存储起来</span><br><span class=\"hljs-keyword\">if</span> (isCalculate) &#123;<br>  <span class=\"hljs-keyword\">if</span> (_output.contains(<span class=\"hljs-string\">&quot;.&quot;</span>)) &#123;<br>    _num1 = <span class=\"hljs-built_in\">double</span>.parse(_output);<br>  &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    _num1 = <span class=\"hljs-built_in\">int</span>.parse(_output);<br>  &#125;<br>  _output = <span class=\"hljs-string\">&quot;0&quot;</span>;<br>  isCalculate = <span class=\"hljs-keyword\">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107223320893-1747393828.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p><code>AC</code> 需要在加一句清空当前运算符的代码：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\">_operand = <span class=\"hljs-string\">&quot;&quot;</span>;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107223528878-1513706867.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>好，代码写完了，我主要解释下 <code>除法</code> 与 <code>=</code> 的逻辑, 然后其它的就是类似的了。</p>\n<p>实现 <code>+</code> 的逻辑, 首先要将 isCalculate 设置为 true, 然后将当前的运算符保存到 <code>_operand</code> 中，然后判断 <code>_num1</code> 是否为 0，如果不为 0，说明已经保存了上一次输入的数据，那么就做运算，如果为 0，说明是第一次输入，那么就不做运算。</p>\n<p>然后判断 <code>_output</code> 是否包含小数点，如果包含小数点，说明是小数，那么就将 <code>_num1</code> 和 <code>_num2</code> 都转换为 <code>double</code> 类型，然后做除法运算，最后将结果转换为 <code>String</code> 类型，然后将 <code>_num1</code> 保存为当前的结果。</p>\n<p>如果不包含小数点，说明是整数，那么就将 <code>_num1</code> 和 <code>_num2</code> 都转换为 <code>int</code> 类型，然后做除法运算，最后将结果转换为 <code>String</code> 类型，然后将 <code>_num1</code> 保存为当前的结果。</p>\n<p>实现 <code>=</code> 的逻辑，首先调用 <code>onBtnClick</code> 方法，将当前的运算符传递进去，然后将 <code>_operand</code> 设置为空，将 <code>isCalculate</code> 设置为 false，将 <code>_num1</code> 和 <code>_num2</code> 设置为 0。</p>\n<p>最后的效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240107223949505-440792031.gif\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>代码中有可优化的代码，我就不优化了，大家可以自行优化。</p>\n<h1 id=\"end\">End<a title=\"#end\" href=\"#end\"></a></h1>\n<blockquote>\n<ul>\n<li>🐤如果您对本文有任何疑问或想法，请在评论区留言，我将很乐意与您交流。</li>\n<li>🐰您的每一条评论对我都至关重要，我会尽快给予回复。</li>\n<li>🎈如果您觉得这篇文章对您有所启发或帮助，请不吝赞赏、收藏或分享。</li>\n<li>🎁您的每一个动作都是对我创作的最大鼓励和支持。</li>\n<li>👍谢谢您的阅读和陪伴！</li>\n<li>😁如果您觉得本文对您有所帮助，可以关注我的公众号 <code>BNTang</code>，我会不定期分享一些干货文章。</li>\n<li>🍻感谢您的支持，我会继续努力的！</li>\n</ul>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『Flutter』打包应用程序","link":"2024/01/07/Flutter/32-『Flutter』打包应用程序"},"next":{"title":"『Flutter』项目实战(苹果计算器)处理输入数据","link":"2024/01/07/Flutter/30-『Flutter』项目实战(苹果计算器)处理输入数据"},"plink":"http://example.com/2024/01/07/Flutter/31-『Flutter』项目实战(苹果计算器)处理计算逻辑/","toc":[{"id":"1.前言","title":"1.前言","index":"1"},{"id":"2.计算逻辑-ac、+/-、%","title":"2.计算逻辑 AC、+&#x2F;-、%","index":"2"},{"id":"3.计算逻辑-+、-、x、÷、=","title":"3.计算逻辑 +、-、x、÷、&#x3D;","index":"3"},{"id":"end","title":"End","index":"4"}]}