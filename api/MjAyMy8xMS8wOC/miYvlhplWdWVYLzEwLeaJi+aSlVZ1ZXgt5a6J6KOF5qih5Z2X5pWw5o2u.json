{"title":"手撕Vuex-安装模块数据","date":"2023-11-08T15:41:18.000Z","date_formatted":{"ll":"Nov 8, 2023","L":"11/08/2023","MM-DD":"11-08"},"link":"2023/11/08/手写VueX/10-手撕Vuex-安装模块数据","tags":["手写Vuex"],"updated":"2023-11-18T16:13:36.009Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231119001333664-742597561.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<p>根据上一篇，【手写Vuex】-提取模块信息，我们已经可以获取到模块的信息了，将模块信息变成了我们想要的数据结构，接下来我们就要根据模块的信息，来安装模块的数据。</p>\n<p>在上一篇当中我们定义了一个 ModuleCollection 类，这个类的作用就是将模块的信息转换成我们想要的数据结构。</p>\n<p>接下来我们就要根据这个数据结构来安装模块的数据。</p>\n<h1 id=\"安装模块数据\">安装模块数据<a title=\"#安装模块数据\" href=\"#安装模块数据\"></a></h1>\n<p>那么怎么安装模块数据呢？首先我们先看一下怎么安装数据，在安装数据之前，我们在创建 Store 的时候我们的 root 也就是根组件已经安装完毕了，所以我们的根组件就不用安装了，我们只需要安装根组件下面的子组件的数据就可以了。</p>\n<p>那么安装子模块的数据我们怎么安装呢？我这里直接开辟一个全新的方法来处理这件事情，安装子模块的数据，我们先来看一下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">// 安装子模块的数据</span><br><span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">initModules</span>([], <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">modules</span>.<span class=\"hljs-property\">root</span>);<br><br><span class=\"hljs-title function_\">initModules</span>(<span class=\"hljs-params\">arr, <span class=\"hljs-variable language_\">module</span></span>) &#123;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231109234239763-2011410387.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>如上我开辟对的方法我们先来看一下这个方法的参数，第一个参数是一个空数组，第二个参数是我们的根模块。</p>\n<p>那么我们在这个方法里面要做什么呢？我们要做的就是安装子模块的数据，那么我们怎么安装子模块的数据呢？首先我们要知道当前的模块是不是根模块，如果是根模块的话，我们就不用安装了，因为根模块已经安装完毕了，我们只需要安装根模块下面的子模块就可以了。</p>\n<p>那么我们怎么判断当前的模块是不是根模块呢？我们可以通过 arr 这个数组来判断，如果 arr 这个数组是空数组的话，那么我们就可以判断当前的模块是根模块，如果不是空数组的话，那么我们就可以判断当前的模块是子模块。</p>\n<p>好了我们先上代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">initModules</span>(<span class=\"hljs-params\">arr, <span class=\"hljs-variable language_\">module</span></span>) &#123;<br>    <span class=\"hljs-keyword\">if</span> (arr.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>) &#123;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> moduleName <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">_children</span>) &#123;<br>        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">initModules</span>(arr.<span class=\"hljs-title function_\">concat</span>(moduleName), <span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">_children</span>[moduleName]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在 initModules 当中我添加了一个 if，一个 for，if 主要作用就是用于判断如果当前模块是子模块，那么就需要将数据安装到 this.state 上面，对应着：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">if</span> (arr.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>) &#123;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>如果当前模块不是子模块，那么就需要从根模块中取出子模块的信息来安装，对应着：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> moduleName <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">_children</span>) &#123;<br>    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">initModules</span>(arr.<span class=\"hljs-title function_\">concat</span>(moduleName), <span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">_children</span>[moduleName]);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>好了我们先不继续往下写，我们先来打印一下 arr，看一下 arr 是什么样子的，我们来看一下打印的结果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231109235044984-1608388749.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>通过如上结果打印我们就可以很好的根据这个结构来完善我们的代码了, 思路是这样的，如果 arr 是空数组的话，那么我们就可以判断当前的模块是根模块，如果不是空数组的话，那么我们就可以判断当前的模块是子模块。</p>\n<p>是子模块的话我们要做的就是将子模块的数据安装到 this.state 上面，如果是根模块的话，我们就不用安装了，因为根模块已经安装完毕了，我们只需要安装根模块下面的子模块就可以了。</p>\n<p>代码继续往下走，我们现在主要编写的代码就是实现 <code>if (arr.length &gt; 0)</code> 这个判断条件的代码，说明是子模块，我们是 arr 打印结果是 <code>[] [home] [account] [account, login]</code> 那么我们首先要安装的是 home，然后是 account，然后是 login。</p>\n<p>那么我们怎么安装呢？如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">if</span> (arr.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>) &#123;<br>    <span class=\"hljs-keyword\">let</span> parent = arr.<span class=\"hljs-title function_\">splice</span>(<span class=\"hljs-number\">0</span>, arr.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>).<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">state, currentKey</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> state[currentKey];<br>    &#125;, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">state</span>);<br>    <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">set</span>(parent, arr[arr.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>], <span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">_state</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>我们先来看一下这段代码，首先我们先来看一下 <code>arr.splice(0, arr.length - 1)</code> 这段代码，这段代码的作用就是将 arr 数组的最后一个元素去掉，然后返回一个新的数组，这个新的数组就是我们要安装的模块的父模块的路径。</p>\n<p>然后我们再来看一下 <code>reduce((state, currentKey) =&gt; &#123; return state[currentKey]; &#125;, this.state)</code> 这段代码，这段代码的作用就是根据父模块的路径来获取到父模块的数据，然后我们再来看一下 <code>Vue.set(parent, arr[arr.length - 1], module._state)</code> 这段代码，这段代码的作用就是将子模块的数据安装到父模块的数据上面。</p>\n<h1 id=\"测试结果\">测试结果<a title=\"#测试结果\" href=\"#测试结果\"></a></h1>\n<p>好了我们先来看一下代码的执行结果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231113010907024-756150635.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>我们的数据绑定好了，我们看看页面上是否可以展示对应模块的数据如下图：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202311/2105804-20231113231319422-507660339.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>可以看到是可以的，ok，完美，记得展示数据的时候需要将 getters，mutations，注释掉，不然的话就会报错，我还没有实现，我们下一篇来完成这个功能。</p>\n<h1 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h1>\n<p>好了，这篇文章我们主要是实现了安装子模块的数据，我们通过一个新的方法来安装子模块的数据，然后我们通过一个 if 来判断当前的模块是不是子模块，如果是子模块的话，我们就将子模块的数据安装到父模块的数据上面，如果不是子模块的话，我们就不用安装了，因为根模块已经安装完毕了，我们只需要安装根模块下面的子模块就可以了。</p>\n<p>可能大家对 <code>arr.splice(0, arr.length - 1)</code> 这段代码不是很理解，这段代码的作用就是将 arr 数组的最后一个元素去掉，然后返回一个新的数组，这个新的数组就是我们要安装的模块的父模块的路径。</p>\n<p>例如我们的 arr 存放的是 <code>[home]</code> 那么我们的 <code>arr.splice(0, arr.length - 1)</code> 就会返回一个空数组，这个空数组就是我们要安装的模块的父模块的路径。</p>\n<p>空数组的话，然后又调用了 reduce，这回是空数组，那么就会返回 this.state，也就是根模块的数据，然后我们再来看一下 <code>Vue.set(parent, arr[arr.length - 1], module._state)</code> 这段代码，这段代码的作用就是将子模块的数据安装到父模块的数据上面。</p>\n<p>parent 就是根模块的数据，arr[arr.length - 1] 就是我们要安装的模块的名称，module._state 就是我们要安装的模块的数据。</p>\n<p>这是没有层级嵌套的字模块安装的情况，我们再来看一个有层级嵌套的子模块安装的情况，例如我们的 arr 存放的是 <code>[account, login]</code> 那么我们的 <code>arr.splice(0, arr.length - 1)</code> 就会返回一个 <code>[account]</code> 数组，这个数组就是我们要安装的模块的父模块的路径。</p>\n<p>然后我们再来看一下 <code>reduce((state, currentKey) =&gt; &#123; return state[currentKey]; &#125;, this.state)</code> 这段代码，这段代码的作用就是根据父模块的路径来获取到父模块的数据，例如我们的父模块的路径是 <code>[account]</code> 那么我们就会获取到 account 模块的数据，然后我们再来看一下 <code>Vue.set(parent, arr[arr.length - 1], module._state)</code> 这段代码，这段代码的作用就是将子模块的数据安装到父模块的数据上面。</p>\n<p>parent 就是 account 模块的数据，arr[arr.length - 1] 就是我们要安装的模块的名称，module._state 就是我们要安装的模块的数据。</p>\n<p>好了，这篇文章我们主要是实现了安装模块的数据，下一篇文章将会实现安装模块的方法。</p>\n","prev":{"title":"我人生职场当中的第一个三年","link":"2023/11/09/程序人生/01-我人生职场当中的第一个三年"},"next":{"title":"手撕Vuex-提取模块信息","link":"2023/11/05/手写VueX/09-手撕Vuex-提取模块信息"},"plink":"http://example.com/2023/11/08/手写VueX/10-手撕Vuex-安装模块数据/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"安装模块数据","title":"安装模块数据","index":"2"},{"id":"测试结果","title":"测试结果","index":"3"},{"id":"总结","title":"总结","index":"4"}],"reading_time":"2070 words in 14 min"}