{"title":"『云数据库』更新数据","date":"2023-12-03T09:46:02.000Z","date_formatted":{"ll":"Dec 3, 2023","L":"12/03/2023","MM-DD":"12-03"},"link":"2023/12/03/Web/微信小程序/云开发/65-『云数据库』更新数据","tags":["云开发","微信小程序"],"updated":"2024-03-04T02:19:39.723Z","content":"<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231203183315610-1718151135.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"一、前言\">一、前言<a title=\"#一、前言\" href=\"#一、前言\"></a></h1>\n<blockquote>\n<ul>\n<li>本篇文章是『云数据库』文章的第 3 篇，主要介绍『云数据库』更新数据</li>\n</ul>\n</blockquote>\n<p>继上一篇文章中介绍了如何删除云数据库中的数据以及相关注意事项后，我们将接着探讨数据更新操作的具体方法。</p>\n<h1 id=\"二、更新数据\">二、更新数据<a title=\"#二、更新数据\" href=\"#二、更新数据\"></a></h1>\n<p>在微信云开发环境中，有两种方法可以更新数据：一种是使用 <code>set</code> 方法，另一种是使用 <code>update</code> 方法。下面，我们将详细了解这两种方法的不同之处。</p>\n<p>首先，让我们来了解一下 <code>set</code> 方法：</p>\n<h2 id=\"2.1.set\">2.1.set<a title=\"#2.1.set\" href=\"#2.1.set\"></a></h2>\n<p><code>set</code> 方法的作用是直接覆盖现有数据。如果指定的记录不存在，它会创建一条新的数据记录；如果记录已存在，则会用新数据完全替换原有记录。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onUpdateTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">doc</span>(<span class=\"hljs-string\">&#x27;08bade59659d76d500164ec96f5c795d&#x27;</span>).<span class=\"hljs-title function_\">set</span>(&#123;<br>        <span class=\"hljs-attr\">data</span>: &#123;<br>            <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">20</span><br>        &#125;<br>    &#125;);<br><br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>修改操作前，ID 为 <code>08bade59659d76d500164ec96f5c795d</code> 的数据项包含以下属性：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114112827211-1042713673.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>修改之后，原有的 <code>name</code> 属性已被移除，字段已更新为最新的属性值。</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114113151623-1869754272.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"2.2.update\">2.2.update<a title=\"#2.2.update\" href=\"#2.2.update\"></a></h2>\n<p><code>update</code> 方法用于更新现有数据记录的指定字段。如果尝试更新的记录不存在，则不会新增记录，而是返回一个错误；如果记录存在，则指定字段的内容会被更新，而其他字段保持不变，不会更改记录的属性结构。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onUpdateTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">doc</span>(<span class=\"hljs-string\">&#x27;08bade59659d76d500164eca51e17bd0&#x27;</span>).<span class=\"hljs-title function_\">update</span>(&#123;<br>        <span class=\"hljs-attr\">data</span>: &#123;<br>            <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">99</span><br>        &#125;<br>    &#125;);<br><br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在执行修改操作之前，ID 为 <code>08bade59659d76d500164eca51e17bd0</code> 的记录数据如下所示：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114113055211-299962750.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>修改之后，<code>age</code> 字段的值已从 20 更新为 99，这正符合我们预期的效果：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240114113131305-548494515.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"三、批量更新\">三、批量更新<a title=\"#三、批量更新\" href=\"#三、批量更新\"></a></h1>\n<p>当我们需要一次性更新多条记录时，应当使用 <code>update</code> 方法进行批量操作。相对地，<code>set</code> 方法不支持批量更新，它只能对单一记录执行更新。</p>\n<p>要执行批量更新操作，我们首先使用 <code>where</code> 方法指定需要更新记录的条件。然后，应用 <code>update</code> 方法对满足这些条件的所有记录进行批量修改。具体代码示例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">onUpdateTap</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> stuCollection.<span class=\"hljs-title function_\">where</span>(&#123;<br>        <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">99</span><br>    &#125;).<span class=\"hljs-title function_\">update</span>(&#123;<br>        <span class=\"hljs-attr\">data</span>: &#123;<br>            <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">100</span><br>        &#125;<br>    &#125;);<br><br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>上述代码演示了一个更新操作，其中我们设定了更新条件为 <code>age</code> 字段等于 <code>99</code> 的记录。接着，在更新过程中，我们将满足这一条件的记录中的 <code>age</code> 字段值更改为 <code>100</code>。当然，我们也可以设置更复杂的条件判断，比如指定 <code>age</code> 字段的值必须大于 <code>90</code> 且小于 <code>100</code> 来选择记录范围。</p>\n<p>至此，本文的核心内容已经介绍完毕。通过阅读，您应该掌握了如何利用代码更新云数据库中的数据，以及执行此类操作时应注意的事项。</p>\n<p>参考资料来源于微信小程序开发者文档，具体内容请见：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-sdk-api/database/Document.html\" target=\"_blank\">微信小程序云开发数据库文档</a>。</p>\n<p>如下图所示，文档中详细介绍了……：</p>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202401/2105804-20240118072343385-37375076.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n<p>分别有’set’ 和 ‘update’ 这两种方法，你只需要记住它们各自的特性以及使用时的注意事项，还有各自适用的场景。</p>\n<p>使用场景：</p>\n<ul>\n<li><code>set</code>：该方法适用于类似设置个人标签的情形，它每次操作都会覆盖现有数据。如果目标数据不存在，<code>set</code> 将创建新的数据条目；如果目标数据已存在，<code>set</code> 则会将其覆盖。</li>\n<li><code>update</code>：此方法主要用于更新文档中的特定字段的值。当您的目的是修改文档的某些特定字段，而非整个文档时，应选用 <code>update</code>。</li>\n</ul>\n<p>就先介绍到这里。请期待我的项目，我会在项目中为大家带来更多实操体验。届时，你将会有更深入的了解。</p>\n<h1 id=\"四、总结\">四、总结<a title=\"#四、总结\" href=\"#四、总结\"></a></h1>\n<p>通过本文的学习，您将能够掌握以下核心知识点：</p>\n<ul>\n<li>1.了解 <code>set</code> 方法和 <code>update</code> 方法的区别。</li>\n<li>2.掌握如何使用代码更新云数据库中的数据。</li>\n<li>3.了解更新操作时的注意事项。</li>\n<li>4.掌握批量更新操作的方法。</li>\n<li>5.了解 <code>set</code> 和 <code>update</code> 方法的适用场景。</li>\n</ul>\n<blockquote>\n<p>最后，我要感谢您阅读本文。如果您觉得文章有用，请不吝点赞、收藏或者转发。您的支持是我不断创作与分享的最大动力。让我们携手在学习的旅途上相互促进，共同享受知识带来的快乐。</p>\n</blockquote>\n<p><img src=\"https://img2023.cnblogs.com/blog/2105804/202312/2105804-20231211215004818-977875224.png\" alt loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"『云数据库』删除数据","link":"2023/12/03/Web/微信小程序/云开发/64-『云数据库』删除数据"},"next":{"title":"『云存储』上传文件","link":"2023/12/03/Web/微信小程序/云开发/67-『云存储』上传文件"},"plink":"http://example.com/2023/12/03/Web/微信小程序/云开发/65-『云数据库』更新数据/","toc":[{"id":"一、前言","title":"一、前言","index":"1"},{"id":"二、更新数据","title":"二、更新数据","index":"2","children":[{"id":"2.1.set","title":"2.1.set","index":"2.1"},{"id":"2.2.update","title":"2.2.update","index":"2.2"}]},{"id":"三、批量更新","title":"三、批量更新","index":"3"},{"id":"四、总结","title":"四、总结","index":"4"}]}